{
  "contractName": "PocketSwapFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeSetter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pair",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "PairCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allPairs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeSetter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allPairsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "createPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "pair",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeSetter",
          "type": "address"
        }
      ],
      "name": "setFeeSetter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeSetter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeSetter\",\"type\":\"address\"}],\"name\":\"setFeeSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/ilyk/projects/midgardtech/xpocket-PocketSwap/contracts/pocketswap/PocketSwapFactory.sol\":\"PocketSwapFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/ilyk/projects/midgardtech/xpocket-PocketSwap/contracts/pocketswap/PocketSwapERC20.sol\":{\"keccak256\":\"0xdec2c2597cc7ee97bd19c81894983409a97c0acbfca1f2adfd9d2e82c5eab4dd\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://6a2b827be97f3067654a59cf88d811b80ebf8401a4e93a45bdb6d666400e9008\",\"dweb:/ipfs/QmREoUELLL4bMoMxqT9mhr97Tagt2EJsXThdYoegTEMa5T\"]},\"/Users/ilyk/projects/midgardtech/xpocket-PocketSwap/contracts/pocketswap/PocketSwapFactory.sol\":{\"keccak256\":\"0xcc8b59c4839b95f0e9b7cdc46bbed1e2744626c2b70f6dd5632af37c30cb4ca9\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://2de4856fbe78a75d2696870992dae99f8d27813e2d47fa60f049b36514d1b7e9\",\"dweb:/ipfs/QmWzFFiiNgCpoQxB9W7hGAnDUWcrmLMuzrJRxCqzrU2HTG\"]},\"/Users/ilyk/projects/midgardtech/xpocket-PocketSwap/contracts/pocketswap/PocketSwapPair.sol\":{\"keccak256\":\"0xc01b60bdc8ade209abb0905e94a10b0f734b580e5da72a55fbd43d5186e2a589\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://55ef8d26148fa17a29254868e1922dd0c727c2a12425dbef92dd65879f08a93c\",\"dweb:/ipfs/Qmcc2drx9miQrRfykorKJ5xFWvDdXSX7Mt5zjFm8wnmfrQ\"]},\"/Users/ilyk/projects/midgardtech/xpocket-PocketSwap/contracts/pocketswap/interfaces/IPocketSwapERC20.sol\":{\"keccak256\":\"0x370ec833d0b2d89243a8c49fa7b42c36e8c2e7877bb521e089f34d91a6ceb853\",\"urls\":[\"bzz-raw://40bff1a74f556b1c84d25d22d077b868fcc4c37d275b13290af35764c0dc2dd9\",\"dweb:/ipfs/Qmf7T8xYfu16mXRExXbipDNnw1ohjQ7mKTeBaDafzGqS6U\"]},\"/Users/ilyk/projects/midgardtech/xpocket-PocketSwap/contracts/pocketswap/interfaces/IPocketSwapFactory.sol\":{\"keccak256\":\"0x29a4b6458afe59957715a26e2c5c46aee95886ae001f79650cfaa575f48f75e4\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://c18a0c90a6538630a134a4a4039c1e402495b1da3076da53a8a8d5fcb046086d\",\"dweb:/ipfs/QmdMBfX5JDu1MmihBWVx4A5Yp89Zd9NXVxF9jBitMBSGti\"]},\"/Users/ilyk/projects/midgardtech/xpocket-PocketSwap/contracts/pocketswap/interfaces/IPocketSwapPair.sol\":{\"keccak256\":\"0x1de7d3ca007a851760838fbc1a29882bc2e21e90b3820d649bab940b613da665\",\"urls\":[\"bzz-raw://f51778da5a04b1b82ddac5dbcc77d29db08facb7e4cc8056adb124f9e25997e7\",\"dweb:/ipfs/QmScE4xWsqa3RF7GoHGofTvNvFy59puP2s6FJAEqFjtBTs\"]},\"/Users/ilyk/projects/midgardtech/xpocket-PocketSwap/contracts/pocketswap/interfaces/callback/IPocketSwapCallback.sol\":{\"keccak256\":\"0xffbcd8cdb9c7d99b074a3ae0910741cd15299ca3e8b839bd1fc6e603f41b7416\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ba374100d9322737f1b0d77967d2ea7efb0aca8c699977cbe288de1e81d93f15\",\"dweb:/ipfs/QmSfUvwjqGPHfdRWVazC2QgsJFc3LDrhykQ2tbccDr3Dhv\"]},\"/Users/ilyk/projects/midgardtech/xpocket-PocketSwap/contracts/pocketswap/libraries/Math.sol\":{\"keccak256\":\"0x9057591ba330f33e8af1ec9e618c30f6819c99f0660fdb2373b7c104c182315b\",\"urls\":[\"bzz-raw://46d0ffc4ebe42776ee34bb01f4c784ab9bcb43a0c78168c026ed89c868c0792c\",\"dweb:/ipfs/QmQtt2vfgKov9EVLEQ5xmWwyuZzkCRrCc5vZGrNBs2QPyC\"]},\"/Users/ilyk/projects/midgardtech/xpocket-PocketSwap/contracts/pocketswap/libraries/PlainMath.sol\":{\"keccak256\":\"0x222e25063d20b43d211205abf6729e1b9c91972e1501790f8e24fcfb5f6c1df3\",\"urls\":[\"bzz-raw://4b759cc674c72673753e8521a32a8c72c68d91ebcd1a0dc074907ff8f8e04a72\",\"dweb:/ipfs/QmT72Jk27cwXxHQbj4J2nuQ1FK3NdESYV1U5GAdj1PBawz\"]},\"/Users/ilyk/projects/midgardtech/xpocket-PocketSwap/contracts/pocketswap/libraries/UQ112x112.sol\":{\"keccak256\":\"0xcb95f28dce1327158af80a3ffcfacaa608617afbffd4c7991f236117124698bf\",\"urls\":[\"bzz-raw://90fb6358954f295bc1b3dfe9cbc875c1da16e48c48f54028ad817dadbe3600d7\",\"dweb:/ipfs/QmfKtQdwxkmTBMU38NDsB2eGZeFDYhzodDH6JDN3rL4WJ1\"]},\"/Users/ilyk/projects/midgardtech/xpocket-PocketSwap/contracts/pocketswap/pair/StorageData.sol\":{\"keccak256\":\"0xf69f0c46131dfed8b22350d09cbd542d2f845ae1577f91e09f6241d2747616bb\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://a99c520a5eea0592b23b4be4dd850ca38cf56cdf9654a4b947db15c18b4e1eeb\",\"dweb:/ipfs/QmSZXgmvW89TbMjkUw5eYHMFhppZMfHTcVwVTBdEKLwPSZ\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]}},\"version\":1}",
  "bytecode": "0x6080604052622dc6c060015534801561001757600080fd5b50604051620050e7380380620050e7833981810160405281019061003b9190610096565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600081519050610090816100f1565b92915050565b6000602082840312156100a857600080fd5b60006100b684828501610081565b91505092915050565b60006100ca826100d1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100fa816100bf565b811461010557600080fd5b50565b614fcf80620001186000396000f3fe60806040523480156200001157600080fd5b5060043610620000945760003560e01c8063b19805af1162000063578063b19805af1462000133578063c9c653961462000153578063ddca3f431462000189578063e6a4390514620001ab5762000094565b80631e3dd18b1462000099578063574f2ba314620000cf57806369fe0e2d14620000f157806387cf3ef41462000111575b600080fd5b620000b76004803603810190620000b1919062000a61565b620001e1565b604051620000c6919062000bbd565b60405180910390f35b620000d962000221565b604051620000e8919062000cde565b60405180910390f35b6200010f600480360381019062000109919062000a61565b6200022e565b005b6200011b62000316565b6040516200012a919062000bbd565b60405180910390f35b6200015160048036038101906200014b9190620009f4565b6200033a565b005b6200017160048036038101906200016b919062000a20565b6200040e565b60405162000180919062000bbd565b60405180910390f35b6200019362000970565b604051620001a2919062000cde565b60405180910390f35b620001c96004803603810190620001c3919062000a20565b62000976565b604051620001d8919062000bbd565b60405180910390f35b60038181548110620001f257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600380549050905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620002bf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002b69062000cbc565b60405180910390fd5b670de0b6b3a764000081106200030c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003039062000c34565b60405180910390fd5b8060018190555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620003cb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003c29062000cbc565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141562000482576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004799062000c78565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1610620004c1578385620004c4565b84845b91509150600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200053b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005329062000c56565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462000649576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620006409062000c9a565b60405180910390fd5b6000604051806020016200065d90620009b8565b6020820181038252601f19601f820116604052509050600083836040516020016200068a92919062000b8d565b604051602081830303815290604052805190602001209050808251602084016000f594508473ffffffffffffffffffffffffffffffffffffffff1663485cc95585856040518363ffffffff1660e01b8152600401620006eb92919062000bda565b600060405180830381600087803b1580156200070657600080fd5b505af11580156200071b573d6000803e3d6000fd5b5050505084600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003859080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9876003805490506040516200095e92919062000c07565b60405180910390a35050505092915050565b60015481565b60026020528160005260406000206020528060005260406000206000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6141198062000e8183390190565b600081359050620009d78162000e4c565b92915050565b600081359050620009ee8162000e66565b92915050565b60006020828403121562000a0757600080fd5b600062000a1784828501620009c6565b91505092915050565b6000806040838503121562000a3457600080fd5b600062000a4485828601620009c6565b925050602062000a5785828601620009c6565b9150509250929050565b60006020828403121562000a7457600080fd5b600062000a8484828501620009dd565b91505092915050565b62000a988162000d0c565b82525050565b62000ab362000aad8262000d0c565b62000d4a565b82525050565b600062000ac860128362000cfb565b915062000ad58262000d7f565b602082019050919050565b600062000aef60178362000cfb565b915062000afc8262000da8565b602082019050919050565b600062000b16601e8362000cfb565b915062000b238262000dd1565b602082019050919050565b600062000b3d60168362000cfb565b915062000b4a8262000dfa565b602082019050919050565b600062000b6460148362000cfb565b915062000b718262000e23565b602082019050919050565b62000b878162000d40565b82525050565b600062000b9b828562000a9e565b60148201915062000bad828462000a9e565b6014820191508190509392505050565b600060208201905062000bd4600083018462000a8d565b92915050565b600060408201905062000bf1600083018562000a8d565b62000c00602083018462000a8d565b9392505050565b600060408201905062000c1e600083018562000a8d565b62000c2d602083018462000b7c565b9392505050565b6000602082019050818103600083015262000c4f8162000ab9565b9050919050565b6000602082019050818103600083015262000c718162000ae0565b9050919050565b6000602082019050818103600083015262000c938162000b07565b9050919050565b6000602082019050818103600083015262000cb58162000b2e565b9050919050565b6000602082019050818103600083015262000cd78162000b55565b9050919050565b600060208201905062000cf5600083018462000b7c565b92915050565b600082825260208201905092915050565b600062000d198262000d20565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600062000d578262000d5e565b9050919050565b600062000d6b8262000d72565b9050919050565b60008160601b9050919050565b7f506f636b6574537761703a4249475f4645450000000000000000000000000000600082015250565b7f506f636b6574537761703a5a45524f5f41444452455353000000000000000000600082015250565b7f506f636b6574537761703a4944454e544943414c5f4144445245535345530000600082015250565b7f506f636b6574537761703a504149525f45584953545300000000000000000000600082015250565b7f506f636b6574537761703a464f5242494444454e000000000000000000000000600082015250565b62000e578162000d0c565b811462000e6357600080fd5b50565b62000e718162000d40565b811462000e7d57600080fd5b5056fe60806040526001600b553480156200001657600080fd5b5060004690507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6040518060400160405280600a81526020017f506f636b65745377617000000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001208330604051602001620000cf95949392919062000166565b604051602081830303815290604052805190602001206003819055505033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200020b565b6200013e81620001c3565b82525050565b6200014f81620001d7565b82525050565b620001608162000201565b82525050565b600060a0820190506200017d600083018862000144565b6200018c602083018762000144565b6200019b604083018662000144565b620001aa606083018562000155565b620001b9608083018462000133565b9695505050505050565b6000620001d082620001e1565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b613efe806200021b6000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80636a627842116100de578063ba9a7a5611610097578063d21220a711610071578063d21220a7146104a2578063d505accf146104c0578063dd62ed3e146104dc578063fff6cae91461050c5761018e565b8063ba9a7a561461044a578063bc25cf7714610468578063c45a0155146104845761018e565b80636a6278421461033b57806370a082311461036b5780637ecebe001461039b57806389afcb44146103cb57806395d89b41146103fc578063a9059cbb1461041a5761018e565b806323b872dd1161014b5780633644e515116101255780633644e515146102c5578063485cc955146102e35780635909c0d5146102ff5780635a3d54931461031d5761018e565b806323b872dd1461025957806330adf81f14610289578063313ce567146102a75761018e565b8063022c0d9f1461019357806306fdde03146101af5780630902f1ac146101cd578063095ea7b3146101ed5780630dfe16811461021d57806318160ddd1461023b575b600080fd5b6101ad60048036038101906101a89190612d26565b610516565b005b6101b7610cee565b6040516101c491906132ae565b60405180910390f35b6101d5610d27565b6040516101e4939291906134b9565b60405180910390f35b61020760048036038101906102029190612c98565b610d84565b60405161021491906131d2565b60405180910390f35b610225610d9b565b604051610232919061318e565b60405180910390f35b610243610dc1565b60405161025091906134f0565b60405180910390f35b610273600480360381019061026e9190612bab565b610dc7565b60405161028091906131d2565b60405180910390f35b610291610f92565b60405161029e91906131ed565b60405180910390f35b6102af610fb9565b6040516102bc91906135b9565b60405180910390f35b6102cd610fbe565b6040516102da91906131ed565b60405180910390f35b6102fd60048036038101906102f89190612b6f565b610fc4565b005b6103076110da565b60405161031491906134f0565b60405180910390f35b6103256110e0565b60405161033291906134f0565b60405180910390f35b61035560048036038101906103509190612b46565b6110e6565b60405161036291906134f0565b60405180910390f35b61038560048036038101906103809190612b46565b611467565b60405161039291906134f0565b60405180910390f35b6103b560048036038101906103b09190612b46565b61147f565b6040516103c291906134f0565b60405180910390f35b6103e560048036038101906103e09190612b46565b611497565b6040516103f392919061350b565b60405180910390f35b6104046118f6565b60405161041191906132ae565b60405180910390f35b610434600480360381019061042f9190612c98565b61192f565b60405161044191906131d2565b60405180910390f35b610452611946565b60405161045f91906134f0565b60405180910390f35b610482600480360381019061047d9190612b46565b61194c565b005b61048c611b96565b604051610499919061318e565b60405180910390f35b6104aa611bbc565b6040516104b7919061318e565b60405180910390f35b6104da60048036038101906104d59190612bfa565b611be2565b005b6104f660048036038101906104f19190612b6f565b611e0a565b60405161050391906134f0565b60405180910390f35b610514611e2f565b005b6001600b541461055b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055290613370565b60405180910390fd5b6000600b8190555060008511806105725750600084115b6105b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a8906133f0565b60405180910390fd5b6000806105bc610d27565b5091509150816dffffffffffffffffffffffffffff16871080156105ef5750806dffffffffffffffffffffffffffff1686105b61062e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062590613350565b60405180910390fd5b6000806000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff16141580156106e757508073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614155b610726576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071d90613450565b60405180910390fd5b60008b111561073b5761073a828a8d61201e565b5b60008a11156107505761074f818a8c61201e565b5b600088889050111561088c573373ffffffffffffffffffffffffffffffffffffffff16637936cd908c8c8b8b6040518563ffffffff1660e01b815260040161079b9493929190613534565b600060405180830381600087803b1580156107b557600080fd5b505af19250505080156107c6575060015b61088b576107d2613a31565b806308c379a0141561084e57506107e7613dbf565b806107f25750610850565b80604051602001610803919061316c565b6040516020818303038152906040526040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084591906132ae565b60405180910390fd5b505b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088290613330565b60405180910390fd5b5b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108c5919061318e565b60206040518083038186803b1580156108dd57600080fd5b505afa1580156108f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109159190612cfd565b93508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610950919061318e565b60206040518083038186803b15801561096857600080fd5b505afa15801561097c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a09190612cfd565b92505050600089856dffffffffffffffffffffffffffff166109c29190613794565b83116109cf5760006109f7565b89856dffffffffffffffffffffffffffff166109eb9190613794565b836109f69190613794565b5b9050600089856dffffffffffffffffffffffffffff16610a179190613794565b8311610a24576000610a4c565b89856dffffffffffffffffffffffffffff16610a409190613794565b83610a4b9190613794565b5b90506000821180610a5d5750600081115b610a9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a93906132d0565b60405180910390fd5b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ddca3f436040518163ffffffff1660e01b815260040160206040518083038186803b158015610b0657600080fd5b505afa158015610b1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3e9190612cfd565b90506000610b7d610b5883866121a890919063ffffffff16565b610b6f633b9aca00896121a890919063ffffffff16565b6121be90919063ffffffff16565b90506000610bbc610b9784866121a890919063ffffffff16565b610bae633b9aca00896121a890919063ffffffff16565b6121be90919063ffffffff16565b9050610c0b670de0b6b3a7640000610bfd8a6dffffffffffffffffffffffffffff168c6dffffffffffffffffffffffffffff166121a890919063ffffffff16565b6121a890919063ffffffff16565b610c1e82846121a890919063ffffffff16565b1015610c5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c56906133b0565b60405180910390fd5b505050610c6e848488886121d4565b8873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d82284848f8f604051610cd19493929190613574565b60405180910390a35050505050506001600b819055505050505050565b6040518060400160405280600a81526020017f506f636b6574537761700000000000000000000000000000000000000000000081525081565b6000806000600a60009054906101000a90046dffffffffffffffffffffffffffff169250600a600e9054906101000a90046dffffffffffffffffffffffffffff169150600a601c9054906101000a900463ffffffff169050909192565b6000610d913384846124c8565b6001905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610f7c57610efb82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121be90919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610f878484846125b3565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b60035481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611054576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104b90613430565b60405180910390fd5b81600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60085481565b60095481565b60006001600b541461112d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112490613370565b60405180910390fd5b6000600b81905550600080611140610d27565b50915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016111a2919061318e565b60206040518083038186803b1580156111ba57600080fd5b505afa1580156111ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f29190612cfd565b90506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611251919061318e565b60206040518083038186803b15801561126957600080fd5b505afa15801561127d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a19190612cfd565b905060006112c8856dffffffffffffffffffffffffffff16846121be90919063ffffffff16565b905060006112ef856dffffffffffffffffffffffffffff16846121be90919063ffffffff16565b905060008054905060008114156113435761132f6103e861132161131c85876121a890919063ffffffff16565b612747565b6121be90919063ffffffff16565b975061133e60006103e86127c1565b6113aa565b6113a7876dffffffffffffffffffffffffffff1661136a83866121a890919063ffffffff16565b61137491906136b3565b876dffffffffffffffffffffffffffff1661139884866121a890919063ffffffff16565b6113a291906136b3565b6128db565b97505b600088116113ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e490613310565b60405180910390fd5b6113f789896127c1565b611403858589896121d4565b3373ffffffffffffffffffffffffffffffffffffffff167f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f848460405161144b92919061350b565b60405180910390a2505050505050506001600b81905550919050565b60016020528060005260406000206000915090505481565b60046020528060005260406000206000915090505481565b6000806001600b54146114df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114d690613370565b60405180910390fd5b6000600b819055506000806114f2610d27565b50915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611580919061318e565b60206040518083038186803b15801561159857600080fd5b505afa1580156115ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d09190612cfd565b905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161160d919061318e565b60206040518083038186803b15801561162557600080fd5b505afa158015611639573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165d9190612cfd565b90506000600160003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600080549050806116bd85846121a890919063ffffffff16565b6116c791906136b3565b9950806116dd84846121a890919063ffffffff16565b6116e791906136b3565b985060008a1180156116f95750600089115b611738576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161172f90613470565b60405180910390fd5b61174230836128f4565b61174d868c8c61201e565b611758858c8b61201e565b8573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611791919061318e565b60206040518083038186803b1580156117a957600080fd5b505afa1580156117bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e19190612cfd565b93508473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161181c919061318e565b60206040518083038186803b15801561183457600080fd5b505afa158015611848573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061186c9190612cfd565b925061187a84848a8a6121d4565b8a73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d819364968c8c6040516118d992919061350b565b60405180910390a350505050505050506001600b81905550915091565b6040518060400160405280600781526020017f50532d504149520000000000000000000000000000000000000000000000000081525081565b600061193c3384846125b3565b6001905092915050565b6103e881565b6001600b5414611991576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161198890613370565b60405180910390fd5b6000600b819055506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611ab88284611ab3600a60009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611a55919061318e565b60206040518083038186803b158015611a6d57600080fd5b505afa158015611a81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa59190612cfd565b6121be90919063ffffffff16565b61201e565b611b898184611b84600a600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611b26919061318e565b60206040518083038186803b158015611b3e57600080fd5b505afa158015611b52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b769190612cfd565b6121be90919063ffffffff16565b61201e565b50506001600b8190555050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b42841015611c25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c1c906133d0565b60405180910390fd5b60006003547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190611ca190613920565b919050558a604051602001611cbb96959493929190613208565b60405160208183030381529060405280519060200120604051602001611ce2929190613135565b604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051611d1f9493929190613269565b6020604051602081039080840390855afa158015611d41573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015611db557508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611df4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611deb90613410565b60405180910390fd5b611dff8989896124c8565b505050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b6001600b5414611e74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e6b90613370565b60405180910390fd5b6000600b81905550612014600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611eda919061318e565b60206040518083038186803b158015611ef257600080fd5b505afa158015611f06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f2a9190612cfd565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611f85919061318e565b60206040518083038186803b158015611f9d57600080fd5b505afa158015611fb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fd59190612cfd565b600a60009054906101000a90046dffffffffffffffffffffffffffff16600a600e9054906101000a90046dffffffffffffffffffffffffffff166121d4565b6001600b81905550565b6000808473ffffffffffffffffffffffffffffffffffffffff166040518060400160405280601981526020017f7472616e7366657228616464726573732c75696e7432353629000000000000008152508051906020012085856040516024016120889291906131a9565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516120f2919061311e565b6000604051808303816000865af19150503d806000811461212f576040519150601f19603f3d011682016040523d82523d6000602084013e612134565b606091505b509150915081801561216257506000815114806121615750808060200190518101906121609190612cd4565b5b5b6121a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612198906132f0565b60405180910390fd5b5050505050565b600081836121b6919061373a565b905092915050565b600081836121cc9190613794565b905092915050565b6dffffffffffffffffffffffffffff8016841115801561220457506dffffffffffffffffffffffffffff80168311155b612243576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161223a90613390565b60405180910390fd5b6000640100000000426122569190613973565b90506000600a601c9054906101000a900463ffffffff168261227891906137c8565b905060008163ffffffff161180156122a157506000846dffffffffffffffffffffffffffff1614155b80156122be57506000836dffffffffffffffffffffffffffff1614155b156123c4578063ffffffff16612303856122d786612a0e565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16612a4290919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1661232b919061373a565b6008600082825461233c919061362c565b925050819055508063ffffffff166123838461235787612a0e565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16612a4290919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166123ab919061373a565b600960008282546123bc919061362c565b925050819055505b85600a60006101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff16021790555084600a600e6101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff16021790555081600a601c6101000a81548163ffffffff021916908363ffffffff1602179055507f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1600a60009054906101000a90046dffffffffffffffffffffffffffff16600a600e9054906101000a90046dffffffffffffffffffffffffffff166040516124b8929190613490565b60405180910390a1505050505050565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516125a691906134f0565b60405180910390a3505050565b61260581600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121be90919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061269a81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612a6890919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161273a91906134f0565b60405180910390a3505050565b600060038211156127ae578190506000600160028461276691906136b3565b612770919061362c565b90505b818110156127a857809150600281828561278d91906136b3565b612797919061362c565b6127a191906136b3565b9050612773565b506127bc565b600082146127bb57600190505b5b919050565b6127d681600054612a6890919063ffffffff16565b60008190555061282e81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612a6890919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516128cf91906134f0565b60405180910390a35050565b60008183106128ea57816128ec565b825b905092915050565b61294681600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121be90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061299e816000546121be90919063ffffffff16565b600081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051612a0291906134f0565b60405180910390a35050565b60006e010000000000000000000000000000826dffffffffffffffffffffffffffff16612a3b91906136e4565b9050919050565b6000816dffffffffffffffffffffffffffff1683612a609190613682565b905092915050565b60008183612a76919061362c565b905092915050565b600081359050612a8d81613e55565b92915050565b600081519050612aa281613e6c565b92915050565b600081359050612ab781613e83565b92915050565b60008083601f840112612acf57600080fd5b8235905067ffffffffffffffff811115612ae857600080fd5b602083019150836001820283011115612b0057600080fd5b9250929050565b600081359050612b1681613e9a565b92915050565b600081519050612b2b81613e9a565b92915050565b600081359050612b4081613eb1565b92915050565b600060208284031215612b5857600080fd5b6000612b6684828501612a7e565b91505092915050565b60008060408385031215612b8257600080fd5b6000612b9085828601612a7e565b9250506020612ba185828601612a7e565b9150509250929050565b600080600060608486031215612bc057600080fd5b6000612bce86828701612a7e565b9350506020612bdf86828701612a7e565b9250506040612bf086828701612b07565b9150509250925092565b600080600080600080600060e0888a031215612c1557600080fd5b6000612c238a828b01612a7e565b9750506020612c348a828b01612a7e565b9650506040612c458a828b01612b07565b9550506060612c568a828b01612b07565b9450506080612c678a828b01612b31565b93505060a0612c788a828b01612aa8565b92505060c0612c898a828b01612aa8565b91505092959891949750929550565b60008060408385031215612cab57600080fd5b6000612cb985828601612a7e565b9250506020612cca85828601612b07565b9150509250929050565b600060208284031215612ce657600080fd5b6000612cf484828501612a93565b91505092915050565b600060208284031215612d0f57600080fd5b6000612d1d84828501612b1c565b91505092915050565b600080600080600060808688031215612d3e57600080fd5b6000612d4c88828901612b07565b9550506020612d5d88828901612b07565b9450506040612d6e88828901612a7e565b935050606086013567ffffffffffffffff811115612d8b57600080fd5b612d9788828901612abd565b92509250509295509295909350565b612daf816137fc565b82525050565b612dbe8161380e565b82525050565b612dcd8161381a565b82525050565b612de4612ddf8261381a565b613969565b82525050565b6000612df683856135f4565b9350612e038385846138ad565b612e0c83613a53565b840190509392505050565b6000612e22826135de565b612e2c8185613605565b9350612e3c8185602086016138bc565b80840191505092915050565b6000612e53826135e9565b612e5d8185613610565b9350612e6d8185602086016138bc565b612e7681613a53565b840191505092915050565b6000612e8c826135e9565b612e968185613621565b9350612ea68185602086016138bc565b80840191505092915050565b6000612ebf602583613610565b9150612eca82613a71565b604082019050919050565b6000612ee2600283613621565b9150612eed82613ac0565b600282019050919050565b6000612f05601b83613610565b9150612f1082613ae9565b602082019050919050565b6000612f28602983613610565b9150612f3382613b12565b604082019050919050565b6000612f4b600783613610565b9150612f5682613b61565b602082019050919050565b6000612f6e602283613610565b9150612f7982613b8a565b604082019050919050565b6000612f91601283613610565b9150612f9c82613bd9565b602082019050919050565b6000612fb4601483613610565b9150612fbf82613c02565b602082019050919050565b6000612fd7600d83613610565b9150612fe282613c2b565b602082019050919050565b6000612ffa601383613610565b915061300582613c54565b602082019050919050565b600061301d600583613621565b915061302882613c7d565b600582019050919050565b6000613040602683613610565b915061304b82613ca6565b604082019050919050565b6000613063601d83613610565b915061306e82613cf5565b602082019050919050565b6000613086601583613610565b915061309182613d1e565b602082019050919050565b60006130a9601683613610565b91506130b482613d47565b602082019050919050565b60006130cc602983613610565b91506130d782613d70565b604082019050919050565b6130eb81613824565b82525050565b6130fa81613886565b82525050565b61310981613890565b82525050565b613118816138a0565b82525050565b600061312a8284612e17565b915081905092915050565b600061314082612ed5565b915061314c8285612dd3565b60208201915061315c8284612dd3565b6020820191508190509392505050565b600061317782613010565b91506131838284612e81565b915081905092915050565b60006020820190506131a36000830184612da6565b92915050565b60006040820190506131be6000830185612da6565b6131cb60208301846130f1565b9392505050565b60006020820190506131e76000830184612db5565b92915050565b60006020820190506132026000830184612dc4565b92915050565b600060c08201905061321d6000830189612dc4565b61322a6020830188612da6565b6132376040830187612da6565b61324460608301866130f1565b61325160808301856130f1565b61325e60a08301846130f1565b979650505050505050565b600060808201905061327e6000830187612dc4565b61328b602083018661310f565b6132986040830185612dc4565b6132a56060830184612dc4565b95945050505050565b600060208201905081810360008301526132c88184612e48565b905092915050565b600060208201905081810360008301526132e981612eb2565b9050919050565b6000602082019050818103600083015261330981612ef8565b9050919050565b6000602082019050818103600083015261332981612f1b565b9050919050565b6000602082019050818103600083015261334981612f3e565b9050919050565b6000602082019050818103600083015261336981612f61565b9050919050565b6000602082019050818103600083015261338981612f84565b9050919050565b600060208201905081810360008301526133a981612fa7565b9050919050565b600060208201905081810360008301526133c981612fca565b9050919050565b600060208201905081810360008301526133e981612fed565b9050919050565b6000602082019050818103600083015261340981613033565b9050919050565b6000602082019050818103600083015261342981613056565b9050919050565b6000602082019050818103600083015261344981613079565b9050919050565b600060208201905081810360008301526134698161309c565b9050919050565b60006020820190508181036000830152613489816130bf565b9050919050565b60006040820190506134a560008301856130e2565b6134b260208301846130e2565b9392505050565b60006060820190506134ce60008301866130e2565b6134db60208301856130e2565b6134e86040830184613100565b949350505050565b600060208201905061350560008301846130f1565b92915050565b600060408201905061352060008301856130f1565b61352d60208301846130f1565b9392505050565b600060608201905061354960008301876130f1565b61355660208301866130f1565b8181036040830152613569818486612dea565b905095945050505050565b600060808201905061358960008301876130f1565b61359660208301866130f1565b6135a360408301856130f1565b6135b060608301846130f1565b95945050505050565b60006020820190506135ce600083018461310f565b92915050565b6000604051905090565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b600061363782613886565b915061364283613886565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613677576136766139a4565b5b828201905092915050565b600061368d8261385e565b91506136988361385e565b9250826136a8576136a76139d3565b5b828204905092915050565b60006136be82613886565b91506136c983613886565b9250826136d9576136d86139d3565b5b828204905092915050565b60006136ef8261385e565b91506136fa8361385e565b9250817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561372f5761372e6139a4565b5b828202905092915050565b600061374582613886565b915061375083613886565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613789576137886139a4565b5b828202905092915050565b600061379f82613886565b91506137aa83613886565b9250828210156137bd576137bc6139a4565b5b828203905092915050565b60006137d382613890565b91506137de83613890565b9250828210156137f1576137f06139a4565b5b828203905092915050565b60006138078261383e565b9050919050565b60008115159050919050565b6000819050919050565b60006dffffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b838110156138da5780820151818401526020810190506138bf565b838111156138e9576000848401525b50505050565b6138f882613a53565b810181811067ffffffffffffffff8211171561391757613916613a02565b5b80604052505050565b600061392b82613886565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561395e5761395d6139a4565b5b600182019050919050565b6000819050919050565b600061397e82613886565b915061398983613886565b925082613999576139986139d3565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060033d1115613a505760046000803e613a4d600051613a64565b90505b90565b6000601f19601f8301169050919050565b60008160e01c9050919050565b7f506f636b6574537761703a20494e53554646494349454e545f494e5055545f4160008201527f4d4f554e54000000000000000000000000000000000000000000000000000000602082015250565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b7f506f636b6574537761703a205452414e534645525f4641494c45440000000000600082015250565b7f506f636b6574537761703a20494e53554646494349454e545f4c49515549444960008201527f54595f4d494e5445440000000000000000000000000000000000000000000000602082015250565b7f554e4b4e574e2100000000000000000000000000000000000000000000000000600082015250565b7f506f636b6574537761703a20494e53554646494349454e545f4c49515549444960008201527f5459000000000000000000000000000000000000000000000000000000000000602082015250565b7f506f636b6574537761703a204c4f434b45440000000000000000000000000000600082015250565b7f506f636b6574537761703a204f564552464c4f57000000000000000000000000600082015250565b7f506f636b6574537761703a204b00000000000000000000000000000000000000600082015250565b7f506f636b6574537761703a204558504952454400000000000000000000000000600082015250565b7f4e4f4b3a20000000000000000000000000000000000000000000000000000000600082015250565b7f506f636b6574537761703a20494e53554646494349454e545f4f55545055545f60008201527f414d4f554e540000000000000000000000000000000000000000000000000000602082015250565b7f506f636b6574537761703a20494e56414c49445f5349474e4154555245000000600082015250565b7f506f636b6574537761703a20464f5242494444454e0000000000000000000000600082015250565b7f506f636b6574537761703a20494e56414c49445f544f00000000000000000000600082015250565b7f506f636b6574537761703a20494e53554646494349454e545f4c49515549444960008201527f54595f4255524e45440000000000000000000000000000000000000000000000602082015250565b600060443d1015613dcf57613e52565b613dd76135d4565b60043d036004823e80513d602482011167ffffffffffffffff82111715613dff575050613e52565b808201805167ffffffffffffffff811115613e1d5750505050613e52565b80602083010160043d038501811115613e3a575050505050613e52565b613e49826020018501866138ef565b82955050505050505b90565b613e5e816137fc565b8114613e6957600080fd5b50565b613e758161380e565b8114613e8057600080fd5b50565b613e8c8161381a565b8114613e9757600080fd5b50565b613ea381613886565b8114613eae57600080fd5b50565b613eba816138a0565b8114613ec557600080fd5b5056fea2646970667358221220aefdcdb8f3591d803bc7387ea9a659f04eb2cacb722a020d049d66ec084bb91a64736f6c63430008040033a26469706673582212203b26622e3e6c90f94d1b3f625a797dc0cd2064bd9d8378acbb29d3ceccd7516c64736f6c63430008040033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000945760003560e01c8063b19805af1162000063578063b19805af1462000133578063c9c653961462000153578063ddca3f431462000189578063e6a4390514620001ab5762000094565b80631e3dd18b1462000099578063574f2ba314620000cf57806369fe0e2d14620000f157806387cf3ef41462000111575b600080fd5b620000b76004803603810190620000b1919062000a61565b620001e1565b604051620000c6919062000bbd565b60405180910390f35b620000d962000221565b604051620000e8919062000cde565b60405180910390f35b6200010f600480360381019062000109919062000a61565b6200022e565b005b6200011b62000316565b6040516200012a919062000bbd565b60405180910390f35b6200015160048036038101906200014b9190620009f4565b6200033a565b005b6200017160048036038101906200016b919062000a20565b6200040e565b60405162000180919062000bbd565b60405180910390f35b6200019362000970565b604051620001a2919062000cde565b60405180910390f35b620001c96004803603810190620001c3919062000a20565b62000976565b604051620001d8919062000bbd565b60405180910390f35b60038181548110620001f257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600380549050905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620002bf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002b69062000cbc565b60405180910390fd5b670de0b6b3a764000081106200030c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003039062000c34565b60405180910390fd5b8060018190555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620003cb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003c29062000cbc565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141562000482576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004799062000c78565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1610620004c1578385620004c4565b84845b91509150600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200053b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005329062000c56565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462000649576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620006409062000c9a565b60405180910390fd5b6000604051806020016200065d90620009b8565b6020820181038252601f19601f820116604052509050600083836040516020016200068a92919062000b8d565b604051602081830303815290604052805190602001209050808251602084016000f594508473ffffffffffffffffffffffffffffffffffffffff1663485cc95585856040518363ffffffff1660e01b8152600401620006eb92919062000bda565b600060405180830381600087803b1580156200070657600080fd5b505af11580156200071b573d6000803e3d6000fd5b5050505084600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003859080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9876003805490506040516200095e92919062000c07565b60405180910390a35050505092915050565b60015481565b60026020528160005260406000206020528060005260406000206000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6141198062000e8183390190565b600081359050620009d78162000e4c565b92915050565b600081359050620009ee8162000e66565b92915050565b60006020828403121562000a0757600080fd5b600062000a1784828501620009c6565b91505092915050565b6000806040838503121562000a3457600080fd5b600062000a4485828601620009c6565b925050602062000a5785828601620009c6565b9150509250929050565b60006020828403121562000a7457600080fd5b600062000a8484828501620009dd565b91505092915050565b62000a988162000d0c565b82525050565b62000ab362000aad8262000d0c565b62000d4a565b82525050565b600062000ac860128362000cfb565b915062000ad58262000d7f565b602082019050919050565b600062000aef60178362000cfb565b915062000afc8262000da8565b602082019050919050565b600062000b16601e8362000cfb565b915062000b238262000dd1565b602082019050919050565b600062000b3d60168362000cfb565b915062000b4a8262000dfa565b602082019050919050565b600062000b6460148362000cfb565b915062000b718262000e23565b602082019050919050565b62000b878162000d40565b82525050565b600062000b9b828562000a9e565b60148201915062000bad828462000a9e565b6014820191508190509392505050565b600060208201905062000bd4600083018462000a8d565b92915050565b600060408201905062000bf1600083018562000a8d565b62000c00602083018462000a8d565b9392505050565b600060408201905062000c1e600083018562000a8d565b62000c2d602083018462000b7c565b9392505050565b6000602082019050818103600083015262000c4f8162000ab9565b9050919050565b6000602082019050818103600083015262000c718162000ae0565b9050919050565b6000602082019050818103600083015262000c938162000b07565b9050919050565b6000602082019050818103600083015262000cb58162000b2e565b9050919050565b6000602082019050818103600083015262000cd78162000b55565b9050919050565b600060208201905062000cf5600083018462000b7c565b92915050565b600082825260208201905092915050565b600062000d198262000d20565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600062000d578262000d5e565b9050919050565b600062000d6b8262000d72565b9050919050565b60008160601b9050919050565b7f506f636b6574537761703a4249475f4645450000000000000000000000000000600082015250565b7f506f636b6574537761703a5a45524f5f41444452455353000000000000000000600082015250565b7f506f636b6574537761703a4944454e544943414c5f4144445245535345530000600082015250565b7f506f636b6574537761703a504149525f45584953545300000000000000000000600082015250565b7f506f636b6574537761703a464f5242494444454e000000000000000000000000600082015250565b62000e578162000d0c565b811462000e6357600080fd5b50565b62000e718162000d40565b811462000e7d57600080fd5b5056fe60806040526001600b553480156200001657600080fd5b5060004690507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6040518060400160405280600a81526020017f506f636b65745377617000000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001208330604051602001620000cf95949392919062000166565b604051602081830303815290604052805190602001206003819055505033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200020b565b6200013e81620001c3565b82525050565b6200014f81620001d7565b82525050565b620001608162000201565b82525050565b600060a0820190506200017d600083018862000144565b6200018c602083018762000144565b6200019b604083018662000144565b620001aa606083018562000155565b620001b9608083018462000133565b9695505050505050565b6000620001d082620001e1565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b613efe806200021b6000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80636a627842116100de578063ba9a7a5611610097578063d21220a711610071578063d21220a7146104a2578063d505accf146104c0578063dd62ed3e146104dc578063fff6cae91461050c5761018e565b8063ba9a7a561461044a578063bc25cf7714610468578063c45a0155146104845761018e565b80636a6278421461033b57806370a082311461036b5780637ecebe001461039b57806389afcb44146103cb57806395d89b41146103fc578063a9059cbb1461041a5761018e565b806323b872dd1161014b5780633644e515116101255780633644e515146102c5578063485cc955146102e35780635909c0d5146102ff5780635a3d54931461031d5761018e565b806323b872dd1461025957806330adf81f14610289578063313ce567146102a75761018e565b8063022c0d9f1461019357806306fdde03146101af5780630902f1ac146101cd578063095ea7b3146101ed5780630dfe16811461021d57806318160ddd1461023b575b600080fd5b6101ad60048036038101906101a89190612d26565b610516565b005b6101b7610cee565b6040516101c491906132ae565b60405180910390f35b6101d5610d27565b6040516101e4939291906134b9565b60405180910390f35b61020760048036038101906102029190612c98565b610d84565b60405161021491906131d2565b60405180910390f35b610225610d9b565b604051610232919061318e565b60405180910390f35b610243610dc1565b60405161025091906134f0565b60405180910390f35b610273600480360381019061026e9190612bab565b610dc7565b60405161028091906131d2565b60405180910390f35b610291610f92565b60405161029e91906131ed565b60405180910390f35b6102af610fb9565b6040516102bc91906135b9565b60405180910390f35b6102cd610fbe565b6040516102da91906131ed565b60405180910390f35b6102fd60048036038101906102f89190612b6f565b610fc4565b005b6103076110da565b60405161031491906134f0565b60405180910390f35b6103256110e0565b60405161033291906134f0565b60405180910390f35b61035560048036038101906103509190612b46565b6110e6565b60405161036291906134f0565b60405180910390f35b61038560048036038101906103809190612b46565b611467565b60405161039291906134f0565b60405180910390f35b6103b560048036038101906103b09190612b46565b61147f565b6040516103c291906134f0565b60405180910390f35b6103e560048036038101906103e09190612b46565b611497565b6040516103f392919061350b565b60405180910390f35b6104046118f6565b60405161041191906132ae565b60405180910390f35b610434600480360381019061042f9190612c98565b61192f565b60405161044191906131d2565b60405180910390f35b610452611946565b60405161045f91906134f0565b60405180910390f35b610482600480360381019061047d9190612b46565b61194c565b005b61048c611b96565b604051610499919061318e565b60405180910390f35b6104aa611bbc565b6040516104b7919061318e565b60405180910390f35b6104da60048036038101906104d59190612bfa565b611be2565b005b6104f660048036038101906104f19190612b6f565b611e0a565b60405161050391906134f0565b60405180910390f35b610514611e2f565b005b6001600b541461055b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055290613370565b60405180910390fd5b6000600b8190555060008511806105725750600084115b6105b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a8906133f0565b60405180910390fd5b6000806105bc610d27565b5091509150816dffffffffffffffffffffffffffff16871080156105ef5750806dffffffffffffffffffffffffffff1686105b61062e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062590613350565b60405180910390fd5b6000806000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff16141580156106e757508073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614155b610726576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071d90613450565b60405180910390fd5b60008b111561073b5761073a828a8d61201e565b5b60008a11156107505761074f818a8c61201e565b5b600088889050111561088c573373ffffffffffffffffffffffffffffffffffffffff16637936cd908c8c8b8b6040518563ffffffff1660e01b815260040161079b9493929190613534565b600060405180830381600087803b1580156107b557600080fd5b505af19250505080156107c6575060015b61088b576107d2613a31565b806308c379a0141561084e57506107e7613dbf565b806107f25750610850565b80604051602001610803919061316c565b6040516020818303038152906040526040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084591906132ae565b60405180910390fd5b505b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088290613330565b60405180910390fd5b5b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108c5919061318e565b60206040518083038186803b1580156108dd57600080fd5b505afa1580156108f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109159190612cfd565b93508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610950919061318e565b60206040518083038186803b15801561096857600080fd5b505afa15801561097c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a09190612cfd565b92505050600089856dffffffffffffffffffffffffffff166109c29190613794565b83116109cf5760006109f7565b89856dffffffffffffffffffffffffffff166109eb9190613794565b836109f69190613794565b5b9050600089856dffffffffffffffffffffffffffff16610a179190613794565b8311610a24576000610a4c565b89856dffffffffffffffffffffffffffff16610a409190613794565b83610a4b9190613794565b5b90506000821180610a5d5750600081115b610a9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a93906132d0565b60405180910390fd5b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ddca3f436040518163ffffffff1660e01b815260040160206040518083038186803b158015610b0657600080fd5b505afa158015610b1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3e9190612cfd565b90506000610b7d610b5883866121a890919063ffffffff16565b610b6f633b9aca00896121a890919063ffffffff16565b6121be90919063ffffffff16565b90506000610bbc610b9784866121a890919063ffffffff16565b610bae633b9aca00896121a890919063ffffffff16565b6121be90919063ffffffff16565b9050610c0b670de0b6b3a7640000610bfd8a6dffffffffffffffffffffffffffff168c6dffffffffffffffffffffffffffff166121a890919063ffffffff16565b6121a890919063ffffffff16565b610c1e82846121a890919063ffffffff16565b1015610c5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c56906133b0565b60405180910390fd5b505050610c6e848488886121d4565b8873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d82284848f8f604051610cd19493929190613574565b60405180910390a35050505050506001600b819055505050505050565b6040518060400160405280600a81526020017f506f636b6574537761700000000000000000000000000000000000000000000081525081565b6000806000600a60009054906101000a90046dffffffffffffffffffffffffffff169250600a600e9054906101000a90046dffffffffffffffffffffffffffff169150600a601c9054906101000a900463ffffffff169050909192565b6000610d913384846124c8565b6001905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610f7c57610efb82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121be90919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610f878484846125b3565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b60035481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611054576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104b90613430565b60405180910390fd5b81600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60085481565b60095481565b60006001600b541461112d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112490613370565b60405180910390fd5b6000600b81905550600080611140610d27565b50915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016111a2919061318e565b60206040518083038186803b1580156111ba57600080fd5b505afa1580156111ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f29190612cfd565b90506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611251919061318e565b60206040518083038186803b15801561126957600080fd5b505afa15801561127d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a19190612cfd565b905060006112c8856dffffffffffffffffffffffffffff16846121be90919063ffffffff16565b905060006112ef856dffffffffffffffffffffffffffff16846121be90919063ffffffff16565b905060008054905060008114156113435761132f6103e861132161131c85876121a890919063ffffffff16565b612747565b6121be90919063ffffffff16565b975061133e60006103e86127c1565b6113aa565b6113a7876dffffffffffffffffffffffffffff1661136a83866121a890919063ffffffff16565b61137491906136b3565b876dffffffffffffffffffffffffffff1661139884866121a890919063ffffffff16565b6113a291906136b3565b6128db565b97505b600088116113ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e490613310565b60405180910390fd5b6113f789896127c1565b611403858589896121d4565b3373ffffffffffffffffffffffffffffffffffffffff167f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f848460405161144b92919061350b565b60405180910390a2505050505050506001600b81905550919050565b60016020528060005260406000206000915090505481565b60046020528060005260406000206000915090505481565b6000806001600b54146114df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114d690613370565b60405180910390fd5b6000600b819055506000806114f2610d27565b50915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611580919061318e565b60206040518083038186803b15801561159857600080fd5b505afa1580156115ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d09190612cfd565b905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161160d919061318e565b60206040518083038186803b15801561162557600080fd5b505afa158015611639573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165d9190612cfd565b90506000600160003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600080549050806116bd85846121a890919063ffffffff16565b6116c791906136b3565b9950806116dd84846121a890919063ffffffff16565b6116e791906136b3565b985060008a1180156116f95750600089115b611738576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161172f90613470565b60405180910390fd5b61174230836128f4565b61174d868c8c61201e565b611758858c8b61201e565b8573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611791919061318e565b60206040518083038186803b1580156117a957600080fd5b505afa1580156117bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e19190612cfd565b93508473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161181c919061318e565b60206040518083038186803b15801561183457600080fd5b505afa158015611848573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061186c9190612cfd565b925061187a84848a8a6121d4565b8a73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d819364968c8c6040516118d992919061350b565b60405180910390a350505050505050506001600b81905550915091565b6040518060400160405280600781526020017f50532d504149520000000000000000000000000000000000000000000000000081525081565b600061193c3384846125b3565b6001905092915050565b6103e881565b6001600b5414611991576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161198890613370565b60405180910390fd5b6000600b819055506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611ab88284611ab3600a60009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611a55919061318e565b60206040518083038186803b158015611a6d57600080fd5b505afa158015611a81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa59190612cfd565b6121be90919063ffffffff16565b61201e565b611b898184611b84600a600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611b26919061318e565b60206040518083038186803b158015611b3e57600080fd5b505afa158015611b52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b769190612cfd565b6121be90919063ffffffff16565b61201e565b50506001600b8190555050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b42841015611c25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c1c906133d0565b60405180910390fd5b60006003547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190611ca190613920565b919050558a604051602001611cbb96959493929190613208565b60405160208183030381529060405280519060200120604051602001611ce2929190613135565b604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051611d1f9493929190613269565b6020604051602081039080840390855afa158015611d41573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015611db557508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611df4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611deb90613410565b60405180910390fd5b611dff8989896124c8565b505050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b6001600b5414611e74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e6b90613370565b60405180910390fd5b6000600b81905550612014600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611eda919061318e565b60206040518083038186803b158015611ef257600080fd5b505afa158015611f06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f2a9190612cfd565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611f85919061318e565b60206040518083038186803b158015611f9d57600080fd5b505afa158015611fb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fd59190612cfd565b600a60009054906101000a90046dffffffffffffffffffffffffffff16600a600e9054906101000a90046dffffffffffffffffffffffffffff166121d4565b6001600b81905550565b6000808473ffffffffffffffffffffffffffffffffffffffff166040518060400160405280601981526020017f7472616e7366657228616464726573732c75696e7432353629000000000000008152508051906020012085856040516024016120889291906131a9565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516120f2919061311e565b6000604051808303816000865af19150503d806000811461212f576040519150601f19603f3d011682016040523d82523d6000602084013e612134565b606091505b509150915081801561216257506000815114806121615750808060200190518101906121609190612cd4565b5b5b6121a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612198906132f0565b60405180910390fd5b5050505050565b600081836121b6919061373a565b905092915050565b600081836121cc9190613794565b905092915050565b6dffffffffffffffffffffffffffff8016841115801561220457506dffffffffffffffffffffffffffff80168311155b612243576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161223a90613390565b60405180910390fd5b6000640100000000426122569190613973565b90506000600a601c9054906101000a900463ffffffff168261227891906137c8565b905060008163ffffffff161180156122a157506000846dffffffffffffffffffffffffffff1614155b80156122be57506000836dffffffffffffffffffffffffffff1614155b156123c4578063ffffffff16612303856122d786612a0e565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16612a4290919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1661232b919061373a565b6008600082825461233c919061362c565b925050819055508063ffffffff166123838461235787612a0e565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16612a4290919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166123ab919061373a565b600960008282546123bc919061362c565b925050819055505b85600a60006101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff16021790555084600a600e6101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff16021790555081600a601c6101000a81548163ffffffff021916908363ffffffff1602179055507f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1600a60009054906101000a90046dffffffffffffffffffffffffffff16600a600e9054906101000a90046dffffffffffffffffffffffffffff166040516124b8929190613490565b60405180910390a1505050505050565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516125a691906134f0565b60405180910390a3505050565b61260581600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121be90919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061269a81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612a6890919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161273a91906134f0565b60405180910390a3505050565b600060038211156127ae578190506000600160028461276691906136b3565b612770919061362c565b90505b818110156127a857809150600281828561278d91906136b3565b612797919061362c565b6127a191906136b3565b9050612773565b506127bc565b600082146127bb57600190505b5b919050565b6127d681600054612a6890919063ffffffff16565b60008190555061282e81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612a6890919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516128cf91906134f0565b60405180910390a35050565b60008183106128ea57816128ec565b825b905092915050565b61294681600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121be90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061299e816000546121be90919063ffffffff16565b600081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051612a0291906134f0565b60405180910390a35050565b60006e010000000000000000000000000000826dffffffffffffffffffffffffffff16612a3b91906136e4565b9050919050565b6000816dffffffffffffffffffffffffffff1683612a609190613682565b905092915050565b60008183612a76919061362c565b905092915050565b600081359050612a8d81613e55565b92915050565b600081519050612aa281613e6c565b92915050565b600081359050612ab781613e83565b92915050565b60008083601f840112612acf57600080fd5b8235905067ffffffffffffffff811115612ae857600080fd5b602083019150836001820283011115612b0057600080fd5b9250929050565b600081359050612b1681613e9a565b92915050565b600081519050612b2b81613e9a565b92915050565b600081359050612b4081613eb1565b92915050565b600060208284031215612b5857600080fd5b6000612b6684828501612a7e565b91505092915050565b60008060408385031215612b8257600080fd5b6000612b9085828601612a7e565b9250506020612ba185828601612a7e565b9150509250929050565b600080600060608486031215612bc057600080fd5b6000612bce86828701612a7e565b9350506020612bdf86828701612a7e565b9250506040612bf086828701612b07565b9150509250925092565b600080600080600080600060e0888a031215612c1557600080fd5b6000612c238a828b01612a7e565b9750506020612c348a828b01612a7e565b9650506040612c458a828b01612b07565b9550506060612c568a828b01612b07565b9450506080612c678a828b01612b31565b93505060a0612c788a828b01612aa8565b92505060c0612c898a828b01612aa8565b91505092959891949750929550565b60008060408385031215612cab57600080fd5b6000612cb985828601612a7e565b9250506020612cca85828601612b07565b9150509250929050565b600060208284031215612ce657600080fd5b6000612cf484828501612a93565b91505092915050565b600060208284031215612d0f57600080fd5b6000612d1d84828501612b1c565b91505092915050565b600080600080600060808688031215612d3e57600080fd5b6000612d4c88828901612b07565b9550506020612d5d88828901612b07565b9450506040612d6e88828901612a7e565b935050606086013567ffffffffffffffff811115612d8b57600080fd5b612d9788828901612abd565b92509250509295509295909350565b612daf816137fc565b82525050565b612dbe8161380e565b82525050565b612dcd8161381a565b82525050565b612de4612ddf8261381a565b613969565b82525050565b6000612df683856135f4565b9350612e038385846138ad565b612e0c83613a53565b840190509392505050565b6000612e22826135de565b612e2c8185613605565b9350612e3c8185602086016138bc565b80840191505092915050565b6000612e53826135e9565b612e5d8185613610565b9350612e6d8185602086016138bc565b612e7681613a53565b840191505092915050565b6000612e8c826135e9565b612e968185613621565b9350612ea68185602086016138bc565b80840191505092915050565b6000612ebf602583613610565b9150612eca82613a71565b604082019050919050565b6000612ee2600283613621565b9150612eed82613ac0565b600282019050919050565b6000612f05601b83613610565b9150612f1082613ae9565b602082019050919050565b6000612f28602983613610565b9150612f3382613b12565b604082019050919050565b6000612f4b600783613610565b9150612f5682613b61565b602082019050919050565b6000612f6e602283613610565b9150612f7982613b8a565b604082019050919050565b6000612f91601283613610565b9150612f9c82613bd9565b602082019050919050565b6000612fb4601483613610565b9150612fbf82613c02565b602082019050919050565b6000612fd7600d83613610565b9150612fe282613c2b565b602082019050919050565b6000612ffa601383613610565b915061300582613c54565b602082019050919050565b600061301d600583613621565b915061302882613c7d565b600582019050919050565b6000613040602683613610565b915061304b82613ca6565b604082019050919050565b6000613063601d83613610565b915061306e82613cf5565b602082019050919050565b6000613086601583613610565b915061309182613d1e565b602082019050919050565b60006130a9601683613610565b91506130b482613d47565b602082019050919050565b60006130cc602983613610565b91506130d782613d70565b604082019050919050565b6130eb81613824565b82525050565b6130fa81613886565b82525050565b61310981613890565b82525050565b613118816138a0565b82525050565b600061312a8284612e17565b915081905092915050565b600061314082612ed5565b915061314c8285612dd3565b60208201915061315c8284612dd3565b6020820191508190509392505050565b600061317782613010565b91506131838284612e81565b915081905092915050565b60006020820190506131a36000830184612da6565b92915050565b60006040820190506131be6000830185612da6565b6131cb60208301846130f1565b9392505050565b60006020820190506131e76000830184612db5565b92915050565b60006020820190506132026000830184612dc4565b92915050565b600060c08201905061321d6000830189612dc4565b61322a6020830188612da6565b6132376040830187612da6565b61324460608301866130f1565b61325160808301856130f1565b61325e60a08301846130f1565b979650505050505050565b600060808201905061327e6000830187612dc4565b61328b602083018661310f565b6132986040830185612dc4565b6132a56060830184612dc4565b95945050505050565b600060208201905081810360008301526132c88184612e48565b905092915050565b600060208201905081810360008301526132e981612eb2565b9050919050565b6000602082019050818103600083015261330981612ef8565b9050919050565b6000602082019050818103600083015261332981612f1b565b9050919050565b6000602082019050818103600083015261334981612f3e565b9050919050565b6000602082019050818103600083015261336981612f61565b9050919050565b6000602082019050818103600083015261338981612f84565b9050919050565b600060208201905081810360008301526133a981612fa7565b9050919050565b600060208201905081810360008301526133c981612fca565b9050919050565b600060208201905081810360008301526133e981612fed565b9050919050565b6000602082019050818103600083015261340981613033565b9050919050565b6000602082019050818103600083015261342981613056565b9050919050565b6000602082019050818103600083015261344981613079565b9050919050565b600060208201905081810360008301526134698161309c565b9050919050565b60006020820190508181036000830152613489816130bf565b9050919050565b60006040820190506134a560008301856130e2565b6134b260208301846130e2565b9392505050565b60006060820190506134ce60008301866130e2565b6134db60208301856130e2565b6134e86040830184613100565b949350505050565b600060208201905061350560008301846130f1565b92915050565b600060408201905061352060008301856130f1565b61352d60208301846130f1565b9392505050565b600060608201905061354960008301876130f1565b61355660208301866130f1565b8181036040830152613569818486612dea565b905095945050505050565b600060808201905061358960008301876130f1565b61359660208301866130f1565b6135a360408301856130f1565b6135b060608301846130f1565b95945050505050565b60006020820190506135ce600083018461310f565b92915050565b6000604051905090565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b600061363782613886565b915061364283613886565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613677576136766139a4565b5b828201905092915050565b600061368d8261385e565b91506136988361385e565b9250826136a8576136a76139d3565b5b828204905092915050565b60006136be82613886565b91506136c983613886565b9250826136d9576136d86139d3565b5b828204905092915050565b60006136ef8261385e565b91506136fa8361385e565b9250817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561372f5761372e6139a4565b5b828202905092915050565b600061374582613886565b915061375083613886565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613789576137886139a4565b5b828202905092915050565b600061379f82613886565b91506137aa83613886565b9250828210156137bd576137bc6139a4565b5b828203905092915050565b60006137d382613890565b91506137de83613890565b9250828210156137f1576137f06139a4565b5b828203905092915050565b60006138078261383e565b9050919050565b60008115159050919050565b6000819050919050565b60006dffffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b838110156138da5780820151818401526020810190506138bf565b838111156138e9576000848401525b50505050565b6138f882613a53565b810181811067ffffffffffffffff8211171561391757613916613a02565b5b80604052505050565b600061392b82613886565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561395e5761395d6139a4565b5b600182019050919050565b6000819050919050565b600061397e82613886565b915061398983613886565b925082613999576139986139d3565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060033d1115613a505760046000803e613a4d600051613a64565b90505b90565b6000601f19601f8301169050919050565b60008160e01c9050919050565b7f506f636b6574537761703a20494e53554646494349454e545f494e5055545f4160008201527f4d4f554e54000000000000000000000000000000000000000000000000000000602082015250565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b7f506f636b6574537761703a205452414e534645525f4641494c45440000000000600082015250565b7f506f636b6574537761703a20494e53554646494349454e545f4c49515549444960008201527f54595f4d494e5445440000000000000000000000000000000000000000000000602082015250565b7f554e4b4e574e2100000000000000000000000000000000000000000000000000600082015250565b7f506f636b6574537761703a20494e53554646494349454e545f4c49515549444960008201527f5459000000000000000000000000000000000000000000000000000000000000602082015250565b7f506f636b6574537761703a204c4f434b45440000000000000000000000000000600082015250565b7f506f636b6574537761703a204f564552464c4f57000000000000000000000000600082015250565b7f506f636b6574537761703a204b00000000000000000000000000000000000000600082015250565b7f506f636b6574537761703a204558504952454400000000000000000000000000600082015250565b7f4e4f4b3a20000000000000000000000000000000000000000000000000000000600082015250565b7f506f636b6574537761703a20494e53554646494349454e545f4f55545055545f60008201527f414d4f554e540000000000000000000000000000000000000000000000000000602082015250565b7f506f636b6574537761703a20494e56414c49445f5349474e4154555245000000600082015250565b7f506f636b6574537761703a20464f5242494444454e0000000000000000000000600082015250565b7f506f636b6574537761703a20494e56414c49445f544f00000000000000000000600082015250565b7f506f636b6574537761703a20494e53554646494349454e545f4c49515549444960008201527f54595f4255524e45440000000000000000000000000000000000000000000000602082015250565b600060443d1015613dcf57613e52565b613dd76135d4565b60043d036004823e80513d602482011167ffffffffffffffff82111715613dff575050613e52565b808201805167ffffffffffffffff811115613e1d5750505050613e52565b80602083010160043d038501811115613e3a575050505050613e52565b613e49826020018501866138ef565b82955050505050505b90565b613e5e816137fc565b8114613e6957600080fd5b50565b613e758161380e565b8114613e8057600080fd5b50565b613e8c8161381a565b8114613e9757600080fd5b50565b613ea381613886565b8114613eae57600080fd5b50565b613eba816138a0565b8114613ec557600080fd5b5056fea2646970667358221220aefdcdb8f3591d803bc7387ea9a659f04eb2cacb722a020d049d66ec084bb91a64736f6c63430008040033a26469706673582212203b26622e3e6c90f94d1b3f625a797dc0cd2064bd9d8378acbb29d3ceccd7516c64736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:805:42",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "70:80:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "80:22:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "89:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:13:42"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "80:5:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "138:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "111:26:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:33:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:33:42"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "48:6:42",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "56:3:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:42",
                "type": ""
              }
            ],
            "src": "7:143:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "233:207:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "279:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "288:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "291:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "281:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "281:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "281:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "254:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "263:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "250:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "250:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "275:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "246:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "246:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "243:2:42"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "305:128:42",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "320:15:42",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "334:1:42",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "324:6:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "349:74:42",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "395:9:42"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "406:6:42"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "391:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "391:22:42"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "415:7:42"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "359:31:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "359:64:42"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "349:6:42"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "203:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "214:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "226:6:42",
                "type": ""
              }
            ],
            "src": "156:284:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "491:51:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "501:35:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "530:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "512:17:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "512:24:42"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "501:7:42"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "473:5:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "483:7:42",
                "type": ""
              }
            ],
            "src": "446:96:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "593:81:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "603:65:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "618:5:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "625:42:42",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "614:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "614:54:42"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "603:7:42"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "575:5:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "585:7:42",
                "type": ""
              }
            ],
            "src": "548:126:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "723:79:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "780:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "789:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "792:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "782:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "782:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "782:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "746:5:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "771:5:42"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "753:17:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "753:24:42"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "743:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "743:35:42"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "736:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "736:43:42"
                  },
                  "nodeType": "YulIf",
                  "src": "733:2:42"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "716:5:42",
                "type": ""
              }
            ],
            "src": "680:122:42"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 42,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:9121:42",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:42"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:42"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:42",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:42",
                "type": ""
              }
            ],
            "src": "7:139:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "204:87:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "214:29:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "236:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "223:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "223:20:42"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "214:5:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "279:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "252:26:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "252:33:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "252:33:42"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "182:6:42",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "190:3:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "198:5:42",
                "type": ""
              }
            ],
            "src": "152:139:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "363:196:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "409:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "418:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "421:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "411:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "411:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "411:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "384:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "393:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "380:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "380:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "405:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "376:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "376:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "373:2:42"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "435:117:42",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "450:15:42",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "464:1:42",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "454:6:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "479:63:42",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "514:9:42"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "525:6:42"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "510:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "510:22:42"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "534:7:42"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "489:20:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "489:53:42"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "479:6:42"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "333:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "344:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "356:6:42",
                "type": ""
              }
            ],
            "src": "297:262:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "648:324:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "694:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "703:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "706:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "696:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "696:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "696:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "669:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "678:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "665:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "665:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "690:2:42",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "661:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "661:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "658:2:42"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "720:117:42",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "735:15:42",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "749:1:42",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "739:6:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "764:63:42",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "799:9:42"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "810:6:42"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "795:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "795:22:42"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "819:7:42"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "774:20:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "774:53:42"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "764:6:42"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "847:118:42",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "862:16:42",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "876:2:42",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "866:6:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "892:63:42",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "927:9:42"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "938:6:42"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "923:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "923:22:42"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "947:7:42"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "902:20:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "902:53:42"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "892:6:42"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "610:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "621:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "633:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "641:6:42",
                "type": ""
              }
            ],
            "src": "565:407:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1044:196:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1090:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1099:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1102:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1092:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1092:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1092:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1065:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1074:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1061:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1061:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1086:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1057:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1057:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "1054:2:42"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1116:117:42",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1131:15:42",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1145:1:42",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1135:6:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1160:63:42",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1195:9:42"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1206:6:42"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1191:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1191:22:42"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1215:7:42"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1170:20:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1170:53:42"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1160:6:42"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1014:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1025:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1037:6:42",
                "type": ""
              }
            ],
            "src": "978:262:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1311:53:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1328:3:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1351:5:42"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1333:17:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1333:24:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1321:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1321:37:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1321:37:42"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1299:5:42",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1306:3:42",
                "type": ""
              }
            ],
            "src": "1246:118:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1453:74:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1470:3:42"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1513:5:42"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1495:17:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1495:24:42"
                          }
                        ],
                        "functionName": {
                          "name": "leftAlign_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1475:19:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1475:45:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1463:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1463:58:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1463:58:42"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1441:5:42",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1448:3:42",
                "type": ""
              }
            ],
            "src": "1370:157:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1679:220:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1689:74:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1755:3:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1760:2:42",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1696:58:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1696:67:42"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1689:3:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1861:3:42"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_33c061a661a44521cfee698bc43051a37c096d72760141586fd128cfff5a1b68",
                      "nodeType": "YulIdentifier",
                      "src": "1772:88:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1772:93:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1772:93:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1874:19:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1885:3:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1890:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1881:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1881:12:42"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1874:3:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_33c061a661a44521cfee698bc43051a37c096d72760141586fd128cfff5a1b68_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1667:3:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1675:3:42",
                "type": ""
              }
            ],
            "src": "1533:366:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2051:220:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2061:74:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2127:3:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2132:2:42",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2068:58:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2068:67:42"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2061:3:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2233:3:42"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_4731d8511d262f833b94579fa1abe02d48270948b8b78240f3a067e4e083dc6b",
                      "nodeType": "YulIdentifier",
                      "src": "2144:88:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2144:93:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2144:93:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2246:19:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2257:3:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2262:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2253:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2253:12:42"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2246:3:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_4731d8511d262f833b94579fa1abe02d48270948b8b78240f3a067e4e083dc6b_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2039:3:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2047:3:42",
                "type": ""
              }
            ],
            "src": "1905:366:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2423:220:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2433:74:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2499:3:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2504:2:42",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2440:58:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2440:67:42"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2433:3:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2605:3:42"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_660413ff4d4274da253761c3c946d45a6921e25aff3fc06e265b7d88794ed7e7",
                      "nodeType": "YulIdentifier",
                      "src": "2516:88:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2516:93:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2516:93:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2618:19:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2629:3:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2634:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2625:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2625:12:42"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2618:3:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_660413ff4d4274da253761c3c946d45a6921e25aff3fc06e265b7d88794ed7e7_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2411:3:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2419:3:42",
                "type": ""
              }
            ],
            "src": "2277:366:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2795:220:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2805:74:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2871:3:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2876:2:42",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2812:58:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2812:67:42"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2805:3:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2977:3:42"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_7cf2583fb36fde00e0e020c7a768850f1f7a5ecbe5a4fca10dfaa1ae01828d45",
                      "nodeType": "YulIdentifier",
                      "src": "2888:88:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2888:93:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2888:93:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2990:19:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3001:3:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3006:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2997:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2997:12:42"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2990:3:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_7cf2583fb36fde00e0e020c7a768850f1f7a5ecbe5a4fca10dfaa1ae01828d45_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2783:3:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2791:3:42",
                "type": ""
              }
            ],
            "src": "2649:366:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3167:220:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3177:74:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3243:3:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3248:2:42",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3184:58:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3184:67:42"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3177:3:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3349:3:42"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060",
                      "nodeType": "YulIdentifier",
                      "src": "3260:88:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3260:93:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3260:93:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3362:19:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3373:3:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3378:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3369:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3369:12:42"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3362:3:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3155:3:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3163:3:42",
                "type": ""
              }
            ],
            "src": "3021:366:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3458:53:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3475:3:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3498:5:42"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3480:17:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3480:24:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3468:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3468:37:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3468:37:42"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3446:5:42",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3453:3:42",
                "type": ""
              }
            ],
            "src": "3393:118:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3661:253:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3734:6:42"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3743:3:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3672:61:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3672:75:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3672:75:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3756:19:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3767:3:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3772:2:42",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3763:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3763:12:42"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3756:3:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3847:6:42"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3856:3:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3785:61:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3785:75:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3785:75:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3869:19:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3880:3:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3885:2:42",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3876:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3876:12:42"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3869:3:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3898:10:42",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "3905:3:42"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3898:3:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3632:3:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3638:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3646:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3657:3:42",
                "type": ""
              }
            ],
            "src": "3517:397:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4018:124:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4028:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4040:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4051:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4036:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4036:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4028:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4108:6:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4121:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4132:1:42",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4117:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4117:17:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4064:43:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4064:71:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4064:71:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3990:9:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4002:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4013:4:42",
                "type": ""
              }
            ],
            "src": "3920:222:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4274:206:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4284:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4296:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4307:2:42",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4292:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4292:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4284:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4364:6:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4377:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4388:1:42",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4373:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4373:17:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4320:43:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4320:71:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4320:71:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4445:6:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4458:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4469:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4454:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4454:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4401:43:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4401:72:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4401:72:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4238:9:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4250:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4258:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4269:4:42",
                "type": ""
              }
            ],
            "src": "4148:332:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4612:206:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4622:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4634:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4645:2:42",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4630:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4630:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4622:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4702:6:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4715:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4726:1:42",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4711:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4711:17:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4658:43:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4658:71:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4658:71:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4783:6:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4796:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4807:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4792:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4792:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4739:43:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4739:72:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4739:72:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4576:9:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4588:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4596:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4607:4:42",
                "type": ""
              }
            ],
            "src": "4486:332:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4995:248:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5005:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5017:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5028:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5013:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5013:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5005:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5052:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5063:1:42",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5048:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5048:17:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5071:4:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5077:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5067:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5067:20:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5041:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5041:47:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5041:47:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5097:139:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5231:4:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_33c061a661a44521cfee698bc43051a37c096d72760141586fd128cfff5a1b68_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5105:124:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5105:131:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5097:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_33c061a661a44521cfee698bc43051a37c096d72760141586fd128cfff5a1b68__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4975:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4990:4:42",
                "type": ""
              }
            ],
            "src": "4824:419:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5420:248:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5430:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5442:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5453:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5438:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5438:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5430:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5477:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5488:1:42",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5473:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5473:17:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5496:4:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5502:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5492:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5492:20:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5466:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5466:47:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5466:47:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5522:139:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5656:4:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_4731d8511d262f833b94579fa1abe02d48270948b8b78240f3a067e4e083dc6b_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5530:124:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5530:131:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5522:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4731d8511d262f833b94579fa1abe02d48270948b8b78240f3a067e4e083dc6b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5400:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5415:4:42",
                "type": ""
              }
            ],
            "src": "5249:419:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5845:248:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5855:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5867:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5878:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5863:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5863:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5855:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5902:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5913:1:42",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5898:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5898:17:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5921:4:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5927:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5917:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5917:20:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5891:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5891:47:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5891:47:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5947:139:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6081:4:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_660413ff4d4274da253761c3c946d45a6921e25aff3fc06e265b7d88794ed7e7_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5955:124:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5955:131:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5947:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_660413ff4d4274da253761c3c946d45a6921e25aff3fc06e265b7d88794ed7e7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5825:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5840:4:42",
                "type": ""
              }
            ],
            "src": "5674:419:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6270:248:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6280:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6292:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6303:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6288:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6288:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6280:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6327:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6338:1:42",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6323:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6323:17:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6346:4:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6352:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6342:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6342:20:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6316:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6316:47:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6316:47:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6372:139:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6506:4:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_7cf2583fb36fde00e0e020c7a768850f1f7a5ecbe5a4fca10dfaa1ae01828d45_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6380:124:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6380:131:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6372:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7cf2583fb36fde00e0e020c7a768850f1f7a5ecbe5a4fca10dfaa1ae01828d45__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6250:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6265:4:42",
                "type": ""
              }
            ],
            "src": "6099:419:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6695:248:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6705:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6717:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6728:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6713:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6713:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6705:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6752:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6763:1:42",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6748:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6748:17:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6771:4:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6777:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6767:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6767:20:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6741:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6741:47:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6741:47:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6797:139:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6931:4:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6805:124:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6805:131:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6797:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6675:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6690:4:42",
                "type": ""
              }
            ],
            "src": "6524:419:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7047:124:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7057:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7069:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7080:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7065:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7065:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7057:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7137:6:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7150:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7161:1:42",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7146:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7146:17:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7093:43:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7093:71:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7093:71:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7019:9:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7031:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7042:4:42",
                "type": ""
              }
            ],
            "src": "6949:222:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7273:73:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7290:3:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7295:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7283:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7283:19:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7283:19:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7311:29:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7330:3:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7335:4:42",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7326:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7326:14:42"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "7311:11:42"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7245:3:42",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7250:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "7261:11:42",
                "type": ""
              }
            ],
            "src": "7177:169:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7397:51:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7407:35:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7436:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7418:17:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7418:24:42"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7407:7:42"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7379:5:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7389:7:42",
                "type": ""
              }
            ],
            "src": "7352:96:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7499:81:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7509:65:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7524:5:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7531:42:42",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7520:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7520:54:42"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7509:7:42"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7481:5:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7491:7:42",
                "type": ""
              }
            ],
            "src": "7454:126:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7631:32:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7641:16:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7652:5:42"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7641:7:42"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7613:5:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7623:7:42",
                "type": ""
              }
            ],
            "src": "7586:77:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7716:53:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7726:37:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7757:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "leftAlign_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7737:19:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7737:26:42"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "7726:7:42"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7698:5:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "7708:7:42",
                "type": ""
              }
            ],
            "src": "7669:100:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7822:47:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7832:31:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7857:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "shift_left_96",
                      "nodeType": "YulIdentifier",
                      "src": "7843:13:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7843:20:42"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "7832:7:42"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7804:5:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "7814:7:42",
                "type": ""
              }
            ],
            "src": "7775:94:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7917:52:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7927:35:42",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7952:2:42",
                        "type": "",
                        "value": "96"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7956:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "shl",
                      "nodeType": "YulIdentifier",
                      "src": "7948:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7948:14:42"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "7927:8:42"
                    }
                  ]
                }
              ]
            },
            "name": "shift_left_96",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7898:5:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "7908:8:42",
                "type": ""
              }
            ],
            "src": "7875:94:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8081:62:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8103:6:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8111:1:42",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8099:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8099:14:42"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8115:20:42",
                        "type": "",
                        "value": "PocketSwap:BIG_FEE"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8092:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8092:44:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8092:44:42"
                }
              ]
            },
            "name": "store_literal_in_memory_33c061a661a44521cfee698bc43051a37c096d72760141586fd128cfff5a1b68",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8073:6:42",
                "type": ""
              }
            ],
            "src": "7975:168:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8255:67:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8277:6:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8285:1:42",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8273:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8273:14:42"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8289:25:42",
                        "type": "",
                        "value": "PocketSwap:ZERO_ADDRESS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8266:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8266:49:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8266:49:42"
                }
              ]
            },
            "name": "store_literal_in_memory_4731d8511d262f833b94579fa1abe02d48270948b8b78240f3a067e4e083dc6b",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8247:6:42",
                "type": ""
              }
            ],
            "src": "8149:173:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8434:74:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8456:6:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8464:1:42",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8452:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8452:14:42"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8468:32:42",
                        "type": "",
                        "value": "PocketSwap:IDENTICAL_ADDRESSES"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8445:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8445:56:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8445:56:42"
                }
              ]
            },
            "name": "store_literal_in_memory_660413ff4d4274da253761c3c946d45a6921e25aff3fc06e265b7d88794ed7e7",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8426:6:42",
                "type": ""
              }
            ],
            "src": "8328:180:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8620:66:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8642:6:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8650:1:42",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8638:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8638:14:42"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8654:24:42",
                        "type": "",
                        "value": "PocketSwap:PAIR_EXISTS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8631:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8631:48:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8631:48:42"
                }
              ]
            },
            "name": "store_literal_in_memory_7cf2583fb36fde00e0e020c7a768850f1f7a5ecbe5a4fca10dfaa1ae01828d45",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8612:6:42",
                "type": ""
              }
            ],
            "src": "8514:172:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8798:64:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8820:6:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8828:1:42",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8816:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8816:14:42"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8832:22:42",
                        "type": "",
                        "value": "PocketSwap:FORBIDDEN"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8809:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8809:46:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8809:46:42"
                }
              ]
            },
            "name": "store_literal_in_memory_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8790:6:42",
                "type": ""
              }
            ],
            "src": "8692:170:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8911:79:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8968:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8977:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8980:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8970:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8970:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8970:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8934:5:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8959:5:42"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "8941:17:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8941:24:42"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8931:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8931:35:42"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8924:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8924:43:42"
                  },
                  "nodeType": "YulIf",
                  "src": "8921:2:42"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8904:5:42",
                "type": ""
              }
            ],
            "src": "8868:122:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9039:79:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9096:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9105:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9108:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9098:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9098:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9098:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9062:5:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9087:5:42"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "9069:17:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9069:24:42"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9059:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9059:35:42"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9052:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9052:43:42"
                  },
                  "nodeType": "YulIf",
                  "src": "9049:2:42"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9032:5:42",
                "type": ""
              }
            ],
            "src": "8996:122:42"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_t_stringliteral_33c061a661a44521cfee698bc43051a37c096d72760141586fd128cfff5a1b68_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_33c061a661a44521cfee698bc43051a37c096d72760141586fd128cfff5a1b68(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_4731d8511d262f833b94579fa1abe02d48270948b8b78240f3a067e4e083dc6b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_4731d8511d262f833b94579fa1abe02d48270948b8b78240f3a067e4e083dc6b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_660413ff4d4274da253761c3c946d45a6921e25aff3fc06e265b7d88794ed7e7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_660413ff4d4274da253761c3c946d45a6921e25aff3fc06e265b7d88794ed7e7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_7cf2583fb36fde00e0e020c7a768850f1f7a5ecbe5a4fca10dfaa1ae01828d45_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_7cf2583fb36fde00e0e020c7a768850f1f7a5ecbe5a4fca10dfaa1ae01828d45(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_33c061a661a44521cfee698bc43051a37c096d72760141586fd128cfff5a1b68__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_33c061a661a44521cfee698bc43051a37c096d72760141586fd128cfff5a1b68_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4731d8511d262f833b94579fa1abe02d48270948b8b78240f3a067e4e083dc6b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4731d8511d262f833b94579fa1abe02d48270948b8b78240f3a067e4e083dc6b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_660413ff4d4274da253761c3c946d45a6921e25aff3fc06e265b7d88794ed7e7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_660413ff4d4274da253761c3c946d45a6921e25aff3fc06e265b7d88794ed7e7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7cf2583fb36fde00e0e020c7a768850f1f7a5ecbe5a4fca10dfaa1ae01828d45__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7cf2583fb36fde00e0e020c7a768850f1f7a5ecbe5a4fca10dfaa1ae01828d45_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function store_literal_in_memory_33c061a661a44521cfee698bc43051a37c096d72760141586fd128cfff5a1b68(memPtr) {\n\n        mstore(add(memPtr, 0), \"PocketSwap:BIG_FEE\")\n\n    }\n\n    function store_literal_in_memory_4731d8511d262f833b94579fa1abe02d48270948b8b78240f3a067e4e083dc6b(memPtr) {\n\n        mstore(add(memPtr, 0), \"PocketSwap:ZERO_ADDRESS\")\n\n    }\n\n    function store_literal_in_memory_660413ff4d4274da253761c3c946d45a6921e25aff3fc06e265b7d88794ed7e7(memPtr) {\n\n        mstore(add(memPtr, 0), \"PocketSwap:IDENTICAL_ADDRESSES\")\n\n    }\n\n    function store_literal_in_memory_7cf2583fb36fde00e0e020c7a768850f1f7a5ecbe5a4fca10dfaa1ae01828d45(memPtr) {\n\n        mstore(add(memPtr, 0), \"PocketSwap:PAIR_EXISTS\")\n\n    }\n\n    function store_literal_in_memory_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060(memPtr) {\n\n        mstore(add(memPtr, 0), \"PocketSwap:FORBIDDEN\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 42,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "143:1821:6:-:0;;;267:3;237:33;;447:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;501:10;489:9;;:22;;;;;;;;;;;;;;;;;;447:71;143:1821;;7:143:42;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;226:6;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:96::-;483:7;512:24;530:5;512:24;:::i;:::-;501:35;;491:51;;;:::o;548:126::-;585:7;625:42;618:5;614:54;603:65;;593:81;;;:::o;680:122::-;753:24;771:5;753:24;:::i;:::-;746:5;743:35;733:2;;792:1;789;782:12;733:2;723:79;:::o;143:1821:6:-;;;;;;;",
  "deployedSourceMap": "143:1821:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;406:34;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;524:103;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1598:193;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;198:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1797:165;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;633:959;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;237:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;329:71;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;406:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;524:103::-;582:4;605:8;:15;;;;598:22;;524:103;:::o;1598:193::-;1678:9;;;;;;;;;;1664:23;;:10;:23;;;1656:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1737:4;1730;:11;1722:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;1780:4;1774:3;:10;;;;1598:193;:::o;198:33::-;;;;;;;;;;;;:::o;1797:165::-;1889:9;;;;;;;;;;1875:23;;:10;:23;;;1867:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1945:10;1933:9;;:22;;;;;;;;;;;;;;;;;;1797:165;:::o;633:959::-;712:12;754:6;744:16;;:6;:16;;;;736:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;806:14;822;849:6;840:15;;:6;:15;;;:53;;878:6;886;840:53;;;859:6;867;840:53;805:88;;;;929:1;911:20;;:6;:20;;;;903:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1012:1;977:37;;:7;:15;985:6;977:15;;;;;;;;;;;;;;;:23;993:6;977:23;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;969:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1081:21;1105:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1081:57;;1148:12;1190:6;1198;1173:32;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1163:43;;;;;;1148:58;;1294:4;1283:8;1277:15;1272:2;1262:8;1258:17;1255:1;1247:52;1239:60;;1334:4;1319:31;;;1351:6;1359;1319:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1402:4;1376:7;:15;1384:6;1376:15;;;;;;;;;;;;;;;:23;1392:6;1376:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1442:4;1416:7;:15;1424:6;1416:15;;;;;;;;;;;;;;;:23;1432:6;1416:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1501:8;1515:4;1501:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1555:6;1535:50;;1547:6;1535:50;;;1563:4;1569:8;:15;;;;1535:50;;;;;;;:::i;:::-;;;;;;;;633:959;;;;;;;;:::o;237:33::-;;;;:::o;329:71::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:139:42:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;356:6;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:407::-;633:6;641;690:2;678:9;669:7;665:23;661:32;658:2;;;706:1;703;696:12;658:2;749:1;774:53;819:7;810:6;799:9;795:22;774:53;:::i;:::-;764:63;;720:117;876:2;902:53;947:7;938:6;927:9;923:22;902:53;:::i;:::-;892:63;;847:118;648:324;;;;;:::o;978:262::-;1037:6;1086:2;1074:9;1065:7;1061:23;1057:32;1054:2;;;1102:1;1099;1092:12;1054:2;1145:1;1170:53;1215:7;1206:6;1195:9;1191:22;1170:53;:::i;:::-;1160:63;;1116:117;1044:196;;;;:::o;1246:118::-;1333:24;1351:5;1333:24;:::i;:::-;1328:3;1321:37;1311:53;;:::o;1370:157::-;1475:45;1495:24;1513:5;1495:24;:::i;:::-;1475:45;:::i;:::-;1470:3;1463:58;1453:74;;:::o;1533:366::-;1675:3;1696:67;1760:2;1755:3;1696:67;:::i;:::-;1689:74;;1772:93;1861:3;1772:93;:::i;:::-;1890:2;1885:3;1881:12;1874:19;;1679:220;;;:::o;1905:366::-;2047:3;2068:67;2132:2;2127:3;2068:67;:::i;:::-;2061:74;;2144:93;2233:3;2144:93;:::i;:::-;2262:2;2257:3;2253:12;2246:19;;2051:220;;;:::o;2277:366::-;2419:3;2440:67;2504:2;2499:3;2440:67;:::i;:::-;2433:74;;2516:93;2605:3;2516:93;:::i;:::-;2634:2;2629:3;2625:12;2618:19;;2423:220;;;:::o;2649:366::-;2791:3;2812:67;2876:2;2871:3;2812:67;:::i;:::-;2805:74;;2888:93;2977:3;2888:93;:::i;:::-;3006:2;3001:3;2997:12;2990:19;;2795:220;;;:::o;3021:366::-;3163:3;3184:67;3248:2;3243:3;3184:67;:::i;:::-;3177:74;;3260:93;3349:3;3260:93;:::i;:::-;3378:2;3373:3;3369:12;3362:19;;3167:220;;;:::o;3393:118::-;3480:24;3498:5;3480:24;:::i;:::-;3475:3;3468:37;3458:53;;:::o;3517:397::-;3657:3;3672:75;3743:3;3734:6;3672:75;:::i;:::-;3772:2;3767:3;3763:12;3756:19;;3785:75;3856:3;3847:6;3785:75;:::i;:::-;3885:2;3880:3;3876:12;3869:19;;3905:3;3898:10;;3661:253;;;;;:::o;3920:222::-;4013:4;4051:2;4040:9;4036:18;4028:26;;4064:71;4132:1;4121:9;4117:17;4108:6;4064:71;:::i;:::-;4018:124;;;;:::o;4148:332::-;4269:4;4307:2;4296:9;4292:18;4284:26;;4320:71;4388:1;4377:9;4373:17;4364:6;4320:71;:::i;:::-;4401:72;4469:2;4458:9;4454:18;4445:6;4401:72;:::i;:::-;4274:206;;;;;:::o;4486:332::-;4607:4;4645:2;4634:9;4630:18;4622:26;;4658:71;4726:1;4715:9;4711:17;4702:6;4658:71;:::i;:::-;4739:72;4807:2;4796:9;4792:18;4783:6;4739:72;:::i;:::-;4612:206;;;;;:::o;4824:419::-;4990:4;5028:2;5017:9;5013:18;5005:26;;5077:9;5071:4;5067:20;5063:1;5052:9;5048:17;5041:47;5105:131;5231:4;5105:131;:::i;:::-;5097:139;;4995:248;;;:::o;5249:419::-;5415:4;5453:2;5442:9;5438:18;5430:26;;5502:9;5496:4;5492:20;5488:1;5477:9;5473:17;5466:47;5530:131;5656:4;5530:131;:::i;:::-;5522:139;;5420:248;;;:::o;5674:419::-;5840:4;5878:2;5867:9;5863:18;5855:26;;5927:9;5921:4;5917:20;5913:1;5902:9;5898:17;5891:47;5955:131;6081:4;5955:131;:::i;:::-;5947:139;;5845:248;;;:::o;6099:419::-;6265:4;6303:2;6292:9;6288:18;6280:26;;6352:9;6346:4;6342:20;6338:1;6327:9;6323:17;6316:47;6380:131;6506:4;6380:131;:::i;:::-;6372:139;;6270:248;;;:::o;6524:419::-;6690:4;6728:2;6717:9;6713:18;6705:26;;6777:9;6771:4;6767:20;6763:1;6752:9;6748:17;6741:47;6805:131;6931:4;6805:131;:::i;:::-;6797:139;;6695:248;;;:::o;6949:222::-;7042:4;7080:2;7069:9;7065:18;7057:26;;7093:71;7161:1;7150:9;7146:17;7137:6;7093:71;:::i;:::-;7047:124;;;;:::o;7177:169::-;7261:11;7295:6;7290:3;7283:19;7335:4;7330:3;7326:14;7311:29;;7273:73;;;;:::o;7352:96::-;7389:7;7418:24;7436:5;7418:24;:::i;:::-;7407:35;;7397:51;;;:::o;7454:126::-;7491:7;7531:42;7524:5;7520:54;7509:65;;7499:81;;;:::o;7586:77::-;7623:7;7652:5;7641:16;;7631:32;;;:::o;7669:100::-;7708:7;7737:26;7757:5;7737:26;:::i;:::-;7726:37;;7716:53;;;:::o;7775:94::-;7814:7;7843:20;7857:5;7843:20;:::i;:::-;7832:31;;7822:47;;;:::o;7875:94::-;7908:8;7956:5;7952:2;7948:14;7927:35;;7917:52;;;:::o;7975:168::-;8115:20;8111:1;8103:6;8099:14;8092:44;8081:62;:::o;8149:173::-;8289:25;8285:1;8277:6;8273:14;8266:49;8255:67;:::o;8328:180::-;8468:32;8464:1;8456:6;8452:14;8445:56;8434:74;:::o;8514:172::-;8654:24;8650:1;8642:6;8638:14;8631:48;8620:66;:::o;8692:170::-;8832:22;8828:1;8820:6;8816:14;8809:46;8798:64;:::o;8868:122::-;8941:24;8959:5;8941:24;:::i;:::-;8934:5;8931:35;8921:2;;8980:1;8977;8970:12;8921:2;8911:79;:::o;8996:122::-;9069:24;9087:5;9069:24;:::i;:::-;9062:5;9059:35;9049:2;;9108:1;9105;9098:12;9049:2;9039:79;:::o",
  "source": "// SPDX-License-Identifier: Unlicensed\npragma solidity =0.8.4;\n\n\nimport './PocketSwapPair.sol';\nimport './interfaces/IPocketSwapFactory.sol';\n\ncontract PocketSwapFactory is IPocketSwapFactory {\n    address public override feeSetter;\n    uint256 public override fee = 3e6; // 1e9 = 100%; 1e8 = 10%; 1e7 = 1%; 1e6 = 0.1% ....\n\n    mapping(address => mapping(address => address)) public override getPair;\n    address[] public override allPairs;\n\n    constructor(address _feeSetter) {\n        feeSetter = _feeSetter;\n    }\n\n    function allPairsLength() external override view returns (uint) {\n        return allPairs.length;\n    }\n\n    function createPair(address tokenA, address tokenB) external override returns (address pair) {\n        require(tokenA != tokenB, 'PocketSwap:IDENTICAL_ADDRESSES');\n        (address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\n        require(token0 != address(0), 'PocketSwap:ZERO_ADDRESS');\n        require(getPair[token0][token1] == address(0), 'PocketSwap:PAIR_EXISTS'); // single check is sufficient\n        bytes memory bytecode = type(PocketSwapPair).creationCode;\n        bytes32 salt = keccak256(abi.encodePacked(token0, token1));\n        assembly {\n            pair := create2(0, add(bytecode, 32), mload(bytecode), salt)\n        }\n\n        PocketSwapPair(pair).initialize(token0, token1);\n        getPair[token0][token1] = pair;\n        getPair[token1][token0] = pair; // populate mapping in the reverse direction\n        allPairs.push(pair);\n        emit PairCreated(token0, token1, pair, allPairs.length);\n    }\n\n    function setFee(uint256 _fee) external override {\n        require(msg.sender == feeSetter, 'PocketSwap:FORBIDDEN');\n        require(_fee < 1e18, 'PocketSwap:BIG_FEE');\n        fee = _fee;\n    }\n\n    function setFeeSetter(address _feeSetter) external override {\n        require(msg.sender == feeSetter, 'PocketSwap:FORBIDDEN');\n        feeSetter = _feeSetter;\n    }\n}\n",
  "sourcePath": "/Users/ilyk/projects/midgardtech/xpocket-PocketSwap/contracts/pocketswap/PocketSwapFactory.sol",
  "ast": {
    "absolutePath": "/Users/ilyk/projects/midgardtech/xpocket-PocketSwap/contracts/pocketswap/PocketSwapFactory.sol",
    "exportedSymbols": {
      "IERC20": [
        6238
      ],
      "IPocketSwapCallback": [
        4336
      ],
      "IPocketSwapERC20": [
        3966
      ],
      "IPocketSwapFactory": [
        4029
      ],
      "IPocketSwapPair": [
        4216
      ],
      "Math": [
        4735
      ],
      "PlainMath": [
        4953
      ],
      "PocketSwapERC20": [
        1365
      ],
      "PocketSwapFactory": [
        1568
      ],
      "PocketSwapPair": [
        2479
      ],
      "StorageData": [
        5653
      ],
      "UQ112x112": [
        5628
      ]
    },
    "id": 1569,
    "license": "Unlicensed",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1367,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:6"
      },
      {
        "absolutePath": "/Users/ilyk/projects/midgardtech/xpocket-PocketSwap/contracts/pocketswap/PocketSwapPair.sol",
        "file": "./PocketSwapPair.sol",
        "id": 1368,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1569,
        "sourceUnit": 2480,
        "src": "65:30:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ilyk/projects/midgardtech/xpocket-PocketSwap/contracts/pocketswap/interfaces/IPocketSwapFactory.sol",
        "file": "./interfaces/IPocketSwapFactory.sol",
        "id": 1369,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1569,
        "sourceUnit": 4030,
        "src": "96:45:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1370,
              "name": "IPocketSwapFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4029,
              "src": "173:18:6"
            },
            "id": 1371,
            "nodeType": "InheritanceSpecifier",
            "src": "173:18:6"
          }
        ],
        "contractDependencies": [
          2479
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1568,
        "linearizedBaseContracts": [
          1568,
          4029
        ],
        "name": "PocketSwapFactory",
        "nameLocation": "152:17:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              3993
            ],
            "constant": false,
            "functionSelector": "87cf3ef4",
            "id": 1374,
            "mutability": "mutable",
            "name": "feeSetter",
            "nameLocation": "222:9:6",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1373,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "213:8:6"
            },
            "scope": 1568,
            "src": "198:33:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1372,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "198:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3973
            ],
            "constant": false,
            "functionSelector": "ddca3f43",
            "id": 1378,
            "mutability": "mutable",
            "name": "fee",
            "nameLocation": "261:3:6",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1376,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "252:8:6"
            },
            "scope": 1568,
            "src": "237:33:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1375,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "237:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "336536",
              "id": 1377,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "267:3:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3000000_by_1",
                "typeString": "int_const 3000000"
              },
              "value": "3e6"
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4002
            ],
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 1385,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "393:7:6",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1384,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "384:8:6"
            },
            "scope": 1568,
            "src": "329:71:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 1383,
              "keyType": {
                "id": 1379,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "337:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "329:47:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 1382,
                "keyType": {
                  "id": 1380,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "356:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "348:27:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 1381,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "367:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4009
            ],
            "constant": false,
            "functionSelector": "1e3dd18b",
            "id": 1389,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "432:8:6",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1388,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "423:8:6"
            },
            "scope": 1568,
            "src": "406:34:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1386,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "406:7:6",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1387,
              "nodeType": "ArrayTypeName",
              "src": "406:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1398,
              "nodeType": "Block",
              "src": "479:39:6",
              "statements": [
                {
                  "expression": {
                    "id": 1396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1394,
                      "name": "feeSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1374,
                      "src": "489:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1395,
                      "name": "_feeSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1391,
                      "src": "501:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "489:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1397,
                  "nodeType": "ExpressionStatement",
                  "src": "489:22:6"
                }
              ]
            },
            "id": 1399,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1391,
                  "mutability": "mutable",
                  "name": "_feeSetter",
                  "nameLocation": "467:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1399,
                  "src": "459:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1390,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "459:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "458:20:6"
            },
            "returnParameters": {
              "id": 1393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "479:0:6"
            },
            "scope": 1568,
            "src": "447:71:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4014
            ],
            "body": {
              "id": 1408,
              "nodeType": "Block",
              "src": "588:39:6",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1405,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1389,
                      "src": "605:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 1406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "605:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1404,
                  "id": 1407,
                  "nodeType": "Return",
                  "src": "598:22:6"
                }
              ]
            },
            "functionSelector": "574f2ba3",
            "id": 1409,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nameLocation": "533:14:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1401,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "559:8:6"
            },
            "parameters": {
              "id": 1400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "547:2:6"
            },
            "returnParameters": {
              "id": 1404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1403,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1409,
                  "src": "582:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1402,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "582:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "581:6:6"
            },
            "scope": 1568,
            "src": "524:103:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4023
            ],
            "body": {
              "id": 1521,
              "nodeType": "Block",
              "src": "726:866:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1420,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1411,
                          "src": "744:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1421,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1413,
                          "src": "754:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "744:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b6574537761703a4944454e544943414c5f414444524553534553",
                        "id": 1423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "762:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_660413ff4d4274da253761c3c946d45a6921e25aff3fc06e265b7d88794ed7e7",
                          "typeString": "literal_string \"PocketSwap:IDENTICAL_ADDRESSES\""
                        },
                        "value": "PocketSwap:IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_660413ff4d4274da253761c3c946d45a6921e25aff3fc06e265b7d88794ed7e7",
                          "typeString": "literal_string \"PocketSwap:IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 1419,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "736:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "736:59:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1425,
                  "nodeType": "ExpressionStatement",
                  "src": "736:59:6"
                },
                {
                  "assignments": [
                    1427,
                    1429
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1427,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "814:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1521,
                      "src": "806:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1426,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "806:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1429,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "830:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1521,
                      "src": "822:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1428,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "822:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1440,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1430,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1411,
                        "src": "840:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 1431,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1413,
                        "src": "849:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "840:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 1436,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1413,
                          "src": "878:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1437,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1411,
                          "src": "886:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1438,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "877:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 1439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "840:53:6",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 1433,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1411,
                          "src": "859:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1434,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1413,
                          "src": "867:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1435,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "858:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "805:88:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1442,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "911:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1445,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "929:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "921:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1443,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "921:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "921:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "911:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b6574537761703a5a45524f5f41444452455353",
                        "id": 1448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "933:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4731d8511d262f833b94579fa1abe02d48270948b8b78240f3a067e4e083dc6b",
                          "typeString": "literal_string \"PocketSwap:ZERO_ADDRESS\""
                        },
                        "value": "PocketSwap:ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4731d8511d262f833b94579fa1abe02d48270948b8b78240f3a067e4e083dc6b",
                          "typeString": "literal_string \"PocketSwap:ZERO_ADDRESS\""
                        }
                      ],
                      "id": 1441,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "903:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "903:56:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1450,
                  "nodeType": "ExpressionStatement",
                  "src": "903:56:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1452,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1385,
                              "src": "977:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 1454,
                            "indexExpression": {
                              "id": 1453,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1427,
                              "src": "985:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "977:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 1456,
                          "indexExpression": {
                            "id": 1455,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1429,
                            "src": "993:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "977:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1459,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1012:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1004:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1457,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1004:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1004:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "977:37:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b6574537761703a504149525f455849535453",
                        "id": 1462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1016:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7cf2583fb36fde00e0e020c7a768850f1f7a5ecbe5a4fca10dfaa1ae01828d45",
                          "typeString": "literal_string \"PocketSwap:PAIR_EXISTS\""
                        },
                        "value": "PocketSwap:PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7cf2583fb36fde00e0e020c7a768850f1f7a5ecbe5a4fca10dfaa1ae01828d45",
                          "typeString": "literal_string \"PocketSwap:PAIR_EXISTS\""
                        }
                      ],
                      "id": 1451,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "969:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "969:72:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1464,
                  "nodeType": "ExpressionStatement",
                  "src": "969:72:6"
                },
                {
                  "assignments": [
                    1466
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1466,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "1094:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1521,
                      "src": "1081:21:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1465,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1081:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1471,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1468,
                          "name": "PocketSwapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2479,
                          "src": "1110:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PocketSwapPair_$2479_$",
                            "typeString": "type(contract PocketSwapPair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_PocketSwapPair_$2479_$",
                            "typeString": "type(contract PocketSwapPair)"
                          }
                        ],
                        "id": 1467,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "1105:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 1469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1105:20:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_PocketSwapPair_$2479",
                        "typeString": "type(contract PocketSwapPair)"
                      }
                    },
                    "id": 1470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1105:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1081:57:6"
                },
                {
                  "assignments": [
                    1473
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1473,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1156:4:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1521,
                      "src": "1148:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1472,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1148:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1481,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1477,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1427,
                            "src": "1190:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1478,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1429,
                            "src": "1198:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1475,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1173:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1173:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1173:32:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1474,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1163:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1163:43:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1148:58:6"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1225:84:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1239:60:6",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1255:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1262:8:6"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1272:2:6",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1258:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1258:17:6"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1283:8:6"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1277:5:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1277:15:6"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1294:4:6"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1247:7:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1247:52:6"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "1239:4:6"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 1466,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1262:8:6",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1466,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1283:8:6",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1417,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1239:4:6",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1473,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1294:4:6",
                      "valueSize": 1
                    }
                  ],
                  "id": 1482,
                  "nodeType": "InlineAssembly",
                  "src": "1216:93:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1487,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1427,
                        "src": "1351:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1488,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1429,
                        "src": "1359:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1484,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1417,
                            "src": "1334:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1483,
                          "name": "PocketSwapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2479,
                          "src": "1319:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PocketSwapPair_$2479_$",
                            "typeString": "type(contract PocketSwapPair)"
                          }
                        },
                        "id": 1485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1319:20:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PocketSwapPair_$2479",
                          "typeString": "contract PocketSwapPair"
                        }
                      },
                      "id": 1486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1728,
                      "src": "1319:31:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 1489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1319:47:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1490,
                  "nodeType": "ExpressionStatement",
                  "src": "1319:47:6"
                },
                {
                  "expression": {
                    "id": 1497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1491,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1385,
                          "src": "1376:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 1494,
                        "indexExpression": {
                          "id": 1492,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "1384:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1376:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1495,
                      "indexExpression": {
                        "id": 1493,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1429,
                        "src": "1392:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1376:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1496,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1417,
                      "src": "1402:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1376:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1498,
                  "nodeType": "ExpressionStatement",
                  "src": "1376:30:6"
                },
                {
                  "expression": {
                    "id": 1505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1499,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1385,
                          "src": "1416:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 1502,
                        "indexExpression": {
                          "id": 1500,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1429,
                          "src": "1424:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1416:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1503,
                      "indexExpression": {
                        "id": 1501,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1427,
                        "src": "1432:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1416:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1504,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1417,
                      "src": "1442:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1416:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1506,
                  "nodeType": "ExpressionStatement",
                  "src": "1416:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1510,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1417,
                        "src": "1515:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1507,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1389,
                        "src": "1501:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1501:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 1511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1501:19:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1512,
                  "nodeType": "ExpressionStatement",
                  "src": "1501:19:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1514,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1427,
                        "src": "1547:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1515,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1429,
                        "src": "1555:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1516,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1417,
                        "src": "1563:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1517,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1389,
                          "src": "1569:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 1518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1569:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1513,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3988,
                      "src": "1535:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 1519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1535:50:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1520,
                  "nodeType": "EmitStatement",
                  "src": "1530:55:6"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 1522,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "642:10:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1415,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "694:8:6"
            },
            "parameters": {
              "id": 1414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1411,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "661:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1522,
                  "src": "653:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1410,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "653:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1413,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "677:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1522,
                  "src": "669:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1412,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "669:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "652:32:6"
            },
            "returnParameters": {
              "id": 1418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1417,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "720:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1522,
                  "src": "712:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1416,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "712:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "711:14:6"
            },
            "scope": 1568,
            "src": "633:959:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3978
            ],
            "body": {
              "id": 1547,
              "nodeType": "Block",
              "src": "1646:145:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1529,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1664:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1664:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1531,
                          "name": "feeSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1374,
                          "src": "1678:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1664:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b6574537761703a464f5242494444454e",
                        "id": 1533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1689:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060",
                          "typeString": "literal_string \"PocketSwap:FORBIDDEN\""
                        },
                        "value": "PocketSwap:FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060",
                          "typeString": "literal_string \"PocketSwap:FORBIDDEN\""
                        }
                      ],
                      "id": 1528,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1656:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1656:56:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1535,
                  "nodeType": "ExpressionStatement",
                  "src": "1656:56:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1537,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1524,
                          "src": "1730:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 1538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1737:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "1730:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b6574537761703a4249475f464545",
                        "id": 1540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1743:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_33c061a661a44521cfee698bc43051a37c096d72760141586fd128cfff5a1b68",
                          "typeString": "literal_string \"PocketSwap:BIG_FEE\""
                        },
                        "value": "PocketSwap:BIG_FEE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_33c061a661a44521cfee698bc43051a37c096d72760141586fd128cfff5a1b68",
                          "typeString": "literal_string \"PocketSwap:BIG_FEE\""
                        }
                      ],
                      "id": 1536,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1722:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1722:42:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1542,
                  "nodeType": "ExpressionStatement",
                  "src": "1722:42:6"
                },
                {
                  "expression": {
                    "id": 1545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1543,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1378,
                      "src": "1774:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1544,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1524,
                      "src": "1780:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1774:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1546,
                  "nodeType": "ExpressionStatement",
                  "src": "1774:10:6"
                }
              ]
            },
            "functionSelector": "69fe0e2d",
            "id": 1548,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFee",
            "nameLocation": "1607:6:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1526,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1637:8:6"
            },
            "parameters": {
              "id": 1525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1524,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "1622:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1548,
                  "src": "1614:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1523,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1614:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1613:14:6"
            },
            "returnParameters": {
              "id": 1527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1646:0:6"
            },
            "scope": 1568,
            "src": "1598:193:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4028
            ],
            "body": {
              "id": 1566,
              "nodeType": "Block",
              "src": "1857:105:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1555,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1875:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1875:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1557,
                          "name": "feeSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1374,
                          "src": "1889:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1875:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b6574537761703a464f5242494444454e",
                        "id": 1559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1900:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060",
                          "typeString": "literal_string \"PocketSwap:FORBIDDEN\""
                        },
                        "value": "PocketSwap:FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060",
                          "typeString": "literal_string \"PocketSwap:FORBIDDEN\""
                        }
                      ],
                      "id": 1554,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1867:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1867:56:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1561,
                  "nodeType": "ExpressionStatement",
                  "src": "1867:56:6"
                },
                {
                  "expression": {
                    "id": 1564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1562,
                      "name": "feeSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1374,
                      "src": "1933:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1563,
                      "name": "_feeSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1550,
                      "src": "1945:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1933:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1565,
                  "nodeType": "ExpressionStatement",
                  "src": "1933:22:6"
                }
              ]
            },
            "functionSelector": "b19805af",
            "id": 1567,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeSetter",
            "nameLocation": "1806:12:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1552,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1848:8:6"
            },
            "parameters": {
              "id": 1551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1550,
                  "mutability": "mutable",
                  "name": "_feeSetter",
                  "nameLocation": "1827:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1567,
                  "src": "1819:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1549,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1819:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1818:20:6"
            },
            "returnParameters": {
              "id": 1553,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1857:0:6"
            },
            "scope": 1568,
            "src": "1797:165:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1569,
        "src": "143:1821:6",
        "usedErrors": []
      }
    ],
    "src": "39:1926:6"
  },
  "legacyAST": {
    "absolutePath": "/Users/ilyk/projects/midgardtech/xpocket-PocketSwap/contracts/pocketswap/PocketSwapFactory.sol",
    "exportedSymbols": {
      "IERC20": [
        6238
      ],
      "IPocketSwapCallback": [
        4336
      ],
      "IPocketSwapERC20": [
        3966
      ],
      "IPocketSwapFactory": [
        4029
      ],
      "IPocketSwapPair": [
        4216
      ],
      "Math": [
        4735
      ],
      "PlainMath": [
        4953
      ],
      "PocketSwapERC20": [
        1365
      ],
      "PocketSwapFactory": [
        1568
      ],
      "PocketSwapPair": [
        2479
      ],
      "StorageData": [
        5653
      ],
      "UQ112x112": [
        5628
      ]
    },
    "id": 1569,
    "license": "Unlicensed",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1367,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:6"
      },
      {
        "absolutePath": "/Users/ilyk/projects/midgardtech/xpocket-PocketSwap/contracts/pocketswap/PocketSwapPair.sol",
        "file": "./PocketSwapPair.sol",
        "id": 1368,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1569,
        "sourceUnit": 2480,
        "src": "65:30:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ilyk/projects/midgardtech/xpocket-PocketSwap/contracts/pocketswap/interfaces/IPocketSwapFactory.sol",
        "file": "./interfaces/IPocketSwapFactory.sol",
        "id": 1369,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1569,
        "sourceUnit": 4030,
        "src": "96:45:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1370,
              "name": "IPocketSwapFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4029,
              "src": "173:18:6"
            },
            "id": 1371,
            "nodeType": "InheritanceSpecifier",
            "src": "173:18:6"
          }
        ],
        "contractDependencies": [
          2479
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1568,
        "linearizedBaseContracts": [
          1568,
          4029
        ],
        "name": "PocketSwapFactory",
        "nameLocation": "152:17:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              3993
            ],
            "constant": false,
            "functionSelector": "87cf3ef4",
            "id": 1374,
            "mutability": "mutable",
            "name": "feeSetter",
            "nameLocation": "222:9:6",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1373,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "213:8:6"
            },
            "scope": 1568,
            "src": "198:33:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1372,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "198:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3973
            ],
            "constant": false,
            "functionSelector": "ddca3f43",
            "id": 1378,
            "mutability": "mutable",
            "name": "fee",
            "nameLocation": "261:3:6",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1376,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "252:8:6"
            },
            "scope": 1568,
            "src": "237:33:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1375,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "237:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "336536",
              "id": 1377,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "267:3:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3000000_by_1",
                "typeString": "int_const 3000000"
              },
              "value": "3e6"
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4002
            ],
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 1385,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "393:7:6",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1384,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "384:8:6"
            },
            "scope": 1568,
            "src": "329:71:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 1383,
              "keyType": {
                "id": 1379,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "337:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "329:47:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 1382,
                "keyType": {
                  "id": 1380,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "356:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "348:27:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 1381,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "367:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4009
            ],
            "constant": false,
            "functionSelector": "1e3dd18b",
            "id": 1389,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "432:8:6",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1388,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "423:8:6"
            },
            "scope": 1568,
            "src": "406:34:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1386,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "406:7:6",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1387,
              "nodeType": "ArrayTypeName",
              "src": "406:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1398,
              "nodeType": "Block",
              "src": "479:39:6",
              "statements": [
                {
                  "expression": {
                    "id": 1396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1394,
                      "name": "feeSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1374,
                      "src": "489:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1395,
                      "name": "_feeSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1391,
                      "src": "501:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "489:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1397,
                  "nodeType": "ExpressionStatement",
                  "src": "489:22:6"
                }
              ]
            },
            "id": 1399,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1391,
                  "mutability": "mutable",
                  "name": "_feeSetter",
                  "nameLocation": "467:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1399,
                  "src": "459:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1390,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "459:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "458:20:6"
            },
            "returnParameters": {
              "id": 1393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "479:0:6"
            },
            "scope": 1568,
            "src": "447:71:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4014
            ],
            "body": {
              "id": 1408,
              "nodeType": "Block",
              "src": "588:39:6",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1405,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1389,
                      "src": "605:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 1406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "605:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1404,
                  "id": 1407,
                  "nodeType": "Return",
                  "src": "598:22:6"
                }
              ]
            },
            "functionSelector": "574f2ba3",
            "id": 1409,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nameLocation": "533:14:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1401,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "559:8:6"
            },
            "parameters": {
              "id": 1400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "547:2:6"
            },
            "returnParameters": {
              "id": 1404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1403,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1409,
                  "src": "582:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1402,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "582:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "581:6:6"
            },
            "scope": 1568,
            "src": "524:103:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4023
            ],
            "body": {
              "id": 1521,
              "nodeType": "Block",
              "src": "726:866:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1420,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1411,
                          "src": "744:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1421,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1413,
                          "src": "754:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "744:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b6574537761703a4944454e544943414c5f414444524553534553",
                        "id": 1423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "762:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_660413ff4d4274da253761c3c946d45a6921e25aff3fc06e265b7d88794ed7e7",
                          "typeString": "literal_string \"PocketSwap:IDENTICAL_ADDRESSES\""
                        },
                        "value": "PocketSwap:IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_660413ff4d4274da253761c3c946d45a6921e25aff3fc06e265b7d88794ed7e7",
                          "typeString": "literal_string \"PocketSwap:IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 1419,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "736:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "736:59:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1425,
                  "nodeType": "ExpressionStatement",
                  "src": "736:59:6"
                },
                {
                  "assignments": [
                    1427,
                    1429
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1427,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "814:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1521,
                      "src": "806:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1426,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "806:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1429,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "830:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1521,
                      "src": "822:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1428,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "822:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1440,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1430,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1411,
                        "src": "840:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 1431,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1413,
                        "src": "849:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "840:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 1436,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1413,
                          "src": "878:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1437,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1411,
                          "src": "886:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1438,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "877:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 1439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "840:53:6",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 1433,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1411,
                          "src": "859:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1434,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1413,
                          "src": "867:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1435,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "858:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "805:88:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1442,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "911:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1445,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "929:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "921:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1443,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "921:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "921:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "911:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b6574537761703a5a45524f5f41444452455353",
                        "id": 1448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "933:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4731d8511d262f833b94579fa1abe02d48270948b8b78240f3a067e4e083dc6b",
                          "typeString": "literal_string \"PocketSwap:ZERO_ADDRESS\""
                        },
                        "value": "PocketSwap:ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4731d8511d262f833b94579fa1abe02d48270948b8b78240f3a067e4e083dc6b",
                          "typeString": "literal_string \"PocketSwap:ZERO_ADDRESS\""
                        }
                      ],
                      "id": 1441,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "903:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "903:56:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1450,
                  "nodeType": "ExpressionStatement",
                  "src": "903:56:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1452,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1385,
                              "src": "977:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 1454,
                            "indexExpression": {
                              "id": 1453,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1427,
                              "src": "985:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "977:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 1456,
                          "indexExpression": {
                            "id": 1455,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1429,
                            "src": "993:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "977:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1459,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1012:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1004:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1457,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1004:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1004:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "977:37:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b6574537761703a504149525f455849535453",
                        "id": 1462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1016:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7cf2583fb36fde00e0e020c7a768850f1f7a5ecbe5a4fca10dfaa1ae01828d45",
                          "typeString": "literal_string \"PocketSwap:PAIR_EXISTS\""
                        },
                        "value": "PocketSwap:PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7cf2583fb36fde00e0e020c7a768850f1f7a5ecbe5a4fca10dfaa1ae01828d45",
                          "typeString": "literal_string \"PocketSwap:PAIR_EXISTS\""
                        }
                      ],
                      "id": 1451,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "969:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "969:72:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1464,
                  "nodeType": "ExpressionStatement",
                  "src": "969:72:6"
                },
                {
                  "assignments": [
                    1466
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1466,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "1094:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1521,
                      "src": "1081:21:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1465,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1081:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1471,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1468,
                          "name": "PocketSwapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2479,
                          "src": "1110:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PocketSwapPair_$2479_$",
                            "typeString": "type(contract PocketSwapPair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_PocketSwapPair_$2479_$",
                            "typeString": "type(contract PocketSwapPair)"
                          }
                        ],
                        "id": 1467,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "1105:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 1469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1105:20:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_PocketSwapPair_$2479",
                        "typeString": "type(contract PocketSwapPair)"
                      }
                    },
                    "id": 1470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1105:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1081:57:6"
                },
                {
                  "assignments": [
                    1473
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1473,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1156:4:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1521,
                      "src": "1148:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1472,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1148:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1481,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1477,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1427,
                            "src": "1190:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1478,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1429,
                            "src": "1198:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1475,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1173:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1173:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1173:32:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1474,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1163:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1163:43:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1148:58:6"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1225:84:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1239:60:6",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1255:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1262:8:6"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1272:2:6",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1258:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1258:17:6"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1283:8:6"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1277:5:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1277:15:6"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1294:4:6"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1247:7:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1247:52:6"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "1239:4:6"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 1466,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1262:8:6",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1466,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1283:8:6",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1417,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1239:4:6",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1473,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1294:4:6",
                      "valueSize": 1
                    }
                  ],
                  "id": 1482,
                  "nodeType": "InlineAssembly",
                  "src": "1216:93:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1487,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1427,
                        "src": "1351:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1488,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1429,
                        "src": "1359:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1484,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1417,
                            "src": "1334:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1483,
                          "name": "PocketSwapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2479,
                          "src": "1319:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PocketSwapPair_$2479_$",
                            "typeString": "type(contract PocketSwapPair)"
                          }
                        },
                        "id": 1485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1319:20:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PocketSwapPair_$2479",
                          "typeString": "contract PocketSwapPair"
                        }
                      },
                      "id": 1486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1728,
                      "src": "1319:31:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 1489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1319:47:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1490,
                  "nodeType": "ExpressionStatement",
                  "src": "1319:47:6"
                },
                {
                  "expression": {
                    "id": 1497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1491,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1385,
                          "src": "1376:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 1494,
                        "indexExpression": {
                          "id": 1492,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "1384:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1376:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1495,
                      "indexExpression": {
                        "id": 1493,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1429,
                        "src": "1392:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1376:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1496,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1417,
                      "src": "1402:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1376:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1498,
                  "nodeType": "ExpressionStatement",
                  "src": "1376:30:6"
                },
                {
                  "expression": {
                    "id": 1505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1499,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1385,
                          "src": "1416:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 1502,
                        "indexExpression": {
                          "id": 1500,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1429,
                          "src": "1424:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1416:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1503,
                      "indexExpression": {
                        "id": 1501,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1427,
                        "src": "1432:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1416:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1504,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1417,
                      "src": "1442:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1416:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1506,
                  "nodeType": "ExpressionStatement",
                  "src": "1416:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1510,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1417,
                        "src": "1515:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1507,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1389,
                        "src": "1501:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1501:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 1511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1501:19:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1512,
                  "nodeType": "ExpressionStatement",
                  "src": "1501:19:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1514,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1427,
                        "src": "1547:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1515,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1429,
                        "src": "1555:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1516,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1417,
                        "src": "1563:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1517,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1389,
                          "src": "1569:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 1518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1569:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1513,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3988,
                      "src": "1535:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 1519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1535:50:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1520,
                  "nodeType": "EmitStatement",
                  "src": "1530:55:6"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 1522,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "642:10:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1415,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "694:8:6"
            },
            "parameters": {
              "id": 1414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1411,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "661:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1522,
                  "src": "653:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1410,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "653:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1413,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "677:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1522,
                  "src": "669:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1412,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "669:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "652:32:6"
            },
            "returnParameters": {
              "id": 1418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1417,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "720:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1522,
                  "src": "712:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1416,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "712:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "711:14:6"
            },
            "scope": 1568,
            "src": "633:959:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3978
            ],
            "body": {
              "id": 1547,
              "nodeType": "Block",
              "src": "1646:145:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1529,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1664:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1664:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1531,
                          "name": "feeSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1374,
                          "src": "1678:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1664:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b6574537761703a464f5242494444454e",
                        "id": 1533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1689:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060",
                          "typeString": "literal_string \"PocketSwap:FORBIDDEN\""
                        },
                        "value": "PocketSwap:FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060",
                          "typeString": "literal_string \"PocketSwap:FORBIDDEN\""
                        }
                      ],
                      "id": 1528,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1656:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1656:56:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1535,
                  "nodeType": "ExpressionStatement",
                  "src": "1656:56:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1537,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1524,
                          "src": "1730:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 1538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1737:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "1730:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b6574537761703a4249475f464545",
                        "id": 1540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1743:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_33c061a661a44521cfee698bc43051a37c096d72760141586fd128cfff5a1b68",
                          "typeString": "literal_string \"PocketSwap:BIG_FEE\""
                        },
                        "value": "PocketSwap:BIG_FEE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_33c061a661a44521cfee698bc43051a37c096d72760141586fd128cfff5a1b68",
                          "typeString": "literal_string \"PocketSwap:BIG_FEE\""
                        }
                      ],
                      "id": 1536,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1722:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1722:42:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1542,
                  "nodeType": "ExpressionStatement",
                  "src": "1722:42:6"
                },
                {
                  "expression": {
                    "id": 1545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1543,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1378,
                      "src": "1774:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1544,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1524,
                      "src": "1780:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1774:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1546,
                  "nodeType": "ExpressionStatement",
                  "src": "1774:10:6"
                }
              ]
            },
            "functionSelector": "69fe0e2d",
            "id": 1548,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFee",
            "nameLocation": "1607:6:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1526,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1637:8:6"
            },
            "parameters": {
              "id": 1525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1524,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "1622:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1548,
                  "src": "1614:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1523,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1614:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1613:14:6"
            },
            "returnParameters": {
              "id": 1527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1646:0:6"
            },
            "scope": 1568,
            "src": "1598:193:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4028
            ],
            "body": {
              "id": 1566,
              "nodeType": "Block",
              "src": "1857:105:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1555,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1875:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1875:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1557,
                          "name": "feeSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1374,
                          "src": "1889:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1875:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b6574537761703a464f5242494444454e",
                        "id": 1559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1900:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060",
                          "typeString": "literal_string \"PocketSwap:FORBIDDEN\""
                        },
                        "value": "PocketSwap:FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060",
                          "typeString": "literal_string \"PocketSwap:FORBIDDEN\""
                        }
                      ],
                      "id": 1554,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1867:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1867:56:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1561,
                  "nodeType": "ExpressionStatement",
                  "src": "1867:56:6"
                },
                {
                  "expression": {
                    "id": 1564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1562,
                      "name": "feeSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1374,
                      "src": "1933:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1563,
                      "name": "_feeSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1550,
                      "src": "1945:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1933:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1565,
                  "nodeType": "ExpressionStatement",
                  "src": "1933:22:6"
                }
              ]
            },
            "functionSelector": "b19805af",
            "id": 1567,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeSetter",
            "nameLocation": "1806:12:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1552,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1848:8:6"
            },
            "parameters": {
              "id": 1551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1550,
                  "mutability": "mutable",
                  "name": "_feeSetter",
                  "nameLocation": "1827:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1567,
                  "src": "1819:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1549,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1819:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1818:20:6"
            },
            "returnParameters": {
              "id": 1553,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1857:0:6"
            },
            "scope": 1568,
            "src": "1797:165:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1569,
        "src": "143:1821:6",
        "usedErrors": []
      }
    ],
    "src": "39:1926:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.0",
  "updatedAt": "2021-05-07T07:22:29.987Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}