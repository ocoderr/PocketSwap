{
  "contractName": "PocketSwapFactory",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldFeeSetter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newFeeSetter",
          "type": "address"
        }
      ],
      "name": "FeeSetterUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newFee",
          "type": "uint256"
        }
      ],
      "name": "FeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pair",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "PairCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allPairs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeSetter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PAIR_INIT_CODE_HASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allPairsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "createPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "pair",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeSetter",
          "type": "address"
        }
      ],
      "name": "setFeeSetter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "holdersFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldFeeSetter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newFeeSetter\",\"type\":\"address\"}],\"name\":\"FeeSetterUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"FeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PAIR_INIT_CODE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"holdersFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeSetter\",\"type\":\"address\"}],\"name\":\"setFeeSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/pocketswap/PocketSwapFactory.sol\":\"PocketSwapFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"project:/contracts/pocketswap/PocketSwapERC20.sol\":{\"keccak256\":\"0x8b3d6bbdac817382be8ccf37e0cc269b83af9df2e184c7efeb08397cef338388\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://00583f08f1218ab4984763e7f5a06de8f93559ad391523ae39fcc09416574dfa\",\"dweb:/ipfs/QmP3paCa6mBMTr5Zdg9qYNPnMdZqioCpiRnJLwBn6Xx9FL\"]},\"project:/contracts/pocketswap/PocketSwapFactory.sol\":{\"keccak256\":\"0x030b0ea7af67e134dc5cae6972a302622c0eb1df072fa07e2594b9596b77d96e\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://223fc532ed2fab1b231a28258f30d942935834f7db1ce2cb42144e298c0d9fa9\",\"dweb:/ipfs/QmNUM2teb6G2dD1y7s1SWfwdhSNcBwEQ7KYsxMo9jy38Dr\"]},\"project:/contracts/pocketswap/PocketSwapPair.sol\":{\"keccak256\":\"0x69f4393474ca6fc96588639701e34a85b08e373d72a570e048c43a2bb937446e\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://7355687b1c4942c2c95f2f8b548b92d2caa4280544a84a10e94fe285110656cf\",\"dweb:/ipfs/QmRrpMefyywSXfbAvRVWmS8oa6Kx9EkXAXgtcJ89KaWCb1\"]},\"project:/contracts/pocketswap/interfaces/IPocketSwapERC20.sol\":{\"keccak256\":\"0x3f7a82b6d385b500289204beb7976b59b271d9f580190848611fcc75eb281578\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://0a3be64aeb7a4c0448a1c1d33d6a99db050153f68e20cb0addf35aef0a300206\",\"dweb:/ipfs/QmaXFVPmAnrNFRnBuDgGL99oVj9VZ7mcZ7hrzN24EAaFpU\"]},\"project:/contracts/pocketswap/interfaces/IPocketSwapFactory.sol\":{\"keccak256\":\"0xb1e40c6bfb4fa7050981efa98b58a8f7d6f8a4a4ef39e4e615dad794efb0cfd4\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://f6d10d91b2390646db78241caca0fa7ec3a209107f958f23e36ed68f60a7044c\",\"dweb:/ipfs/QmTkd5i2tMJS28m7LcPfYHZGQSyu6ZmRrbTcBorHcye6RG\"]},\"project:/contracts/pocketswap/interfaces/IPocketSwapPair.sol\":{\"keccak256\":\"0xbd2242a42f5c3c7651de1de624a4dbe74969d34d8d916e759622dfc39a22837d\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://77d4114d6416b157790998bfbddd88daa8446bce284d0f1c39b490a1946db186\",\"dweb:/ipfs/QmX9dbFq8MfXm5nNXFHTTBfn6NXeGFAN2HQgEnEb9dJfsK\"]},\"project:/contracts/pocketswap/interfaces/callback/IPocketSwapCallback.sol\":{\"keccak256\":\"0xffbcd8cdb9c7d99b074a3ae0910741cd15299ca3e8b839bd1fc6e603f41b7416\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ba374100d9322737f1b0d77967d2ea7efb0aca8c699977cbe288de1e81d93f15\",\"dweb:/ipfs/QmSfUvwjqGPHfdRWVazC2QgsJFc3LDrhykQ2tbccDr3Dhv\"]},\"project:/contracts/pocketswap/libraries/Math.sol\":{\"keccak256\":\"0xa64bfc3a224b8bc01276b994681e91a99b0de6885ace74cd68b27db9f9495eb6\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://fc1f1d7029bce63a1c6e04126f2a9232bf91ee5d6fd6cc3e093255d1c6fe1d89\",\"dweb:/ipfs/QmPAQbm2rXEtC1jc7tUeZ6aX5f45FrBy3rxVBat1DDnxjv\"]},\"project:/contracts/pocketswap/libraries/PairAddress.sol\":{\"keccak256\":\"0x6aac8cd8b94fada98c7ead28d70cbcaa14688abf19c4f6c581e4c7cf7f21a6d0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://62544a86c184802067b904a5783e4900a112722a0b3214fb7ae4f6c7b9713290\",\"dweb:/ipfs/QmUEtX8oVJdc9ANyXfZWr7jPfin7YtCQ17Zv1BmpFSrh2e\"]},\"project:/contracts/pocketswap/libraries/PlainMath.sol\":{\"keccak256\":\"0xff3e367ace2eb88aa9f762a0a3817dcf81306f8e5176b407093306c3502ff507\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://6df7ef0bc91525818d58560194c7af05fac49eaccf8cf7252f788bf58d8bca5f\",\"dweb:/ipfs/QmYiHJwFEguwEamcJivtCkfXUZpiZDhUjaBxgjHWY88akT\"]},\"project:/contracts/pocketswap/libraries/UQ112x112.sol\":{\"keccak256\":\"0xcb95f28dce1327158af80a3ffcfacaa608617afbffd4c7991f236117124698bf\",\"urls\":[\"bzz-raw://90fb6358954f295bc1b3dfe9cbc875c1da16e48c48f54028ad817dadbe3600d7\",\"dweb:/ipfs/QmfKtQdwxkmTBMU38NDsB2eGZeFDYhzodDH6JDN3rL4WJ1\"]},\"project:/contracts/pocketswap/pair/StorageData.sol\":{\"keccak256\":\"0x5b807e9db8d75c8c64a46f3970c4683b01694503c4826276250ce2101a763ef6\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://eed0785fe951a00871b092bf86e26a8895ce8b936386a44e548932aa37e79e7c\",\"dweb:/ipfs/QmeDbGTF1zHD9sg3hwa2LaUdgWBi6CVUVewZuXP3AbKwQ4\"]}},\"version\":1}",
  "bytecode": "0x6080604052622dc6c060015534801561001757600080fd5b50600080546001600160a01b03191633179055613f4e806100396000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c806387cf3ef411610076578063c9c653961161005b578063c9c653961461016e578063ddca3f4314610181578063e6a439051461018a57600080fd5b806387cf3ef41461013b578063b19805af1461015b57600080fd5b8063574f2ba3116100a7578063574f2ba31461011657806357b84f8c1461011e57806369fe0e2d1461012657600080fd5b80631e3dd18b146100c357806346870d2b14610100575b600080fd5b6100d66100d1366004610cbf565b6101cb565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b610108610202565b6040519081526020016100f7565b600354610108565b610108610224565b610139610134366004610cbf565b610291565b005b6000546100d69073ffffffffffffffffffffffffffffffffffffffff1681565b610139610169366004610c54565b6103c9565b6100d661017c366004610c75565b6104e5565b61010860015481565b6100d6610198366004610c75565b600260209081526000928352604080842090915290825290205473ffffffffffffffffffffffffffffffffffffffff1681565b600381815481106101db57600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b6000601e60015460056102159190610d49565b61021f9190610d10565b905090565b60006040518060200161023690610c1e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f9091011660408190526102769190602001610cd7565b60405160208183030381529060405280519060200120905090565b60005473ffffffffffffffffffffffffffffffffffffffff163314610317576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f506f636b6574537761703a464f5242494444454e00000000000000000000000060448201526064015b60405180910390fd5b670de0b6b3a76400008110610388576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f506f636b6574537761703a4249475f4645450000000000000000000000000000604482015260640161030e565b60015460408051918252602082018390527f528d9479e9f9889a87a3c30c7f7ba537e5e59c4c85a37733b16e57c62df61302910160405180910390a1600155565b60005473ffffffffffffffffffffffffffffffffffffffff16331461044a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f506f636b6574537761703a464f5242494444454e000000000000000000000000604482015260640161030e565b6000546040805173ffffffffffffffffffffffffffffffffffffffff928316815291831660208301527f83b887657b0e2cbbed6d7b9468d78fe27ce257d950e1c7e36572b3a24f82e41c910160405180910390a1600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561057d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f506f636b6574537761703a4944454e544943414c5f4144445245535345530000604482015260640161030e565b6000808373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16106105ba5783856105bd565b84845b909250905073ffffffffffffffffffffffffffffffffffffffff821661063f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f506f636b6574537761703a5a45524f5f41444452455353000000000000000000604482015260640161030e565b73ffffffffffffffffffffffffffffffffffffffff8281166000908152600260209081526040808320858516845290915290205416156106db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f506f636b6574537761703a504149525f45584953545300000000000000000000604482015260640161030e565b6000604051806020016106ed90610c1e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f9091011660408190527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606086811b8216602084015285901b166034820152909150600090604801604051602081830303815290604052805190602001209050808251602084016000f56040517f485cc95500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015285811660248301529196509086169063485cc95590604401600060405180830381600087803b1580156107f657600080fd5b505af115801561080a573d6000803e3d6000fd5b50505073ffffffffffffffffffffffffffffffffffffffff80861660008181526002602081815260408084208a8716855282528084208054968d167fffffffffffffffffffffffff0000000000000000000000000000000000000000978816811790915592825280842094845293905291812080548416831790556003805460018101825591527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b018054909216179055506108c7308585610a5f565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461095b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f57575a0000000000000000000000000000000000000000000000000000000000604482015260640161030e565b610966308486610a5f565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146109fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f57575a0000000000000000000000000000000000000000000000000000000000604482015260640161030e565b6003546040805173ffffffffffffffffffffffffffffffffffffffff88811682526020820193909352828616928716917f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9910160405180910390a35050505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1610610a9e578385610aa1565b84845b6040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606084811b8216602084015283901b16603482015291935091508690604801604051602081830303815290604052805190602001208773ffffffffffffffffffffffffffffffffffffffff166357b84f8c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b4057600080fd5b505afa158015610b54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b789190610ca7565b6040517fff00000000000000000000000000000000000000000000000000000000000000602082015260609390931b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602184015260358301919091526055820152607501604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101209695505050505050565b61316d80610dac83390190565b803573ffffffffffffffffffffffffffffffffffffffff81168114610c4f57600080fd5b919050565b600060208284031215610c65578081fd5b610c6e82610c2b565b9392505050565b60008060408385031215610c87578081fd5b610c9083610c2b565b9150610c9e60208401610c2b565b90509250929050565b600060208284031215610cb8578081fd5b5051919050565b600060208284031215610cd0578081fd5b5035919050565b60008251815b81811015610cf75760208186018101518583015201610cdd565b81811115610d055782828501525b509190910192915050565b600082610d44577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610da6577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b50029056fe60806040526001600b5534801561001557600080fd5b50604080518082018252600a8152690506f636b6574537761760b41b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527f139f1c71b7c3168b7aeac519a0d6ee819b7e7428c66952642d99299cb2a31352818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c09091019092528151910120600355600580546001600160a01b03191633179055613065806101086000396000f3fe608060405234801561001057600080fd5b50600436106101ae5760003560e01c80636a627842116100ee578063ba9a7a5611610097578063d21220a711610071578063d21220a714610487578063d505accf146104a7578063dd62ed3e146104ba578063fff6cae9146104e557600080fd5b8063ba9a7a561461044b578063bc25cf7714610454578063c45a01551461046757600080fd5b806389afcb44116100c857806389afcb44146103d457806395d89b41146103fc578063a9059cbb1461043857600080fd5b80636a6278421461038157806370a08231146103945780637ecebe00146103b457600080fd5b806323b872dd1161015b5780633644e515116101355780633644e51514610353578063485cc9551461035c5780635909c0d51461036f5780635a3d54931461037857600080fd5b806323b872dd146102ff57806330adf81f14610312578063313ce5671461033957600080fd5b8063095ea7b31161018c578063095ea7b3146102805780630dfe1681146102a357806318160ddd146102e857600080fd5b8063022c0d9f146101b357806306fdde03146101c85780630902f1ac1461021a575b600080fd5b6101c66101c1366004612b1d565b6104ed565b005b6102046040518060400160405280600a81526020017f506f636b6574537761700000000000000000000000000000000000000000000081525081565b6040516102119190612c52565b60405180910390f35b600a54604080516dffffffffffffffffffffffffffff80841682526e01000000000000000000000000000084041660208201527c010000000000000000000000000000000000000000000000000000000090920463ffffffff1690820152606001610211565b61029361028e366004612abc565b610f2d565b6040519015158152602001610211565b6006546102c39073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610211565b6102f160005481565b604051908152602001610211565b61029361030d366004612a10565b610f43565b6102f17f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b610341601281565b60405160ff9091168152602001610211565b6102f160035481565b6101c661036a3660046129de565b61101c565b6102f160085481565b6102f160095481565b6102f161038f3660046129c4565b6110f0565b6102f16103a23660046129c4565b60016020526000908152604090205481565b6102f16103c23660046129c4565b60046020526000908152604090205481565b6103e76103e23660046129c4565b611499565b60408051928352602083019190915201610211565b6102046040518060400160405280600781526020017f50532d504149520000000000000000000000000000000000000000000000000081525081565b610293610446366004612abc565b611943565b6102f16103e881565b6101c66104623660046129c4565b611950565b6005546102c39073ffffffffffffffffffffffffffffffffffffffff1681565b6007546102c39073ffffffffffffffffffffffffffffffffffffffff1681565b6101c66104b5366004612a4b565b611b22565b6102f16104c83660046129de565b600260209081526000928352604080842090915290825290205481565b6101c6611e0d565b600b5460011461055e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f506f636b6574537761703a204c4f434b4544000000000000000000000000000060448201526064015b60405180910390fd5b6000600b55841515806105715750600084115b6105fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f506f636b6574537761703a20494e53554646494349454e545f4f55545055545f60448201527f414d4f554e5400000000000000000000000000000000000000000000000000006064820152608401610555565b600080610659600a546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b5091509150816dffffffffffffffffffffffffffff168710801561068c5750806dffffffffffffffffffffffffffff1686105b610718576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f506f636b6574537761703a20494e53554646494349454e545f4c49515549444960448201527f54590000000000000000000000000000000000000000000000000000000000006064820152608401610555565b600654600754600091829173ffffffffffffffffffffffffffffffffffffffff91821691908116908916821480159061077d57508073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614155b6107e3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f506f636b6574537761703a20494e56414c49445f544f000000000000000000006044820152606401610555565b8a156107f4576107f4828a8d611ff7565b891561080557610805818a8c611ff7565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a082319060240160206040518083038186803b15801561086a57600080fd5b505afa15801561087e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a29190612b05565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290945073ffffffffffffffffffffffffffffffffffffffff8216906370a082319060240160206040518083038186803b15801561090a57600080fd5b505afa15801561091e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109429190612b05565b92505050600089856dffffffffffffffffffffffffffff166109649190612de6565b8311610971576000610995565b61098b8a6dffffffffffffffffffffffffffff8716612de6565b6109959084612de6565b905060006109b38a6dffffffffffffffffffffffffffff8716612de6565b83116109c05760006109e4565b6109da8a6dffffffffffffffffffffffffffff8716612de6565b6109e49084612de6565b905060008211806109f55750600081115b610a81576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f506f636b6574537761703a20494e53554646494349454e545f494e5055545f4160448201527f4d4f554e540000000000000000000000000000000000000000000000000000006064820152608401610555565b600554604080517fddca3f43000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163ddca3f43916004808301926020929190829003018186803b158015610aec57600080fd5b505afa158015610b00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b249190612b05565b90506000610b49610b358584612197565b610b4388633b9aca00612197565b906121aa565b90506000610b5a610b358585612197565b9050610b8b670de0b6b3a7640000610b856dffffffffffffffffffffffffffff8c8116908c16612197565b90612197565b610b958383612197565b1015610bfd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f506f636b6574537761703a204b000000000000000000000000000000000000006044820152606401610555565b505087159050610ead57600554604080517f46870d2b000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff16916346870d2b916004808301926020929190829003018186803b158015610c7257600080fd5b505afa158015610c86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610caa9190612b05565b600654909150610ce99073ffffffffffffffffffffffffffffffffffffffff1633633b9aca00610cda858a612da9565b610ce49190612d51565b6121b6565b600754610d169073ffffffffffffffffffffffffffffffffffffffff1633633b9aca00610cda8589612da9565b6040517f7936cd900000000000000000000000000000000000000000000000000000000081523390637936cd9090610d58908f908f908e908e90600401612ca3565b600060405180830381600087803b158015610d7257600080fd5b505af1925050508015610d83575060015b610e6157610d8f612f6f565b806308c379a01415610e1e5750610da4612f87565b80610daf5750610e20565b80604051602001610dc09190612c0d565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a000000000000000000000000000000000000000000000000000000000825261055591600401612c52565b505b3d808015610e4a576040519150601f19603f3d011682016040523d82523d6000602084013e610e4f565b606091505b5080604051602001610dc09190612bc8565b600654610e869073ffffffffffffffffffffffffffffffffffffffff163360006121b6565b600754610eab9073ffffffffffffffffffffffffffffffffffffffff163360006121b6565b505b610eb98484888861234f565b60408051838152602081018390529081018c9052606081018b905273ffffffffffffffffffffffffffffffffffffffff8a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600b55505050505050505050565b6000610f3a33848461262b565b50600192915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526002602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff146110075773ffffffffffffffffffffffffffffffffffffffff84166000908152600260209081526040808320338452909152902054610fd590836121aa565b73ffffffffffffffffffffffffffffffffffffffff851660009081526002602090815260408083203384529091529020555b61101284848461269a565b5060019392505050565b60055473ffffffffffffffffffffffffffffffffffffffff16331461109d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f506f636b6574537761703a20464f5242494444454e00000000000000000000006044820152606401610555565b6006805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161790915560078054929093169116179055565b6000600b5460011461115e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f506f636b6574537761703a204c4f434b454400000000000000000000000000006044820152606401610555565b6000600b819055600a54600654604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290516dffffffffffffffffffffffffffff808516956e01000000000000000000000000000090950416939273ffffffffffffffffffffffffffffffffffffffff16916370a08231916024808301926020929190829003018186803b1580156111ff57600080fd5b505afa158015611213573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112379190612b05565b6007546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015291925060009173ffffffffffffffffffffffffffffffffffffffff909116906370a082319060240160206040518083038186803b1580156112a657600080fd5b505afa1580156112ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112de9190612b05565b905060006112fc836dffffffffffffffffffffffffffff87166121aa565b9050600061131a836dffffffffffffffffffffffffffff87166121aa565b600054909150806113515761133d6103e8610b436113388686612197565b612767565b975061134c60006103e86127d7565b6113a6565b6113a36dffffffffffffffffffffffffffff881661136f8584612197565b6113799190612d51565b6dffffffffffffffffffffffffffff88166113948585612197565b61139e9190612d51565b612880565b97505b60008811611436576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f506f636b6574537761703a20494e53554646494349454e545f4c49515549444960448201527f54595f4d494e54454400000000000000000000000000000000000000000000006064820152608401610555565b61144089896127d7565b61144c8585898961234f565b604080518481526020810184905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001600b55509395945050505050565b600080600b54600114611508576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f506f636b6574537761703a204c4f434b454400000000000000000000000000006044820152606401610555565b6000600b819055600a54600654600754604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290516dffffffffffffffffffffffffffff808616966e010000000000000000000000000000909604169473ffffffffffffffffffffffffffffffffffffffff94851694909316929184916370a0823191602480820192602092909190829003018186803b1580156115b557600080fd5b505afa1580156115c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ed9190612b05565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915060009073ffffffffffffffffffffffffffffffffffffffff8416906370a082319060240160206040518083038186803b15801561165857600080fd5b505afa15801561166c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116909190612b05565b30600090815260016020526040812054905491925090806116b18386612197565b6116bb9190612d51565b9950806116c88385612197565b6116d29190612d51565b985060008a1180156116e45750600089115b611770576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f506f636b6574537761703a20494e53554646494349454e545f4c49515549444960448201527f54595f4255524e454400000000000000000000000000000000000000000000006064820152608401610555565b61177a3083612896565b611785868c8c611ff7565b611790858c8b611ff7565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8716906370a082319060240160206040518083038186803b1580156117f557600080fd5b505afa158015611809573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061182d9190612b05565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290945073ffffffffffffffffffffffffffffffffffffffff8616906370a082319060240160206040518083038186803b15801561189557600080fd5b505afa1580156118a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118cd9190612b05565b92506118db84848a8a61234f565b604080518b8152602081018b905273ffffffffffffffffffffffffffffffffffffffff8d169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a350505050505050506001600b81905550915091565b6000610f3a33848461269a565b600b546001146119bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f506f636b6574537761703a204c4f434b454400000000000000000000000000006044820152606401610555565b6000600b55600654600754600a546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff9384169390921691611a939184918691611a8e916dffffffffffffffffffffffffffff9091169084906370a08231906024015b60206040518083038186803b158015611a5657600080fd5b505afa158015611a6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b439190612b05565b611ff7565b600a546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152611b189183918691611a8e916e0100000000000000000000000000009091046dffffffffffffffffffffffffffff169073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401611a3e565b50506001600b5550565b42841015611b8c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f506f636b6574537761703a2045585049524544000000000000000000000000006044820152606401610555565b60035473ffffffffffffffffffffffffffffffffffffffff8816600090815260046020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b919087611bec83612ec4565b9091555060408051602081019690965273ffffffffffffffffffffffffffffffffffffffff94851690860152929091166060840152608083015260a082015260c0810187905260e00160405160208183030381529060405280519060200120604051602001611c8d9291907f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015611d16573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811615801590611d9157508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611df7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f506f636b6574537761703a20494e56414c49445f5349474e41545552450000006044820152606401610555565b611e0289898961262b565b505050505050505050565b600b54600114611e79576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f506f636b6574537761703a204c4f434b454400000000000000000000000000006044820152606401610555565b6000600b556006546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152611ff09173ffffffffffffffffffffffffffffffffffffffff16906370a082319060240160206040518083038186803b158015611ee957600080fd5b505afa158015611efd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f219190612b05565b6007546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a082319060240160206040518083038186803b158015611f8a57600080fd5b505afa158015611f9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fc29190612b05565b600a546dffffffffffffffffffffffffffff808216916e01000000000000000000000000000090041661234f565b6001600b55565b604080518082018252601981527f7472616e7366657228616464726573732c75696e743235362900000000000000602091820152815173ffffffffffffffffffffffffffffffffffffffff85811660248301526044808301869052845180840390910181526064909201845291810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052915160009283928716916120be9190612bac565b6000604051808303816000865af19150503d80600081146120fb576040519150601f19603f3d011682016040523d82523d6000602084013e612100565b606091505b509150915081801561212a57508051158061212a57508080602001905181019061212a9190612ae5565b612190576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f506f636b6574537761703a205452414e534645525f4641494c454400000000006044820152606401610555565b5050505050565b60006121a38284612da9565b9392505050565b60006121a38284612de6565b604080518082018252601881527f617070726f766528616464726573732c75696e74323536290000000000000000602091820152815173ffffffffffffffffffffffffffffffffffffffff85811660248301526044808301869052845180840390910181526064909201845291810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b3000000000000000000000000000000000000000000000000000000001790529151600092839287169161227d9190612bac565b6000604051808303816000865af19150503d80600081146122ba576040519150601f19603f3d011682016040523d82523d6000602084013e6122bf565b606091505b50915091508180156122e95750805115806122e95750808060200190518101906122e99190612ae5565b612190576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f506f636b6574537761703a20415050524f56455f4641494c45440000000000006044820152606401610555565b6dffffffffffffffffffffffffffff841180159061237b57506dffffffffffffffffffffffffffff8311155b6123e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f506f636b6574537761703a204f564552464c4f570000000000000000000000006044820152606401610555565b60006123f264010000000042612efd565b600a5490915060009061242b907c0100000000000000000000000000000000000000000000000000000000900463ffffffff1683612dfd565b905060008163ffffffff1611801561245257506dffffffffffffffffffffffffffff841615155b801561246d57506dffffffffffffffffffffffffffff831615155b1561253b578063ffffffff166124aa8561248686612947565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1690612978565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166124d29190612da9565b600860008282546124e39190612cfe565b909155505063ffffffff81166124fc8461248687612947565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166125249190612da9565b600960008282546125359190612cfe565b90915550505b600a805463ffffffff84167c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff6dffffffffffffffffffffffffffff8981166e0100000000000000000000000000009081027fffffffff000000000000000000000000000000000000000000000000000000009095168c83161794909417918216831794859055604080519382169282169290921783529290930490911660208201527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a1505050505050565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600160205260409020546126ca90826121aa565b73ffffffffffffffffffffffffffffffffffffffff80851660009081526001602052604080822093909355908416815220546127069082612994565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061268d9085815260200190565b600060038211156127c85750806000612781600283612d51565b61278c906001612cfe565b90505b818110156127c2579050806002816127a78186612d51565b6127b19190612cfe565b6127bb9190612d51565b905061278f565b50919050565b81156127d2575060015b919050565b6000546127e49082612994565b600090815573ffffffffffffffffffffffffffffffffffffffff83168152600160205260409020546128169082612994565b73ffffffffffffffffffffffffffffffffffffffff83166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906128749085815260200190565b60405180910390a35050565b600081831061288f57816121a3565b5090919050565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600160205260409020546128c690826121aa565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260016020526040812091909155546128fa90826121aa565b600090815560405182815273ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001612874565b60006129726e0100000000000000000000000000006dffffffffffffffffffffffffffff8416612d65565b92915050565b60006121a36dffffffffffffffffffffffffffff831684612d16565b60006121a38284612cfe565b803573ffffffffffffffffffffffffffffffffffffffff811681146127d257600080fd5b6000602082840312156129d5578081fd5b6121a3826129a0565b600080604083850312156129f0578081fd5b6129f9836129a0565b9150612a07602084016129a0565b90509250929050565b600080600060608486031215612a24578081fd5b612a2d846129a0565b9250612a3b602085016129a0565b9150604084013590509250925092565b600080600080600080600060e0888a031215612a65578283fd5b612a6e886129a0565b9650612a7c602089016129a0565b95506040880135945060608801359350608088013560ff81168114612a9f578384fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215612ace578182fd5b612ad7836129a0565b946020939093013593505050565b600060208284031215612af6578081fd5b815180151581146121a3578182fd5b600060208284031215612b16578081fd5b5051919050565b600080600080600060808688031215612b34578081fd5b8535945060208601359350612b4b604087016129a0565b9250606086013567ffffffffffffffff80821115612b67578283fd5b818801915088601f830112612b7a578283fd5b813581811115612b88578384fd5b896020828501011115612b99578384fd5b9699959850939650602001949392505050565b60008251612bbe818460208701612e22565b9190910192915050565b7f4e4f4b2062213a20000000000000000000000000000000000000000000000000815260008251612c00816008850160208701612e22565b9190910160080192915050565b7f4e4f4b3a20000000000000000000000000000000000000000000000000000000815260008251612c45816005850160208701612e22565b9190910160050192915050565b6020815260008251806020840152612c71816040850160208701612e22565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b84815283602082015260606040820152816060820152818360808301376000818301608090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01601019392505050565b60008219821115612d1157612d11612f11565b500190565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff80841680612d4557612d45612f40565b92169190910492915050565b600082612d6057612d60612f40565b500490565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff80831681851681830481118215151615612da057612da0612f11565b02949350505050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612de157612de1612f11565b500290565b600082821015612df857612df8612f11565b500390565b600063ffffffff83811690831681811015612e1a57612e1a612f11565b039392505050565b60005b83811015612e3d578181015183820152602001612e25565b83811115612e4c576000848401525b50505050565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff82111715612ebd577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040525050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612ef657612ef6612f11565b5060010190565b600082612f0c57612f0c612f40565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600060033d1115612f8457600481823e5160e01c5b90565b600060443d1015612f955790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc803d016004833e81513d67ffffffffffffffff8160248401118184111715612fe357505050505090565b8285019150815181811115612ffb5750505050505090565b843d87010160208285010111156130155750505050505090565b61302460208286010187612e52565b50909594505050505056fea264697066735822122070afae3ff20ed06b5b3324ebeaa459f28c1b15b869af6c56075fca6a585afd2d64736f6c63430008040033a264697066735822122089e7ada9a7dae30152da9b8b7c4dafc17f1ea2285e5bb0be8da2addb688ae8f964736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100be5760003560e01c806387cf3ef411610076578063c9c653961161005b578063c9c653961461016e578063ddca3f4314610181578063e6a439051461018a57600080fd5b806387cf3ef41461013b578063b19805af1461015b57600080fd5b8063574f2ba3116100a7578063574f2ba31461011657806357b84f8c1461011e57806369fe0e2d1461012657600080fd5b80631e3dd18b146100c357806346870d2b14610100575b600080fd5b6100d66100d1366004610cbf565b6101cb565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b610108610202565b6040519081526020016100f7565b600354610108565b610108610224565b610139610134366004610cbf565b610291565b005b6000546100d69073ffffffffffffffffffffffffffffffffffffffff1681565b610139610169366004610c54565b6103c9565b6100d661017c366004610c75565b6104e5565b61010860015481565b6100d6610198366004610c75565b600260209081526000928352604080842090915290825290205473ffffffffffffffffffffffffffffffffffffffff1681565b600381815481106101db57600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b6000601e60015460056102159190610d49565b61021f9190610d10565b905090565b60006040518060200161023690610c1e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f9091011660408190526102769190602001610cd7565b60405160208183030381529060405280519060200120905090565b60005473ffffffffffffffffffffffffffffffffffffffff163314610317576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f506f636b6574537761703a464f5242494444454e00000000000000000000000060448201526064015b60405180910390fd5b670de0b6b3a76400008110610388576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f506f636b6574537761703a4249475f4645450000000000000000000000000000604482015260640161030e565b60015460408051918252602082018390527f528d9479e9f9889a87a3c30c7f7ba537e5e59c4c85a37733b16e57c62df61302910160405180910390a1600155565b60005473ffffffffffffffffffffffffffffffffffffffff16331461044a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f506f636b6574537761703a464f5242494444454e000000000000000000000000604482015260640161030e565b6000546040805173ffffffffffffffffffffffffffffffffffffffff928316815291831660208301527f83b887657b0e2cbbed6d7b9468d78fe27ce257d950e1c7e36572b3a24f82e41c910160405180910390a1600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561057d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f506f636b6574537761703a4944454e544943414c5f4144445245535345530000604482015260640161030e565b6000808373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16106105ba5783856105bd565b84845b909250905073ffffffffffffffffffffffffffffffffffffffff821661063f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f506f636b6574537761703a5a45524f5f41444452455353000000000000000000604482015260640161030e565b73ffffffffffffffffffffffffffffffffffffffff8281166000908152600260209081526040808320858516845290915290205416156106db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f506f636b6574537761703a504149525f45584953545300000000000000000000604482015260640161030e565b6000604051806020016106ed90610c1e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f9091011660408190527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606086811b8216602084015285901b166034820152909150600090604801604051602081830303815290604052805190602001209050808251602084016000f56040517f485cc95500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015285811660248301529196509086169063485cc95590604401600060405180830381600087803b1580156107f657600080fd5b505af115801561080a573d6000803e3d6000fd5b50505073ffffffffffffffffffffffffffffffffffffffff80861660008181526002602081815260408084208a8716855282528084208054968d167fffffffffffffffffffffffff0000000000000000000000000000000000000000978816811790915592825280842094845293905291812080548416831790556003805460018101825591527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b018054909216179055506108c7308585610a5f565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461095b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f57575a0000000000000000000000000000000000000000000000000000000000604482015260640161030e565b610966308486610a5f565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146109fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f57575a0000000000000000000000000000000000000000000000000000000000604482015260640161030e565b6003546040805173ffffffffffffffffffffffffffffffffffffffff88811682526020820193909352828616928716917f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9910160405180910390a35050505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1610610a9e578385610aa1565b84845b6040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606084811b8216602084015283901b16603482015291935091508690604801604051602081830303815290604052805190602001208773ffffffffffffffffffffffffffffffffffffffff166357b84f8c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b4057600080fd5b505afa158015610b54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b789190610ca7565b6040517fff00000000000000000000000000000000000000000000000000000000000000602082015260609390931b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602184015260358301919091526055820152607501604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101209695505050505050565b61316d80610dac83390190565b803573ffffffffffffffffffffffffffffffffffffffff81168114610c4f57600080fd5b919050565b600060208284031215610c65578081fd5b610c6e82610c2b565b9392505050565b60008060408385031215610c87578081fd5b610c9083610c2b565b9150610c9e60208401610c2b565b90509250929050565b600060208284031215610cb8578081fd5b5051919050565b600060208284031215610cd0578081fd5b5035919050565b60008251815b81811015610cf75760208186018101518583015201610cdd565b81811115610d055782828501525b509190910192915050565b600082610d44577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610da6577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b50029056fe60806040526001600b5534801561001557600080fd5b50604080518082018252600a8152690506f636b6574537761760b41b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527f139f1c71b7c3168b7aeac519a0d6ee819b7e7428c66952642d99299cb2a31352818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c09091019092528151910120600355600580546001600160a01b03191633179055613065806101086000396000f3fe608060405234801561001057600080fd5b50600436106101ae5760003560e01c80636a627842116100ee578063ba9a7a5611610097578063d21220a711610071578063d21220a714610487578063d505accf146104a7578063dd62ed3e146104ba578063fff6cae9146104e557600080fd5b8063ba9a7a561461044b578063bc25cf7714610454578063c45a01551461046757600080fd5b806389afcb44116100c857806389afcb44146103d457806395d89b41146103fc578063a9059cbb1461043857600080fd5b80636a6278421461038157806370a08231146103945780637ecebe00146103b457600080fd5b806323b872dd1161015b5780633644e515116101355780633644e51514610353578063485cc9551461035c5780635909c0d51461036f5780635a3d54931461037857600080fd5b806323b872dd146102ff57806330adf81f14610312578063313ce5671461033957600080fd5b8063095ea7b31161018c578063095ea7b3146102805780630dfe1681146102a357806318160ddd146102e857600080fd5b8063022c0d9f146101b357806306fdde03146101c85780630902f1ac1461021a575b600080fd5b6101c66101c1366004612b1d565b6104ed565b005b6102046040518060400160405280600a81526020017f506f636b6574537761700000000000000000000000000000000000000000000081525081565b6040516102119190612c52565b60405180910390f35b600a54604080516dffffffffffffffffffffffffffff80841682526e01000000000000000000000000000084041660208201527c010000000000000000000000000000000000000000000000000000000090920463ffffffff1690820152606001610211565b61029361028e366004612abc565b610f2d565b6040519015158152602001610211565b6006546102c39073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610211565b6102f160005481565b604051908152602001610211565b61029361030d366004612a10565b610f43565b6102f17f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b610341601281565b60405160ff9091168152602001610211565b6102f160035481565b6101c661036a3660046129de565b61101c565b6102f160085481565b6102f160095481565b6102f161038f3660046129c4565b6110f0565b6102f16103a23660046129c4565b60016020526000908152604090205481565b6102f16103c23660046129c4565b60046020526000908152604090205481565b6103e76103e23660046129c4565b611499565b60408051928352602083019190915201610211565b6102046040518060400160405280600781526020017f50532d504149520000000000000000000000000000000000000000000000000081525081565b610293610446366004612abc565b611943565b6102f16103e881565b6101c66104623660046129c4565b611950565b6005546102c39073ffffffffffffffffffffffffffffffffffffffff1681565b6007546102c39073ffffffffffffffffffffffffffffffffffffffff1681565b6101c66104b5366004612a4b565b611b22565b6102f16104c83660046129de565b600260209081526000928352604080842090915290825290205481565b6101c6611e0d565b600b5460011461055e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f506f636b6574537761703a204c4f434b4544000000000000000000000000000060448201526064015b60405180910390fd5b6000600b55841515806105715750600084115b6105fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f506f636b6574537761703a20494e53554646494349454e545f4f55545055545f60448201527f414d4f554e5400000000000000000000000000000000000000000000000000006064820152608401610555565b600080610659600a546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b5091509150816dffffffffffffffffffffffffffff168710801561068c5750806dffffffffffffffffffffffffffff1686105b610718576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f506f636b6574537761703a20494e53554646494349454e545f4c49515549444960448201527f54590000000000000000000000000000000000000000000000000000000000006064820152608401610555565b600654600754600091829173ffffffffffffffffffffffffffffffffffffffff91821691908116908916821480159061077d57508073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614155b6107e3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f506f636b6574537761703a20494e56414c49445f544f000000000000000000006044820152606401610555565b8a156107f4576107f4828a8d611ff7565b891561080557610805818a8c611ff7565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a082319060240160206040518083038186803b15801561086a57600080fd5b505afa15801561087e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a29190612b05565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290945073ffffffffffffffffffffffffffffffffffffffff8216906370a082319060240160206040518083038186803b15801561090a57600080fd5b505afa15801561091e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109429190612b05565b92505050600089856dffffffffffffffffffffffffffff166109649190612de6565b8311610971576000610995565b61098b8a6dffffffffffffffffffffffffffff8716612de6565b6109959084612de6565b905060006109b38a6dffffffffffffffffffffffffffff8716612de6565b83116109c05760006109e4565b6109da8a6dffffffffffffffffffffffffffff8716612de6565b6109e49084612de6565b905060008211806109f55750600081115b610a81576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f506f636b6574537761703a20494e53554646494349454e545f494e5055545f4160448201527f4d4f554e540000000000000000000000000000000000000000000000000000006064820152608401610555565b600554604080517fddca3f43000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163ddca3f43916004808301926020929190829003018186803b158015610aec57600080fd5b505afa158015610b00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b249190612b05565b90506000610b49610b358584612197565b610b4388633b9aca00612197565b906121aa565b90506000610b5a610b358585612197565b9050610b8b670de0b6b3a7640000610b856dffffffffffffffffffffffffffff8c8116908c16612197565b90612197565b610b958383612197565b1015610bfd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f506f636b6574537761703a204b000000000000000000000000000000000000006044820152606401610555565b505087159050610ead57600554604080517f46870d2b000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff16916346870d2b916004808301926020929190829003018186803b158015610c7257600080fd5b505afa158015610c86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610caa9190612b05565b600654909150610ce99073ffffffffffffffffffffffffffffffffffffffff1633633b9aca00610cda858a612da9565b610ce49190612d51565b6121b6565b600754610d169073ffffffffffffffffffffffffffffffffffffffff1633633b9aca00610cda8589612da9565b6040517f7936cd900000000000000000000000000000000000000000000000000000000081523390637936cd9090610d58908f908f908e908e90600401612ca3565b600060405180830381600087803b158015610d7257600080fd5b505af1925050508015610d83575060015b610e6157610d8f612f6f565b806308c379a01415610e1e5750610da4612f87565b80610daf5750610e20565b80604051602001610dc09190612c0d565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a000000000000000000000000000000000000000000000000000000000825261055591600401612c52565b505b3d808015610e4a576040519150601f19603f3d011682016040523d82523d6000602084013e610e4f565b606091505b5080604051602001610dc09190612bc8565b600654610e869073ffffffffffffffffffffffffffffffffffffffff163360006121b6565b600754610eab9073ffffffffffffffffffffffffffffffffffffffff163360006121b6565b505b610eb98484888861234f565b60408051838152602081018390529081018c9052606081018b905273ffffffffffffffffffffffffffffffffffffffff8a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600b55505050505050505050565b6000610f3a33848461262b565b50600192915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526002602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff146110075773ffffffffffffffffffffffffffffffffffffffff84166000908152600260209081526040808320338452909152902054610fd590836121aa565b73ffffffffffffffffffffffffffffffffffffffff851660009081526002602090815260408083203384529091529020555b61101284848461269a565b5060019392505050565b60055473ffffffffffffffffffffffffffffffffffffffff16331461109d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f506f636b6574537761703a20464f5242494444454e00000000000000000000006044820152606401610555565b6006805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161790915560078054929093169116179055565b6000600b5460011461115e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f506f636b6574537761703a204c4f434b454400000000000000000000000000006044820152606401610555565b6000600b819055600a54600654604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290516dffffffffffffffffffffffffffff808516956e01000000000000000000000000000090950416939273ffffffffffffffffffffffffffffffffffffffff16916370a08231916024808301926020929190829003018186803b1580156111ff57600080fd5b505afa158015611213573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112379190612b05565b6007546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015291925060009173ffffffffffffffffffffffffffffffffffffffff909116906370a082319060240160206040518083038186803b1580156112a657600080fd5b505afa1580156112ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112de9190612b05565b905060006112fc836dffffffffffffffffffffffffffff87166121aa565b9050600061131a836dffffffffffffffffffffffffffff87166121aa565b600054909150806113515761133d6103e8610b436113388686612197565b612767565b975061134c60006103e86127d7565b6113a6565b6113a36dffffffffffffffffffffffffffff881661136f8584612197565b6113799190612d51565b6dffffffffffffffffffffffffffff88166113948585612197565b61139e9190612d51565b612880565b97505b60008811611436576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f506f636b6574537761703a20494e53554646494349454e545f4c49515549444960448201527f54595f4d494e54454400000000000000000000000000000000000000000000006064820152608401610555565b61144089896127d7565b61144c8585898961234f565b604080518481526020810184905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001600b55509395945050505050565b600080600b54600114611508576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f506f636b6574537761703a204c4f434b454400000000000000000000000000006044820152606401610555565b6000600b819055600a54600654600754604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290516dffffffffffffffffffffffffffff808616966e010000000000000000000000000000909604169473ffffffffffffffffffffffffffffffffffffffff94851694909316929184916370a0823191602480820192602092909190829003018186803b1580156115b557600080fd5b505afa1580156115c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ed9190612b05565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915060009073ffffffffffffffffffffffffffffffffffffffff8416906370a082319060240160206040518083038186803b15801561165857600080fd5b505afa15801561166c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116909190612b05565b30600090815260016020526040812054905491925090806116b18386612197565b6116bb9190612d51565b9950806116c88385612197565b6116d29190612d51565b985060008a1180156116e45750600089115b611770576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f506f636b6574537761703a20494e53554646494349454e545f4c49515549444960448201527f54595f4255524e454400000000000000000000000000000000000000000000006064820152608401610555565b61177a3083612896565b611785868c8c611ff7565b611790858c8b611ff7565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8716906370a082319060240160206040518083038186803b1580156117f557600080fd5b505afa158015611809573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061182d9190612b05565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290945073ffffffffffffffffffffffffffffffffffffffff8616906370a082319060240160206040518083038186803b15801561189557600080fd5b505afa1580156118a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118cd9190612b05565b92506118db84848a8a61234f565b604080518b8152602081018b905273ffffffffffffffffffffffffffffffffffffffff8d169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a350505050505050506001600b81905550915091565b6000610f3a33848461269a565b600b546001146119bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f506f636b6574537761703a204c4f434b454400000000000000000000000000006044820152606401610555565b6000600b55600654600754600a546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff9384169390921691611a939184918691611a8e916dffffffffffffffffffffffffffff9091169084906370a08231906024015b60206040518083038186803b158015611a5657600080fd5b505afa158015611a6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b439190612b05565b611ff7565b600a546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152611b189183918691611a8e916e0100000000000000000000000000009091046dffffffffffffffffffffffffffff169073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401611a3e565b50506001600b5550565b42841015611b8c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f506f636b6574537761703a2045585049524544000000000000000000000000006044820152606401610555565b60035473ffffffffffffffffffffffffffffffffffffffff8816600090815260046020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b919087611bec83612ec4565b9091555060408051602081019690965273ffffffffffffffffffffffffffffffffffffffff94851690860152929091166060840152608083015260a082015260c0810187905260e00160405160208183030381529060405280519060200120604051602001611c8d9291907f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015611d16573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811615801590611d9157508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611df7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f506f636b6574537761703a20494e56414c49445f5349474e41545552450000006044820152606401610555565b611e0289898961262b565b505050505050505050565b600b54600114611e79576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f506f636b6574537761703a204c4f434b454400000000000000000000000000006044820152606401610555565b6000600b556006546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152611ff09173ffffffffffffffffffffffffffffffffffffffff16906370a082319060240160206040518083038186803b158015611ee957600080fd5b505afa158015611efd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f219190612b05565b6007546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a082319060240160206040518083038186803b158015611f8a57600080fd5b505afa158015611f9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fc29190612b05565b600a546dffffffffffffffffffffffffffff808216916e01000000000000000000000000000090041661234f565b6001600b55565b604080518082018252601981527f7472616e7366657228616464726573732c75696e743235362900000000000000602091820152815173ffffffffffffffffffffffffffffffffffffffff85811660248301526044808301869052845180840390910181526064909201845291810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052915160009283928716916120be9190612bac565b6000604051808303816000865af19150503d80600081146120fb576040519150601f19603f3d011682016040523d82523d6000602084013e612100565b606091505b509150915081801561212a57508051158061212a57508080602001905181019061212a9190612ae5565b612190576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f506f636b6574537761703a205452414e534645525f4641494c454400000000006044820152606401610555565b5050505050565b60006121a38284612da9565b9392505050565b60006121a38284612de6565b604080518082018252601881527f617070726f766528616464726573732c75696e74323536290000000000000000602091820152815173ffffffffffffffffffffffffffffffffffffffff85811660248301526044808301869052845180840390910181526064909201845291810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b3000000000000000000000000000000000000000000000000000000001790529151600092839287169161227d9190612bac565b6000604051808303816000865af19150503d80600081146122ba576040519150601f19603f3d011682016040523d82523d6000602084013e6122bf565b606091505b50915091508180156122e95750805115806122e95750808060200190518101906122e99190612ae5565b612190576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f506f636b6574537761703a20415050524f56455f4641494c45440000000000006044820152606401610555565b6dffffffffffffffffffffffffffff841180159061237b57506dffffffffffffffffffffffffffff8311155b6123e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f506f636b6574537761703a204f564552464c4f570000000000000000000000006044820152606401610555565b60006123f264010000000042612efd565b600a5490915060009061242b907c0100000000000000000000000000000000000000000000000000000000900463ffffffff1683612dfd565b905060008163ffffffff1611801561245257506dffffffffffffffffffffffffffff841615155b801561246d57506dffffffffffffffffffffffffffff831615155b1561253b578063ffffffff166124aa8561248686612947565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1690612978565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166124d29190612da9565b600860008282546124e39190612cfe565b909155505063ffffffff81166124fc8461248687612947565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166125249190612da9565b600960008282546125359190612cfe565b90915550505b600a805463ffffffff84167c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff6dffffffffffffffffffffffffffff8981166e0100000000000000000000000000009081027fffffffff000000000000000000000000000000000000000000000000000000009095168c83161794909417918216831794859055604080519382169282169290921783529290930490911660208201527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a1505050505050565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600160205260409020546126ca90826121aa565b73ffffffffffffffffffffffffffffffffffffffff80851660009081526001602052604080822093909355908416815220546127069082612994565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061268d9085815260200190565b600060038211156127c85750806000612781600283612d51565b61278c906001612cfe565b90505b818110156127c2579050806002816127a78186612d51565b6127b19190612cfe565b6127bb9190612d51565b905061278f565b50919050565b81156127d2575060015b919050565b6000546127e49082612994565b600090815573ffffffffffffffffffffffffffffffffffffffff83168152600160205260409020546128169082612994565b73ffffffffffffffffffffffffffffffffffffffff83166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906128749085815260200190565b60405180910390a35050565b600081831061288f57816121a3565b5090919050565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600160205260409020546128c690826121aa565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260016020526040812091909155546128fa90826121aa565b600090815560405182815273ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001612874565b60006129726e0100000000000000000000000000006dffffffffffffffffffffffffffff8416612d65565b92915050565b60006121a36dffffffffffffffffffffffffffff831684612d16565b60006121a38284612cfe565b803573ffffffffffffffffffffffffffffffffffffffff811681146127d257600080fd5b6000602082840312156129d5578081fd5b6121a3826129a0565b600080604083850312156129f0578081fd5b6129f9836129a0565b9150612a07602084016129a0565b90509250929050565b600080600060608486031215612a24578081fd5b612a2d846129a0565b9250612a3b602085016129a0565b9150604084013590509250925092565b600080600080600080600060e0888a031215612a65578283fd5b612a6e886129a0565b9650612a7c602089016129a0565b95506040880135945060608801359350608088013560ff81168114612a9f578384fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215612ace578182fd5b612ad7836129a0565b946020939093013593505050565b600060208284031215612af6578081fd5b815180151581146121a3578182fd5b600060208284031215612b16578081fd5b5051919050565b600080600080600060808688031215612b34578081fd5b8535945060208601359350612b4b604087016129a0565b9250606086013567ffffffffffffffff80821115612b67578283fd5b818801915088601f830112612b7a578283fd5b813581811115612b88578384fd5b896020828501011115612b99578384fd5b9699959850939650602001949392505050565b60008251612bbe818460208701612e22565b9190910192915050565b7f4e4f4b2062213a20000000000000000000000000000000000000000000000000815260008251612c00816008850160208701612e22565b9190910160080192915050565b7f4e4f4b3a20000000000000000000000000000000000000000000000000000000815260008251612c45816005850160208701612e22565b9190910160050192915050565b6020815260008251806020840152612c71816040850160208701612e22565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b84815283602082015260606040820152816060820152818360808301376000818301608090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01601019392505050565b60008219821115612d1157612d11612f11565b500190565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff80841680612d4557612d45612f40565b92169190910492915050565b600082612d6057612d60612f40565b500490565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff80831681851681830481118215151615612da057612da0612f11565b02949350505050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612de157612de1612f11565b500290565b600082821015612df857612df8612f11565b500390565b600063ffffffff83811690831681811015612e1a57612e1a612f11565b039392505050565b60005b83811015612e3d578181015183820152602001612e25565b83811115612e4c576000848401525b50505050565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff82111715612ebd577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040525050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612ef657612ef6612f11565b5060010190565b600082612f0c57612f0c612f40565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600060033d1115612f8457600481823e5160e01c5b90565b600060443d1015612f955790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc803d016004833e81513d67ffffffffffffffff8160248401118184111715612fe357505050505090565b8285019150815181811115612ffb5750505050505090565b843d87010160208285010111156130155750505050505090565b61302460208286010187612e52565b50909594505050505056fea264697066735822122070afae3ff20ed06b5b3324ebeaa459f28c1b15b869af6c56075fca6a585afd2d64736f6c63430008040033a264697066735822122089e7ada9a7dae30152da9b8b7c4dafc17f1ea2285e5bb0be8da2addb688ae8f964736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6735:42",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:42",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:147:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:42"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:42"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "188:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "197:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "200:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "190:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "190:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "190:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "142:42:42",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:54:42"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:65:42"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:73:42"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:42"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:42",
                "type": ""
              }
            ],
            "src": "14:196:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "285:126:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "331:26:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "340:6:42"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "348:6:42"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "333:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "333:22:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "333:22:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "306:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "315:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "302:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "302:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "327:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "298:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "298:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "295:2:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "366:39:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "395:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "376:18:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "376:29:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "366:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "251:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "262:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "274:6:42",
                "type": ""
              }
            ],
            "src": "215:196:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "503:183:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "549:26:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "558:6:42"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "566:6:42"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "551:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "551:22:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "551:22:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "524:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "533:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "520:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "520:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "545:2:42",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "516:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "516:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "513:2:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "584:39:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "613:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "594:18:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "594:29:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "584:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "632:48:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "665:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "676:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "661:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "661:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "642:18:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "642:38:42"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "632:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "461:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "472:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "484:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "492:6:42",
                "type": ""
              }
            ],
            "src": "416:270:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "772:113:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "818:26:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "827:6:42"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "835:6:42"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "820:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "820:22:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "820:22:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "793:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "802:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "789:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "789:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "814:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "785:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "785:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "782:2:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "853:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "869:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "863:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "863:16:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "853:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "738:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "749:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "761:6:42",
                "type": ""
              }
            ],
            "src": "691:194:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "960:120:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1006:26:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1015:6:42"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1023:6:42"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1008:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1008:22:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1008:22:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "981:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "990:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "977:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "977:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1002:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "973:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "973:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "970:2:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1041:33:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1064:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1051:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1051:23:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1041:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "926:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "937:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "949:6:42",
                "type": ""
              }
            ],
            "src": "890:190:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1232:221:42",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1242:76:42",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1252:66:42",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1246:2:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1334:3:42"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1347:2:42",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1351:6:42"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1343:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1343:15:42"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1360:2:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1339:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1339:24:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1327:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1327:37:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1327:37:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1384:3:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1389:2:42",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1380:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1380:12:42"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1402:2:42",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "1406:6:42"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1398:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1398:15:42"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1415:2:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1394:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1394:24:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1373:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1373:46:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1373:46:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1428:19:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1439:3:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1444:2:42",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1435:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1435:12:42"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1428:3:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1200:3:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1205:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1213:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1224:3:42",
                "type": ""
              }
            ],
            "src": "1085:368:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1595:293:42",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1605:27:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1625:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1619:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1619:13:42"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1609:6:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1641:12:42",
                  "value": {
                    "name": "end",
                    "nodeType": "YulIdentifier",
                    "src": "1650:3:42"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1645:1:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1714:77:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "1739:3:42"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "1744:1:42"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1735:3:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1735:11:42"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1762:6:42"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "1770:1:42"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1758:3:42"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1758:14:42"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1774:4:42",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1754:3:42"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1754:25:42"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1748:5:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1748:32:42"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1728:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1728:53:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1728:53:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1673:1:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1676:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1670:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1670:13:42"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1684:21:42",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1686:17:42",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1695:1:42"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1698:4:42",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1691:3:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1691:12:42"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1686:1:42"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1666:3:42",
                    "statements": []
                  },
                  "src": "1662:129:42"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1817:33:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "1830:3:42"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "1835:6:42"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1826:3:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1826:16:42"
                            },
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "1844:3:42"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1819:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1819:29:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1819:29:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1806:1:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1809:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1803:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1803:13:42"
                  },
                  "nodeType": "YulIf",
                  "src": "1800:2:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1859:23:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1870:3:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1875:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1866:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1866:16:42"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1859:3:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1571:3:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1576:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1587:3:42",
                "type": ""
              }
            ],
            "src": "1458:430:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2169:315:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2186:3:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2191:66:42",
                        "type": "",
                        "value": "0xff00000000000000000000000000000000000000000000000000000000000000"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2179:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2179:79:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2179:79:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2278:3:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2283:1:42",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2274:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2274:11:42"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2295:2:42",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2299:6:42"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "2291:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2291:15:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2308:66:42",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2287:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2287:88:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2267:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2267:109:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2267:109:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2396:3:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2401:2:42",
                            "type": "",
                            "value": "21"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2392:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2392:12:42"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2406:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2385:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2385:28:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2385:28:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2433:3:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2438:2:42",
                            "type": "",
                            "value": "53"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2429:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2429:12:42"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2443:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2422:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2422:28:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2422:28:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2459:19:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2470:3:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2475:2:42",
                        "type": "",
                        "value": "85"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2466:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2466:12:42"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2459:3:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9_t_address_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2129:3:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2134:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2142:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2150:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2161:3:42",
                "type": ""
              }
            ],
            "src": "1893:591:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2590:125:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2600:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2612:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2623:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2608:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2608:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2600:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2642:9:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2657:6:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2665:42:42",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2653:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2653:55:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2635:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2635:74:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2635:74:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2559:9:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2570:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2581:4:42",
                "type": ""
              }
            ],
            "src": "2489:226:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2849:198:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2859:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2871:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2882:2:42",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2867:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2867:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2859:4:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2894:52:42",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2904:42:42",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2898:2:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2962:9:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2977:6:42"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2985:2:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2973:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2973:15:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2955:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2955:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2955:34:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3009:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3020:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3005:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3005:18:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3029:6:42"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3037:2:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3025:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3025:15:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2998:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2998:43:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2998:43:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2810:9:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2821:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2829:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2840:4:42",
                "type": ""
              }
            ],
            "src": "2720:327:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3181:168:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3191:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3203:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3214:2:42",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3199:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3199:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3191:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3233:9:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3248:6:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3256:42:42",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3244:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3244:55:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3226:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3226:74:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3226:74:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3320:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3331:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3316:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3316:18:42"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3336:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3309:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3309:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3309:34:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3142:9:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3153:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3161:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3172:4:42",
                "type": ""
              }
            ],
            "src": "3052:297:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3455:76:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3465:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3477:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3488:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3473:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3473:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3465:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3507:9:42"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3518:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3500:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3500:25:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3500:25:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3424:9:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3435:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3446:4:42",
                "type": ""
              }
            ],
            "src": "3354:177:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3710:168:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3727:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3738:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3720:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3720:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3720:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3761:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3772:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3757:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3757:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3777:2:42",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3750:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3750:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3750:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3800:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3811:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3796:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3796:18:42"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3816:20:42",
                        "type": "",
                        "value": "PocketSwap:BIG_FEE"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3789:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3789:48:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3789:48:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3846:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3858:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3869:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3854:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3854:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3846:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_33c061a661a44521cfee698bc43051a37c096d72760141586fd128cfff5a1b68__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3687:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3701:4:42",
                "type": ""
              }
            ],
            "src": "3536:342:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4057:173:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4074:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4085:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4067:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4067:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4067:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4108:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4119:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4104:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4104:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4124:2:42",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4097:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4097:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4097:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4147:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4158:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4143:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4143:18:42"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4163:25:42",
                        "type": "",
                        "value": "PocketSwap:ZERO_ADDRESS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4136:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4136:53:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4136:53:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4198:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4210:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4221:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4206:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4206:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4198:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4731d8511d262f833b94579fa1abe02d48270948b8b78240f3a067e4e083dc6b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4034:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4048:4:42",
                "type": ""
              }
            ],
            "src": "3883:347:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4409:180:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4426:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4437:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4419:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4419:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4419:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4460:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4471:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4456:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4456:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4476:2:42",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4449:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4449:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4449:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4499:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4510:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4495:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4495:18:42"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4515:32:42",
                        "type": "",
                        "value": "PocketSwap:IDENTICAL_ADDRESSES"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4488:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4488:60:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4488:60:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4557:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4569:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4580:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4565:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4565:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4557:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_660413ff4d4274da253761c3c946d45a6921e25aff3fc06e265b7d88794ed7e7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4386:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4400:4:42",
                "type": ""
              }
            ],
            "src": "4235:354:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4768:172:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4785:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4796:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4778:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4778:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4778:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4819:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4830:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4815:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4815:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4835:2:42",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4808:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4808:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4808:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4858:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4869:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4854:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4854:18:42"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4874:24:42",
                        "type": "",
                        "value": "PocketSwap:PAIR_EXISTS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4847:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4847:52:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4847:52:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4908:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4920:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4931:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4916:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4916:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4908:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7cf2583fb36fde00e0e020c7a768850f1f7a5ecbe5a4fca10dfaa1ae01828d45__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4745:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4759:4:42",
                "type": ""
              }
            ],
            "src": "4594:346:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5119:152:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5136:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5147:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5129:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5129:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5129:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5170:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5181:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5166:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5166:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5186:1:42",
                        "type": "",
                        "value": "3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5159:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5159:29:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5159:29:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5208:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5219:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5204:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5204:18:42"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5224:5:42",
                        "type": "",
                        "value": "WWZ"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5197:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5197:33:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5197:33:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5239:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5251:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5262:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5247:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5247:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5239:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8c2010f42d8dac65071feedcb5688aec27ffa81c4836fd36df15bd2dabf1df38__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5096:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5110:4:42",
                "type": ""
              }
            ],
            "src": "4945:326:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5450:170:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5467:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5478:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5460:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5460:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5460:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5501:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5512:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5497:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5497:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5517:2:42",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5490:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5490:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5490:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5540:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5551:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5536:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5536:18:42"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5556:22:42",
                        "type": "",
                        "value": "PocketSwap:FORBIDDEN"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5529:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5529:50:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5529:50:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5588:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5600:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5611:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5596:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5596:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5588:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5427:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5441:4:42",
                "type": ""
              }
            ],
            "src": "5276:344:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5726:76:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5736:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5748:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5759:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5744:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5744:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5736:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5778:9:42"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5789:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5771:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5771:25:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5771:25:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5695:9:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5706:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5717:4:42",
                "type": ""
              }
            ],
            "src": "5625:177:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5936:119:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5946:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5958:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5969:2:42",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5954:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5954:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5946:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5988:9:42"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5999:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5981:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5981:25:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5981:25:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6026:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6037:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6022:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6022:18:42"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6042:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6015:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6015:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6015:34:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5897:9:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5908:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5916:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5927:4:42",
                "type": ""
              }
            ],
            "src": "5807:248:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6106:228:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6137:168:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "6158:1:42"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6161:77:42",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6151:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6151:88:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6151:88:42"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6259:1:42",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6262:4:42",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6252:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6252:15:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6252:15:42"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "6287:1:42"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6290:4:42",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6280:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6280:15:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6280:15:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6126:1:42"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6119:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6119:9:42"
                  },
                  "nodeType": "YulIf",
                  "src": "6116:2:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6314:14:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6323:1:42"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6326:1:42"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "6319:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6319:9:42"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "6314:1:42"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6091:1:42",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6094:1:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "6100:1:42",
                "type": ""
              }
            ],
            "src": "6060:274:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6391:342:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6518:180:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "product",
                              "nodeType": "YulIdentifier",
                              "src": "6539:7:42"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6548:77:42",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6532:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6532:94:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6532:94:42"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6646:1:42",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6649:4:42",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6639:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6639:15:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6639:15:42"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "product",
                              "nodeType": "YulIdentifier",
                              "src": "6674:7:42"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6683:4:42",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6667:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6667:21:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6667:21:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "6422:1:42"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6415:6:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6415:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6408:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6408:17:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6430:1:42"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6437:66:42",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "6505:1:42"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "6433:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6433:74:42"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "6427:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6427:81:42"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6404:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6404:105:42"
                  },
                  "nodeType": "YulIf",
                  "src": "6401:2:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6707:20:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6722:1:42"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6725:1:42"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "6718:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6718:9:42"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "6707:7:42"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6370:1:42",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6373:1:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "6379:7:42",
                "type": ""
              }
            ],
            "src": "6339:394:42"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        end := add(pos, 40)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := end\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), end) }\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9_t_address_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, 0xff00000000000000000000000000000000000000000000000000000000000000)\n        mstore(add(pos, 1), and(shl(96, value0), 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000))\n        mstore(add(pos, 21), value1)\n        mstore(add(pos, 53), value2)\n        end := add(pos, 85)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_33c061a661a44521cfee698bc43051a37c096d72760141586fd128cfff5a1b68__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"PocketSwap:BIG_FEE\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4731d8511d262f833b94579fa1abe02d48270948b8b78240f3a067e4e083dc6b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"PocketSwap:ZERO_ADDRESS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_660413ff4d4274da253761c3c946d45a6921e25aff3fc06e265b7d88794ed7e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"PocketSwap:IDENTICAL_ADDRESSES\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7cf2583fb36fde00e0e020c7a768850f1f7a5ecbe5a4fca10dfaa1ae01828d45__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"PocketSwap:PAIR_EXISTS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8c2010f42d8dac65071feedcb5688aec27ffa81c4836fd36df15bd2dabf1df38__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 3)\n        mstore(add(headStart, 64), \"WWZ\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"PocketSwap:FORBIDDEN\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x)))\n        {\n            mstore(product, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(product, 0x24)\n        }\n        product := mul(x, y)\n    }\n}",
      "id": 42,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "181:2394:8:-:0;;;305:3;275:33;;485:53;;;;;;;;;-1:-1:-1;509:9:8;:22;;-1:-1:-1;;;;;;509:22:8;521:10;509:22;;;181:2394;;;;;;",
  "deployedSourceMap": "181:2394:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;444:34;;;;;;:::i;:::-;;:::i;:::-;;;2665:42:42;2653:55;;;2635:74;;2623:2;2608:18;444:34:8;;;;;;;;2428:145;;;:::i;:::-;;;3500:25:42;;;3488:2;3473:18;2428:145:8;3455:76:42;708:103:8;789:8;:15;708:103;;544:158;;;:::i;1966:230::-;;;;;;:::i;:::-;;:::i;:::-;;236:33;;;;;;;;;2202:220;;;;;;:::i;:::-;;:::i;817:1143::-;;;;;;:::i;:::-;;:::i;275:33::-;;;;;;367:71;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;444:34;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;444:34:8;:::o;2428:145::-;2481:7;2517:2;2507:3;;2513:1;2507:7;;;;:::i;:::-;:12;;;;:::i;:::-;2500:19;;2428:145;:::o;544:158::-;607:7;660:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;643:51;;660:33;;643:51;;:::i;:::-;;;;;;;;;;;;;633:62;;;;;;626:69;;544:158;:::o;1966:230::-;2046:9;;;;2032:10;:23;2024:56;;;;;;;5478:2:42;2024:56:8;;;5460:21:42;5517:2;5497:18;;;5490:30;5556:22;5536:18;;;5529:50;5596:18;;2024:56:8;;;;;;;;;2105:4;2098;:11;2090:42;;;;;;;3738:2:42;2090:42:8;;;3720:21:42;3777:2;3757:18;;;3750:30;3816:20;3796:18;;;3789:48;3854:18;;2090:42:8;3710:168:42;2090:42:8;2159:3;;2148:21;;;5981:25:42;;;6037:2;6022:18;;6015:34;;;2148:21:8;;5954:18:42;2148:21:8;;;;;;;2179:3;:10;1966:230::o;2202:220::-;2294:9;;;;2280:10;:23;2272:56;;;;;;;5478:2:42;2272:56:8;;;5460:21:42;5517:2;5497:18;;;5490:30;5556:22;5536:18;;;5529:50;5596:18;;2272:56:8;5450:170:42;2272:56:8;2361:9;;2344:39;;;2361:9;;;;2955:34:42;;3025:15;;;3020:2;3005:18;;2998:43;2344:39:8;;2867:18:42;2344:39:8;;;;;;;2393:9;:22;;;;;;;;;;;;;;;2202:220::o;817:1143::-;896:12;938:6;928:16;;:6;:16;;;;920:59;;;;;;;4437:2:42;920:59:8;;;4419:21:42;4476:2;4456:18;;;4449:30;4515:32;4495:18;;;4488:60;4565:18;;920:59:8;4409:180:42;920:59:8;990:14;1006;1033:6;1024:15;;:6;:15;;;:53;;1062:6;1070;1024:53;;;1043:6;1051;1024:53;989:88;;-1:-1:-1;989:88:8;-1:-1:-1;1095:20:8;;;1087:56;;;;;;;4085:2:42;1087:56:8;;;4067:21:42;4124:2;4104:18;;;4097:30;4163:25;4143:18;;;4136:53;4206:18;;1087:56:8;4057:173:42;1087:56:8;1161:37;:15;;;1196:1;1161:15;;;:7;:15;;;;;;;;:23;;;;;;;;;;;;:37;1153:72;;;;;;;4796:2:42;1153:72:8;;;4778:21:42;4835:2;4815:18;;;4808:30;4874:24;4854:18;;;4847:52;4916:18;;1153:72:8;4768:172:42;1153:72:8;1265:21;1289:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1252:66:42;1347:2;1343:15;;;1339:24;;1289:33:8;1357:32;;1327:37:42;1398:15;;;1394:24;1380:12;;;1373:46;1289:33:8;;-1:-1:-1;1332:12:8;;1435::42;;1357:32:8;;;;;;;;;;;;1347:43;;;;;;1332:58;;1478:4;1467:8;1461:15;1456:2;1446:8;1442:17;1439:1;1431:52;1503:47;;;;;:31;2973:15:42;;;1503:47:8;;;2955:34:42;3025:15;;;3005:18;;;2998:43;1423:60:8;;-1:-1:-1;1503:31:8;;;;;;2867:18:42;;1503:47:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1560:15:8;;;;;;;;:7;:15;;;;;;;;:23;;;;;;;;;;:30;;;;;;;;;;;;;;1600:15;;;;;;:23;;;;;;;;;:30;;;;;;;;1685:8;:19;;1560:30;1685:19;;;;;;;;;;;;;;;;-1:-1:-1;1731:57:8;1766:4;1568:6;1576;1731:26;:57::i;:::-;1723:65;;:4;:65;;;1715:81;;;;;;;5147:2:42;1715:81:8;;;5129:21:42;5186:1;5166:18;;;5159:29;5224:5;5204:18;;;5197:33;5247:18;;1715:81:8;5119:152:42;1715:81:8;1822:57;1857:4;1864:6;1872;1822:26;:57::i;:::-;1814:65;;:4;:65;;;1806:81;;;;;;;5147:2:42;1806:81:8;;;5129:21:42;5186:1;5166:18;;;5159:29;5224:5;5204:18;;;5197:33;5247:18;;1806:81:8;5119:152:42;1806:81:8;1937:8;:15;1903:50;;;;3244:55:42;;;3226:74;;3331:2;3316:18;;3309:34;;;;1903:50:8;;;;;;;;;3199:18:42;1903:50:8;;;;;;;817:1143;;;;;;;;:::o;565:675:31:-;661:12;686:14;702;729:6;720:15;;:6;:15;;;:53;;758:6;766;720:53;;;739:6;747;720:53;1031:32;;1252:66:42;1347:2;1343:15;;;1339:24;;1031:32:31;;;1327:37:42;1398:15;;;1394:24;1380:12;;;1373:46;685:88:31;;-1:-1:-1;685:88:31;-1:-1:-1;984:7:31;;1435:12:42;;1031:32:31;;;;;;;;;;;;1021:43;;;;;;1113:7;1094:47;;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;901:268;;2191:66:42;901:268:31;;;2179:79:42;2295:2;2291:15;;;;2308:66;2287:88;2274:11;;;2267:109;2392:12;;;2385:28;;;;2429:12;;;2422:28;2466:12;;901:268:31;;;;;;;;;;;;;866:325;;901:268;866:325;;;;;565:675;-1:-1:-1;;;;;;565:675:31:o;-1:-1:-1:-;;;;;;;;:::o;14:196:42:-;82:20;;142:42;131:54;;121:65;;111:2;;200:1;197;190:12;111:2;63:147;;;:::o;215:196::-;274:6;327:2;315:9;306:7;302:23;298:32;295:2;;;348:6;340;333:22;295:2;376:29;395:9;376:29;:::i;:::-;366:39;285:126;-1:-1:-1;;;285:126:42:o;416:270::-;484:6;492;545:2;533:9;524:7;520:23;516:32;513:2;;;566:6;558;551:22;513:2;594:29;613:9;594:29;:::i;:::-;584:39;;642:38;676:2;665:9;661:18;642:38;:::i;:::-;632:48;;503:183;;;;;:::o;691:194::-;761:6;814:2;802:9;793:7;789:23;785:32;782:2;;;835:6;827;820:22;782:2;-1:-1:-1;863:16:42;;772:113;-1:-1:-1;772:113:42:o;890:190::-;949:6;1002:2;990:9;981:7;977:23;973:32;970:2;;;1023:6;1015;1008:22;970:2;-1:-1:-1;1051:23:42;;960:120;-1:-1:-1;960:120:42:o;1458:430::-;1587:3;1625:6;1619:13;1650:3;1662:129;1676:6;1673:1;1670:13;1662:129;;;1774:4;1758:14;;;1754:25;;1748:32;1735:11;;;1728:53;1691:12;1662:129;;;1809:6;1806:1;1803:13;1800:2;;;1844:3;1835:6;1830:3;1826:16;1819:29;1800:2;-1:-1:-1;1866:16:42;;;;;1595:293;-1:-1:-1;;1595:293:42:o;6060:274::-;6100:1;6126;6116:2;;6161:77;6158:1;6151:88;6262:4;6259:1;6252:15;6290:4;6287:1;6280:15;6116:2;-1:-1:-1;6319:9:42;;6106:228::o;6339:394::-;6379:7;6505:1;6437:66;6433:74;6430:1;6427:81;6422:1;6415:9;6408:17;6404:105;6401:2;;;6548:77;6539:7;6532:94;6649:4;6646:1;6639:15;6683:4;6674:7;6667:21;6401:2;-1:-1:-1;6718:9:42;;6391:342::o",
  "source": "// SPDX-License-Identifier: Unlicensed\npragma solidity =0.8.4;\n\n\nimport './PocketSwapPair.sol';\nimport './interfaces/IPocketSwapFactory.sol';\nimport './libraries/PairAddress.sol';\n\ncontract PocketSwapFactory is IPocketSwapFactory {\n    address public override feeSetter;\n    uint256 public override fee = 3e6; // 1e9 = 100%; 1e8 = 10%; 1e7 = 1%; 1e6 = 0.1% ....\n\n    mapping(address => mapping(address => address)) public override getPair;\n    address[] public override allPairs;\n\n    constructor() {\n        feeSetter = msg.sender;\n    }\n\n    function PAIR_INIT_CODE_HASH() external override pure returns (bytes32) {\n        return keccak256(abi.encodePacked(type(PocketSwapPair).creationCode));\n    }\n\n    function allPairsLength() external override view returns (uint) {\n        return allPairs.length;\n    }\n\n    function createPair(address tokenA, address tokenB) external override returns (address pair) {\n        require(tokenA != tokenB, 'PocketSwap:IDENTICAL_ADDRESSES');\n        (address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\n        require(token0 != address(0), 'PocketSwap:ZERO_ADDRESS');\n        require(getPair[token0][token1] == address(0), 'PocketSwap:PAIR_EXISTS'); // single check is sufficient\n        bytes memory bytecode = type(PocketSwapPair).creationCode;\n        bytes32 salt = keccak256(abi.encodePacked(token0, token1));\n        assembly {\n            pair := create2(0, add(bytecode, 32), mload(bytecode), salt)\n        }\n\n        PocketSwapPair(pair).initialize(token0, token1);\n        getPair[token0][token1] = pair;\n        getPair[token1][token0] = pair; // populate mapping in the reverse direction\n        allPairs.push(pair);\n\n        require(pair == PairAddress.computeAddress(address(this), token0, token1), \"WWZ\");\n        require(pair == PairAddress.computeAddress(address(this), token1, token0), \"WWZ\");\n\n        emit PairCreated(token0, token1, pair, allPairs.length);\n    }\n\n    function setFee(uint256 _fee) external override {\n        require(msg.sender == feeSetter, 'PocketSwap:FORBIDDEN');\n        require(_fee < 1e18, 'PocketSwap:BIG_FEE');\n\n        emit FeeUpdated(fee, _fee);\n        fee = _fee;\n    }\n\n    function setFeeSetter(address _feeSetter) external override {\n        require(msg.sender == feeSetter, 'PocketSwap:FORBIDDEN');\n\n        emit FeeSetterUpdated(feeSetter, _feeSetter);\n        feeSetter = _feeSetter;\n    }\n\n    function holdersFee() external view override returns(uint256) {\n        return fee * 5 / 30; // POCKET holders are getting 5/30 of the fees\n    }\n}\n",
  "sourcePath": "/Users/ilyk/projects/midgardtech/xpocket-PocketSwap/PocketSwap/contracts/pocketswap/PocketSwapFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/pocketswap/PocketSwapFactory.sol",
    "exportedSymbols": {
      "IERC20": [
        694
      ],
      "IPocketSwapCallback": [
        4051
      ],
      "IPocketSwapERC20": [
        3673
      ],
      "IPocketSwapFactory": [
        3758
      ],
      "IPocketSwapPair": [
        3955
      ],
      "Math": [
        4450
      ],
      "PairAddress": [
        4514
      ],
      "PlainMath": [
        4673
      ],
      "PocketSwapERC20": [
        1790
      ],
      "PocketSwapFactory": [
        2063
      ],
      "PocketSwapPair": [
        3085
      ],
      "StorageData": [
        5382
      ],
      "UQ112x112": [
        5357
      ]
    },
    "id": 2064,
    "license": "Unlicensed",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1792,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:8"
      },
      {
        "absolutePath": "project:/contracts/pocketswap/PocketSwapPair.sol",
        "file": "./PocketSwapPair.sol",
        "id": 1793,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2064,
        "sourceUnit": 3086,
        "src": "65:30:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/pocketswap/interfaces/IPocketSwapFactory.sol",
        "file": "./interfaces/IPocketSwapFactory.sol",
        "id": 1794,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2064,
        "sourceUnit": 3759,
        "src": "96:45:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/pocketswap/libraries/PairAddress.sol",
        "file": "./libraries/PairAddress.sol",
        "id": 1795,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2064,
        "sourceUnit": 4515,
        "src": "142:37:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1796,
              "name": "IPocketSwapFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3758,
              "src": "211:18:8"
            },
            "id": 1797,
            "nodeType": "InheritanceSpecifier",
            "src": "211:18:8"
          }
        ],
        "contractDependencies": [
          3085
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2063,
        "linearizedBaseContracts": [
          2063,
          3758
        ],
        "name": "PocketSwapFactory",
        "nameLocation": "190:17:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              3717
            ],
            "constant": false,
            "functionSelector": "87cf3ef4",
            "id": 1800,
            "mutability": "mutable",
            "name": "feeSetter",
            "nameLocation": "260:9:8",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1799,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "251:8:8"
            },
            "scope": 2063,
            "src": "236:33:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1798,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "236:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3692
            ],
            "constant": false,
            "functionSelector": "ddca3f43",
            "id": 1804,
            "mutability": "mutable",
            "name": "fee",
            "nameLocation": "299:3:8",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1802,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "290:8:8"
            },
            "scope": 2063,
            "src": "275:33:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1801,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "275:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "336536",
              "id": 1803,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "305:3:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3000000_by_1",
                "typeString": "int_const 3000000"
              },
              "value": "3e6"
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3726
            ],
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 1811,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "431:7:8",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1810,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "422:8:8"
            },
            "scope": 2063,
            "src": "367:71:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 1809,
              "keyType": {
                "id": 1805,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "375:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "367:47:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 1808,
                "keyType": {
                  "id": 1806,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "394:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "386:27:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 1807,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "405:7:8",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3733
            ],
            "constant": false,
            "functionSelector": "1e3dd18b",
            "id": 1815,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "470:8:8",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1814,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "461:8:8"
            },
            "scope": 2063,
            "src": "444:34:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1812,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "444:7:8",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1813,
              "nodeType": "ArrayTypeName",
              "src": "444:9:8",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1823,
              "nodeType": "Block",
              "src": "499:39:8",
              "statements": [
                {
                  "expression": {
                    "id": 1821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1818,
                      "name": "feeSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1800,
                      "src": "509:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1819,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "521:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "521:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "509:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1822,
                  "nodeType": "ExpressionStatement",
                  "src": "509:22:8"
                }
              ]
            },
            "id": 1824,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "496:2:8"
            },
            "returnParameters": {
              "id": 1817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "499:0:8"
            },
            "scope": 2063,
            "src": "485:53:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3757
            ],
            "body": {
              "id": 1840,
              "nodeType": "Block",
              "src": "616:86:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1834,
                                  "name": "PocketSwapPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3085,
                                  "src": "665:14:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_PocketSwapPair_$3085_$",
                                    "typeString": "type(contract PocketSwapPair)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_PocketSwapPair_$3085_$",
                                    "typeString": "type(contract PocketSwapPair)"
                                  }
                                ],
                                "id": 1833,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967269,
                                "src": "660:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1835,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "660:20:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_PocketSwapPair_$3085",
                                "typeString": "type(contract PocketSwapPair)"
                              }
                            },
                            "id": 1836,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "creationCode",
                            "nodeType": "MemberAccess",
                            "src": "660:33:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 1831,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "643:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "643:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "643:51:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1830,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "633:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "633:62:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 1829,
                  "id": 1839,
                  "nodeType": "Return",
                  "src": "626:69:8"
                }
              ]
            },
            "functionSelector": "57b84f8c",
            "id": 1841,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PAIR_INIT_CODE_HASH",
            "nameLocation": "553:19:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1826,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "584:8:8"
            },
            "parameters": {
              "id": 1825,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "572:2:8"
            },
            "returnParameters": {
              "id": 1829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1828,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1841,
                  "src": "607:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1827,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "607:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "606:9:8"
            },
            "scope": 2063,
            "src": "544:158:8",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3738
            ],
            "body": {
              "id": 1850,
              "nodeType": "Block",
              "src": "772:39:8",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1847,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1815,
                      "src": "789:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 1848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "789:15:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1846,
                  "id": 1849,
                  "nodeType": "Return",
                  "src": "782:22:8"
                }
              ]
            },
            "functionSelector": "574f2ba3",
            "id": 1851,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nameLocation": "717:14:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1843,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "743:8:8"
            },
            "parameters": {
              "id": 1842,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "731:2:8"
            },
            "returnParameters": {
              "id": 1846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1845,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1851,
                  "src": "766:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1844,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "766:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "765:6:8"
            },
            "scope": 2063,
            "src": "708:103:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3747
            ],
            "body": {
              "id": 1993,
              "nodeType": "Block",
              "src": "910:1050:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1862,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1853,
                          "src": "928:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1863,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1855,
                          "src": "938:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "928:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b6574537761703a4944454e544943414c5f414444524553534553",
                        "id": 1865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "946:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_660413ff4d4274da253761c3c946d45a6921e25aff3fc06e265b7d88794ed7e7",
                          "typeString": "literal_string \"PocketSwap:IDENTICAL_ADDRESSES\""
                        },
                        "value": "PocketSwap:IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_660413ff4d4274da253761c3c946d45a6921e25aff3fc06e265b7d88794ed7e7",
                          "typeString": "literal_string \"PocketSwap:IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 1861,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "920:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "920:59:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1867,
                  "nodeType": "ExpressionStatement",
                  "src": "920:59:8"
                },
                {
                  "assignments": [
                    1869,
                    1871
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1869,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "998:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1993,
                      "src": "990:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1868,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "990:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1871,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "1014:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1993,
                      "src": "1006:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1870,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1006:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1882,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1872,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1853,
                        "src": "1024:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 1873,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1855,
                        "src": "1033:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1024:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 1878,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1855,
                          "src": "1062:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1879,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1853,
                          "src": "1070:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1880,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1061:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 1881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1024:53:8",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 1875,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1853,
                          "src": "1043:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1876,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1855,
                          "src": "1051:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1877,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1042:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "989:88:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1884,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1869,
                          "src": "1095:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1887,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1113:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1886,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1105:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1885,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1105:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1105:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1095:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b6574537761703a5a45524f5f41444452455353",
                        "id": 1890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1117:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4731d8511d262f833b94579fa1abe02d48270948b8b78240f3a067e4e083dc6b",
                          "typeString": "literal_string \"PocketSwap:ZERO_ADDRESS\""
                        },
                        "value": "PocketSwap:ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4731d8511d262f833b94579fa1abe02d48270948b8b78240f3a067e4e083dc6b",
                          "typeString": "literal_string \"PocketSwap:ZERO_ADDRESS\""
                        }
                      ],
                      "id": 1883,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1087:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1087:56:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1892,
                  "nodeType": "ExpressionStatement",
                  "src": "1087:56:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1894,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1811,
                              "src": "1161:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 1896,
                            "indexExpression": {
                              "id": 1895,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1869,
                              "src": "1169:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1161:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 1898,
                          "indexExpression": {
                            "id": 1897,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1871,
                            "src": "1177:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1161:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1901,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1196:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1900,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1188:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1899,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1188:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1188:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1161:37:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b6574537761703a504149525f455849535453",
                        "id": 1904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1200:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7cf2583fb36fde00e0e020c7a768850f1f7a5ecbe5a4fca10dfaa1ae01828d45",
                          "typeString": "literal_string \"PocketSwap:PAIR_EXISTS\""
                        },
                        "value": "PocketSwap:PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7cf2583fb36fde00e0e020c7a768850f1f7a5ecbe5a4fca10dfaa1ae01828d45",
                          "typeString": "literal_string \"PocketSwap:PAIR_EXISTS\""
                        }
                      ],
                      "id": 1893,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1153:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1153:72:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1906,
                  "nodeType": "ExpressionStatement",
                  "src": "1153:72:8"
                },
                {
                  "assignments": [
                    1908
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1908,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "1278:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1993,
                      "src": "1265:21:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1907,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1265:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1913,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1910,
                          "name": "PocketSwapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3085,
                          "src": "1294:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PocketSwapPair_$3085_$",
                            "typeString": "type(contract PocketSwapPair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_PocketSwapPair_$3085_$",
                            "typeString": "type(contract PocketSwapPair)"
                          }
                        ],
                        "id": 1909,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "1289:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 1911,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1289:20:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_PocketSwapPair_$3085",
                        "typeString": "type(contract PocketSwapPair)"
                      }
                    },
                    "id": 1912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1289:33:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1265:57:8"
                },
                {
                  "assignments": [
                    1915
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1915,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1340:4:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1993,
                      "src": "1332:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1914,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1332:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1923,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1919,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1869,
                            "src": "1374:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1920,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1871,
                            "src": "1382:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1917,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1357:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1357:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1357:32:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1916,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1347:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1347:43:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1332:58:8"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1409:84:8",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1423:60:8",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1439:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1446:8:8"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1456:2:8",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1442:3:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1442:17:8"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1467:8:8"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1461:5:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1461:15:8"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1478:4:8"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1431:7:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1431:52:8"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "1423:4:8"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 1908,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1446:8:8",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1908,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1467:8:8",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1859,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1423:4:8",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1915,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1478:4:8",
                      "valueSize": 1
                    }
                  ],
                  "id": 1924,
                  "nodeType": "InlineAssembly",
                  "src": "1400:93:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1929,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1869,
                        "src": "1535:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1930,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1871,
                        "src": "1543:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1926,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1859,
                            "src": "1518:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1925,
                          "name": "PocketSwapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3085,
                          "src": "1503:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PocketSwapPair_$3085_$",
                            "typeString": "type(contract PocketSwapPair)"
                          }
                        },
                        "id": 1927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1503:20:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PocketSwapPair_$3085",
                          "typeString": "contract PocketSwapPair"
                        }
                      },
                      "id": 1928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2277,
                      "src": "1503:31:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 1931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1503:47:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1932,
                  "nodeType": "ExpressionStatement",
                  "src": "1503:47:8"
                },
                {
                  "expression": {
                    "id": 1939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1933,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1811,
                          "src": "1560:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 1936,
                        "indexExpression": {
                          "id": 1934,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1869,
                          "src": "1568:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1560:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1937,
                      "indexExpression": {
                        "id": 1935,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1871,
                        "src": "1576:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1560:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1938,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1859,
                      "src": "1586:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1560:30:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1940,
                  "nodeType": "ExpressionStatement",
                  "src": "1560:30:8"
                },
                {
                  "expression": {
                    "id": 1947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1941,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1811,
                          "src": "1600:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 1944,
                        "indexExpression": {
                          "id": 1942,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1871,
                          "src": "1608:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1600:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1945,
                      "indexExpression": {
                        "id": 1943,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1869,
                        "src": "1616:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1600:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1946,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1859,
                      "src": "1626:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1600:30:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1948,
                  "nodeType": "ExpressionStatement",
                  "src": "1600:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1952,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1859,
                        "src": "1699:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1949,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1815,
                        "src": "1685:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1685:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 1953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1685:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1954,
                  "nodeType": "ExpressionStatement",
                  "src": "1685:19:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1956,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1859,
                          "src": "1723:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1961,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1766:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PocketSwapFactory_$2063",
                                    "typeString": "contract PocketSwapFactory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_PocketSwapFactory_$2063",
                                    "typeString": "contract PocketSwapFactory"
                                  }
                                ],
                                "id": 1960,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1758:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1959,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1758:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1962,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1758:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1963,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1869,
                              "src": "1773:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1964,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1871,
                              "src": "1781:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1957,
                              "name": "PairAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4514,
                              "src": "1731:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_PairAddress_$4514_$",
                                "typeString": "type(library PairAddress)"
                              }
                            },
                            "id": 1958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "computeAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4513,
                            "src": "1731:26:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_address_$",
                              "typeString": "function (address,address,address) pure returns (address)"
                            }
                          },
                          "id": 1965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1731:57:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1723:65:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57575a",
                        "id": 1967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1790:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c2010f42d8dac65071feedcb5688aec27ffa81c4836fd36df15bd2dabf1df38",
                          "typeString": "literal_string \"WWZ\""
                        },
                        "value": "WWZ"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8c2010f42d8dac65071feedcb5688aec27ffa81c4836fd36df15bd2dabf1df38",
                          "typeString": "literal_string \"WWZ\""
                        }
                      ],
                      "id": 1955,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1715:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1715:81:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1969,
                  "nodeType": "ExpressionStatement",
                  "src": "1715:81:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1971,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1859,
                          "src": "1814:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1976,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1857:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PocketSwapFactory_$2063",
                                    "typeString": "contract PocketSwapFactory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_PocketSwapFactory_$2063",
                                    "typeString": "contract PocketSwapFactory"
                                  }
                                ],
                                "id": 1975,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1849:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1974,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1849:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1977,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1849:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1978,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1871,
                              "src": "1864:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1979,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1869,
                              "src": "1872:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1972,
                              "name": "PairAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4514,
                              "src": "1822:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_PairAddress_$4514_$",
                                "typeString": "type(library PairAddress)"
                              }
                            },
                            "id": 1973,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "computeAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4513,
                            "src": "1822:26:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_address_$",
                              "typeString": "function (address,address,address) pure returns (address)"
                            }
                          },
                          "id": 1980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1822:57:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1814:65:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57575a",
                        "id": 1982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1881:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c2010f42d8dac65071feedcb5688aec27ffa81c4836fd36df15bd2dabf1df38",
                          "typeString": "literal_string \"WWZ\""
                        },
                        "value": "WWZ"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8c2010f42d8dac65071feedcb5688aec27ffa81c4836fd36df15bd2dabf1df38",
                          "typeString": "literal_string \"WWZ\""
                        }
                      ],
                      "id": 1970,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1806:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1806:81:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1984,
                  "nodeType": "ExpressionStatement",
                  "src": "1806:81:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1986,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1869,
                        "src": "1915:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1987,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1871,
                        "src": "1923:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1988,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1859,
                        "src": "1931:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1989,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1815,
                          "src": "1937:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 1990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1937:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1985,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3712,
                      "src": "1903:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 1991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1903:50:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1992,
                  "nodeType": "EmitStatement",
                  "src": "1898:55:8"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 1994,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "826:10:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1857,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "878:8:8"
            },
            "parameters": {
              "id": 1856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1853,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "845:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1994,
                  "src": "837:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1852,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "837:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1855,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "861:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1994,
                  "src": "853:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1854,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "853:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "836:32:8"
            },
            "returnParameters": {
              "id": 1860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1859,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "904:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1994,
                  "src": "896:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1858,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "896:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "895:14:8"
            },
            "scope": 2063,
            "src": "817:1143:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3702
            ],
            "body": {
              "id": 2024,
              "nodeType": "Block",
              "src": "2014:182:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2001,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2032:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2032:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2003,
                          "name": "feeSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1800,
                          "src": "2046:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2032:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b6574537761703a464f5242494444454e",
                        "id": 2005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2057:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060",
                          "typeString": "literal_string \"PocketSwap:FORBIDDEN\""
                        },
                        "value": "PocketSwap:FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060",
                          "typeString": "literal_string \"PocketSwap:FORBIDDEN\""
                        }
                      ],
                      "id": 2000,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2024:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2024:56:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2007,
                  "nodeType": "ExpressionStatement",
                  "src": "2024:56:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2009,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1996,
                          "src": "2098:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 2010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2105:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "2098:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b6574537761703a4249475f464545",
                        "id": 2012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2111:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_33c061a661a44521cfee698bc43051a37c096d72760141586fd128cfff5a1b68",
                          "typeString": "literal_string \"PocketSwap:BIG_FEE\""
                        },
                        "value": "PocketSwap:BIG_FEE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_33c061a661a44521cfee698bc43051a37c096d72760141586fd128cfff5a1b68",
                          "typeString": "literal_string \"PocketSwap:BIG_FEE\""
                        }
                      ],
                      "id": 2008,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2090:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2090:42:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2014,
                  "nodeType": "ExpressionStatement",
                  "src": "2090:42:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2016,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1804,
                        "src": "2159:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2017,
                        "name": "_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1996,
                        "src": "2164:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2015,
                      "name": "FeeUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3681,
                      "src": "2148:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 2018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2148:21:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2019,
                  "nodeType": "EmitStatement",
                  "src": "2143:26:8"
                },
                {
                  "expression": {
                    "id": 2022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2020,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1804,
                      "src": "2179:3:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2021,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1996,
                      "src": "2185:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2179:10:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2023,
                  "nodeType": "ExpressionStatement",
                  "src": "2179:10:8"
                }
              ]
            },
            "functionSelector": "69fe0e2d",
            "id": 2025,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFee",
            "nameLocation": "1975:6:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1998,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2005:8:8"
            },
            "parameters": {
              "id": 1997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1996,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "1990:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2025,
                  "src": "1982:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1995,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1982:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1981:14:8"
            },
            "returnParameters": {
              "id": 1999,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2014:0:8"
            },
            "scope": 2063,
            "src": "1966:230:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3752
            ],
            "body": {
              "id": 2048,
              "nodeType": "Block",
              "src": "2262:160:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2032,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2280:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2280:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2034,
                          "name": "feeSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1800,
                          "src": "2294:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2280:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b6574537761703a464f5242494444454e",
                        "id": 2036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2305:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060",
                          "typeString": "literal_string \"PocketSwap:FORBIDDEN\""
                        },
                        "value": "PocketSwap:FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060",
                          "typeString": "literal_string \"PocketSwap:FORBIDDEN\""
                        }
                      ],
                      "id": 2031,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2272:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2272:56:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2038,
                  "nodeType": "ExpressionStatement",
                  "src": "2272:56:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2040,
                        "name": "feeSetter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1800,
                        "src": "2361:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2041,
                        "name": "_feeSetter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2027,
                        "src": "2372:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2039,
                      "name": "FeeSetterUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3687,
                      "src": "2344:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 2042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2344:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2043,
                  "nodeType": "EmitStatement",
                  "src": "2339:44:8"
                },
                {
                  "expression": {
                    "id": 2046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2044,
                      "name": "feeSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1800,
                      "src": "2393:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2045,
                      "name": "_feeSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2027,
                      "src": "2405:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2393:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2047,
                  "nodeType": "ExpressionStatement",
                  "src": "2393:22:8"
                }
              ]
            },
            "functionSelector": "b19805af",
            "id": 2049,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeSetter",
            "nameLocation": "2211:12:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2029,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2253:8:8"
            },
            "parameters": {
              "id": 2028,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2027,
                  "mutability": "mutable",
                  "name": "_feeSetter",
                  "nameLocation": "2232:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2049,
                  "src": "2224:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2026,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2224:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2223:20:8"
            },
            "returnParameters": {
              "id": 2030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2262:0:8"
            },
            "scope": 2063,
            "src": "2202:220:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3697
            ],
            "body": {
              "id": 2061,
              "nodeType": "Block",
              "src": "2490:83:8",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2055,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1804,
                        "src": "2507:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "35",
                        "id": 2056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2513:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      "src": "2507:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3330",
                      "id": 2058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2517:2:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_30_by_1",
                        "typeString": "int_const 30"
                      },
                      "value": "30"
                    },
                    "src": "2507:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2054,
                  "id": 2060,
                  "nodeType": "Return",
                  "src": "2500:19:8"
                }
              ]
            },
            "functionSelector": "46870d2b",
            "id": 2062,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "holdersFee",
            "nameLocation": "2437:10:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2051,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2464:8:8"
            },
            "parameters": {
              "id": 2050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2447:2:8"
            },
            "returnParameters": {
              "id": 2054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2053,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2062,
                  "src": "2481:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2052,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2481:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2480:9:8"
            },
            "scope": 2063,
            "src": "2428:145:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2064,
        "src": "181:2394:8",
        "usedErrors": []
      }
    ],
    "src": "39:2537:8"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/pocketswap/PocketSwapFactory.sol",
    "exportedSymbols": {
      "IERC20": [
        694
      ],
      "IPocketSwapCallback": [
        4051
      ],
      "IPocketSwapERC20": [
        3673
      ],
      "IPocketSwapFactory": [
        3758
      ],
      "IPocketSwapPair": [
        3955
      ],
      "Math": [
        4450
      ],
      "PairAddress": [
        4514
      ],
      "PlainMath": [
        4673
      ],
      "PocketSwapERC20": [
        1790
      ],
      "PocketSwapFactory": [
        2063
      ],
      "PocketSwapPair": [
        3085
      ],
      "StorageData": [
        5382
      ],
      "UQ112x112": [
        5357
      ]
    },
    "id": 2064,
    "license": "Unlicensed",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1792,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:8"
      },
      {
        "absolutePath": "project:/contracts/pocketswap/PocketSwapPair.sol",
        "file": "./PocketSwapPair.sol",
        "id": 1793,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2064,
        "sourceUnit": 3086,
        "src": "65:30:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/pocketswap/interfaces/IPocketSwapFactory.sol",
        "file": "./interfaces/IPocketSwapFactory.sol",
        "id": 1794,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2064,
        "sourceUnit": 3759,
        "src": "96:45:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/pocketswap/libraries/PairAddress.sol",
        "file": "./libraries/PairAddress.sol",
        "id": 1795,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2064,
        "sourceUnit": 4515,
        "src": "142:37:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1796,
              "name": "IPocketSwapFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3758,
              "src": "211:18:8"
            },
            "id": 1797,
            "nodeType": "InheritanceSpecifier",
            "src": "211:18:8"
          }
        ],
        "contractDependencies": [
          3085
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2063,
        "linearizedBaseContracts": [
          2063,
          3758
        ],
        "name": "PocketSwapFactory",
        "nameLocation": "190:17:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              3717
            ],
            "constant": false,
            "functionSelector": "87cf3ef4",
            "id": 1800,
            "mutability": "mutable",
            "name": "feeSetter",
            "nameLocation": "260:9:8",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1799,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "251:8:8"
            },
            "scope": 2063,
            "src": "236:33:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1798,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "236:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3692
            ],
            "constant": false,
            "functionSelector": "ddca3f43",
            "id": 1804,
            "mutability": "mutable",
            "name": "fee",
            "nameLocation": "299:3:8",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1802,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "290:8:8"
            },
            "scope": 2063,
            "src": "275:33:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1801,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "275:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "336536",
              "id": 1803,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "305:3:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3000000_by_1",
                "typeString": "int_const 3000000"
              },
              "value": "3e6"
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3726
            ],
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 1811,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "431:7:8",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1810,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "422:8:8"
            },
            "scope": 2063,
            "src": "367:71:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 1809,
              "keyType": {
                "id": 1805,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "375:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "367:47:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 1808,
                "keyType": {
                  "id": 1806,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "394:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "386:27:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 1807,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "405:7:8",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3733
            ],
            "constant": false,
            "functionSelector": "1e3dd18b",
            "id": 1815,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "470:8:8",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1814,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "461:8:8"
            },
            "scope": 2063,
            "src": "444:34:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1812,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "444:7:8",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1813,
              "nodeType": "ArrayTypeName",
              "src": "444:9:8",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1823,
              "nodeType": "Block",
              "src": "499:39:8",
              "statements": [
                {
                  "expression": {
                    "id": 1821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1818,
                      "name": "feeSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1800,
                      "src": "509:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1819,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "521:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "521:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "509:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1822,
                  "nodeType": "ExpressionStatement",
                  "src": "509:22:8"
                }
              ]
            },
            "id": 1824,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "496:2:8"
            },
            "returnParameters": {
              "id": 1817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "499:0:8"
            },
            "scope": 2063,
            "src": "485:53:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3757
            ],
            "body": {
              "id": 1840,
              "nodeType": "Block",
              "src": "616:86:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1834,
                                  "name": "PocketSwapPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3085,
                                  "src": "665:14:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_PocketSwapPair_$3085_$",
                                    "typeString": "type(contract PocketSwapPair)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_PocketSwapPair_$3085_$",
                                    "typeString": "type(contract PocketSwapPair)"
                                  }
                                ],
                                "id": 1833,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967269,
                                "src": "660:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1835,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "660:20:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_PocketSwapPair_$3085",
                                "typeString": "type(contract PocketSwapPair)"
                              }
                            },
                            "id": 1836,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "creationCode",
                            "nodeType": "MemberAccess",
                            "src": "660:33:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 1831,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "643:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "643:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "643:51:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1830,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "633:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "633:62:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 1829,
                  "id": 1839,
                  "nodeType": "Return",
                  "src": "626:69:8"
                }
              ]
            },
            "functionSelector": "57b84f8c",
            "id": 1841,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PAIR_INIT_CODE_HASH",
            "nameLocation": "553:19:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1826,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "584:8:8"
            },
            "parameters": {
              "id": 1825,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "572:2:8"
            },
            "returnParameters": {
              "id": 1829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1828,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1841,
                  "src": "607:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1827,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "607:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "606:9:8"
            },
            "scope": 2063,
            "src": "544:158:8",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3738
            ],
            "body": {
              "id": 1850,
              "nodeType": "Block",
              "src": "772:39:8",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1847,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1815,
                      "src": "789:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 1848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "789:15:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1846,
                  "id": 1849,
                  "nodeType": "Return",
                  "src": "782:22:8"
                }
              ]
            },
            "functionSelector": "574f2ba3",
            "id": 1851,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nameLocation": "717:14:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1843,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "743:8:8"
            },
            "parameters": {
              "id": 1842,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "731:2:8"
            },
            "returnParameters": {
              "id": 1846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1845,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1851,
                  "src": "766:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1844,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "766:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "765:6:8"
            },
            "scope": 2063,
            "src": "708:103:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3747
            ],
            "body": {
              "id": 1993,
              "nodeType": "Block",
              "src": "910:1050:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1862,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1853,
                          "src": "928:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1863,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1855,
                          "src": "938:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "928:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b6574537761703a4944454e544943414c5f414444524553534553",
                        "id": 1865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "946:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_660413ff4d4274da253761c3c946d45a6921e25aff3fc06e265b7d88794ed7e7",
                          "typeString": "literal_string \"PocketSwap:IDENTICAL_ADDRESSES\""
                        },
                        "value": "PocketSwap:IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_660413ff4d4274da253761c3c946d45a6921e25aff3fc06e265b7d88794ed7e7",
                          "typeString": "literal_string \"PocketSwap:IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 1861,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "920:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "920:59:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1867,
                  "nodeType": "ExpressionStatement",
                  "src": "920:59:8"
                },
                {
                  "assignments": [
                    1869,
                    1871
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1869,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "998:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1993,
                      "src": "990:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1868,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "990:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1871,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "1014:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1993,
                      "src": "1006:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1870,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1006:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1882,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1872,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1853,
                        "src": "1024:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 1873,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1855,
                        "src": "1033:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1024:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 1878,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1855,
                          "src": "1062:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1879,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1853,
                          "src": "1070:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1880,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1061:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 1881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1024:53:8",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 1875,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1853,
                          "src": "1043:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1876,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1855,
                          "src": "1051:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1877,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1042:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "989:88:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1884,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1869,
                          "src": "1095:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1887,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1113:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1886,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1105:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1885,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1105:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1105:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1095:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b6574537761703a5a45524f5f41444452455353",
                        "id": 1890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1117:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4731d8511d262f833b94579fa1abe02d48270948b8b78240f3a067e4e083dc6b",
                          "typeString": "literal_string \"PocketSwap:ZERO_ADDRESS\""
                        },
                        "value": "PocketSwap:ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4731d8511d262f833b94579fa1abe02d48270948b8b78240f3a067e4e083dc6b",
                          "typeString": "literal_string \"PocketSwap:ZERO_ADDRESS\""
                        }
                      ],
                      "id": 1883,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1087:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1087:56:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1892,
                  "nodeType": "ExpressionStatement",
                  "src": "1087:56:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1894,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1811,
                              "src": "1161:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 1896,
                            "indexExpression": {
                              "id": 1895,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1869,
                              "src": "1169:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1161:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 1898,
                          "indexExpression": {
                            "id": 1897,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1871,
                            "src": "1177:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1161:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1901,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1196:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1900,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1188:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1899,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1188:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1188:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1161:37:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b6574537761703a504149525f455849535453",
                        "id": 1904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1200:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7cf2583fb36fde00e0e020c7a768850f1f7a5ecbe5a4fca10dfaa1ae01828d45",
                          "typeString": "literal_string \"PocketSwap:PAIR_EXISTS\""
                        },
                        "value": "PocketSwap:PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7cf2583fb36fde00e0e020c7a768850f1f7a5ecbe5a4fca10dfaa1ae01828d45",
                          "typeString": "literal_string \"PocketSwap:PAIR_EXISTS\""
                        }
                      ],
                      "id": 1893,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1153:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1153:72:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1906,
                  "nodeType": "ExpressionStatement",
                  "src": "1153:72:8"
                },
                {
                  "assignments": [
                    1908
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1908,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "1278:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1993,
                      "src": "1265:21:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1907,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1265:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1913,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1910,
                          "name": "PocketSwapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3085,
                          "src": "1294:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PocketSwapPair_$3085_$",
                            "typeString": "type(contract PocketSwapPair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_PocketSwapPair_$3085_$",
                            "typeString": "type(contract PocketSwapPair)"
                          }
                        ],
                        "id": 1909,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "1289:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 1911,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1289:20:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_PocketSwapPair_$3085",
                        "typeString": "type(contract PocketSwapPair)"
                      }
                    },
                    "id": 1912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1289:33:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1265:57:8"
                },
                {
                  "assignments": [
                    1915
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1915,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1340:4:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1993,
                      "src": "1332:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1914,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1332:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1923,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1919,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1869,
                            "src": "1374:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1920,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1871,
                            "src": "1382:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1917,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1357:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1357:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1357:32:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1916,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1347:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1347:43:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1332:58:8"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1409:84:8",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1423:60:8",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1439:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1446:8:8"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1456:2:8",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1442:3:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1442:17:8"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1467:8:8"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1461:5:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1461:15:8"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1478:4:8"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1431:7:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1431:52:8"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "1423:4:8"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 1908,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1446:8:8",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1908,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1467:8:8",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1859,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1423:4:8",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1915,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1478:4:8",
                      "valueSize": 1
                    }
                  ],
                  "id": 1924,
                  "nodeType": "InlineAssembly",
                  "src": "1400:93:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1929,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1869,
                        "src": "1535:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1930,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1871,
                        "src": "1543:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1926,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1859,
                            "src": "1518:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1925,
                          "name": "PocketSwapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3085,
                          "src": "1503:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PocketSwapPair_$3085_$",
                            "typeString": "type(contract PocketSwapPair)"
                          }
                        },
                        "id": 1927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1503:20:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PocketSwapPair_$3085",
                          "typeString": "contract PocketSwapPair"
                        }
                      },
                      "id": 1928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2277,
                      "src": "1503:31:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 1931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1503:47:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1932,
                  "nodeType": "ExpressionStatement",
                  "src": "1503:47:8"
                },
                {
                  "expression": {
                    "id": 1939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1933,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1811,
                          "src": "1560:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 1936,
                        "indexExpression": {
                          "id": 1934,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1869,
                          "src": "1568:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1560:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1937,
                      "indexExpression": {
                        "id": 1935,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1871,
                        "src": "1576:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1560:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1938,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1859,
                      "src": "1586:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1560:30:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1940,
                  "nodeType": "ExpressionStatement",
                  "src": "1560:30:8"
                },
                {
                  "expression": {
                    "id": 1947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1941,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1811,
                          "src": "1600:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 1944,
                        "indexExpression": {
                          "id": 1942,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1871,
                          "src": "1608:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1600:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1945,
                      "indexExpression": {
                        "id": 1943,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1869,
                        "src": "1616:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1600:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1946,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1859,
                      "src": "1626:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1600:30:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1948,
                  "nodeType": "ExpressionStatement",
                  "src": "1600:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1952,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1859,
                        "src": "1699:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1949,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1815,
                        "src": "1685:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1685:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 1953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1685:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1954,
                  "nodeType": "ExpressionStatement",
                  "src": "1685:19:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1956,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1859,
                          "src": "1723:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1961,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1766:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PocketSwapFactory_$2063",
                                    "typeString": "contract PocketSwapFactory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_PocketSwapFactory_$2063",
                                    "typeString": "contract PocketSwapFactory"
                                  }
                                ],
                                "id": 1960,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1758:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1959,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1758:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1962,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1758:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1963,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1869,
                              "src": "1773:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1964,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1871,
                              "src": "1781:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1957,
                              "name": "PairAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4514,
                              "src": "1731:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_PairAddress_$4514_$",
                                "typeString": "type(library PairAddress)"
                              }
                            },
                            "id": 1958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "computeAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4513,
                            "src": "1731:26:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_address_$",
                              "typeString": "function (address,address,address) pure returns (address)"
                            }
                          },
                          "id": 1965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1731:57:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1723:65:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57575a",
                        "id": 1967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1790:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c2010f42d8dac65071feedcb5688aec27ffa81c4836fd36df15bd2dabf1df38",
                          "typeString": "literal_string \"WWZ\""
                        },
                        "value": "WWZ"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8c2010f42d8dac65071feedcb5688aec27ffa81c4836fd36df15bd2dabf1df38",
                          "typeString": "literal_string \"WWZ\""
                        }
                      ],
                      "id": 1955,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1715:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1715:81:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1969,
                  "nodeType": "ExpressionStatement",
                  "src": "1715:81:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1971,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1859,
                          "src": "1814:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1976,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1857:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PocketSwapFactory_$2063",
                                    "typeString": "contract PocketSwapFactory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_PocketSwapFactory_$2063",
                                    "typeString": "contract PocketSwapFactory"
                                  }
                                ],
                                "id": 1975,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1849:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1974,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1849:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1977,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1849:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1978,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1871,
                              "src": "1864:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1979,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1869,
                              "src": "1872:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1972,
                              "name": "PairAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4514,
                              "src": "1822:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_PairAddress_$4514_$",
                                "typeString": "type(library PairAddress)"
                              }
                            },
                            "id": 1973,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "computeAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4513,
                            "src": "1822:26:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_address_$",
                              "typeString": "function (address,address,address) pure returns (address)"
                            }
                          },
                          "id": 1980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1822:57:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1814:65:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57575a",
                        "id": 1982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1881:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c2010f42d8dac65071feedcb5688aec27ffa81c4836fd36df15bd2dabf1df38",
                          "typeString": "literal_string \"WWZ\""
                        },
                        "value": "WWZ"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8c2010f42d8dac65071feedcb5688aec27ffa81c4836fd36df15bd2dabf1df38",
                          "typeString": "literal_string \"WWZ\""
                        }
                      ],
                      "id": 1970,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1806:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1806:81:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1984,
                  "nodeType": "ExpressionStatement",
                  "src": "1806:81:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1986,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1869,
                        "src": "1915:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1987,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1871,
                        "src": "1923:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1988,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1859,
                        "src": "1931:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1989,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1815,
                          "src": "1937:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 1990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1937:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1985,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3712,
                      "src": "1903:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 1991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1903:50:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1992,
                  "nodeType": "EmitStatement",
                  "src": "1898:55:8"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 1994,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "826:10:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1857,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "878:8:8"
            },
            "parameters": {
              "id": 1856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1853,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "845:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1994,
                  "src": "837:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1852,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "837:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1855,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "861:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1994,
                  "src": "853:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1854,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "853:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "836:32:8"
            },
            "returnParameters": {
              "id": 1860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1859,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "904:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1994,
                  "src": "896:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1858,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "896:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "895:14:8"
            },
            "scope": 2063,
            "src": "817:1143:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3702
            ],
            "body": {
              "id": 2024,
              "nodeType": "Block",
              "src": "2014:182:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2001,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2032:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2032:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2003,
                          "name": "feeSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1800,
                          "src": "2046:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2032:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b6574537761703a464f5242494444454e",
                        "id": 2005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2057:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060",
                          "typeString": "literal_string \"PocketSwap:FORBIDDEN\""
                        },
                        "value": "PocketSwap:FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060",
                          "typeString": "literal_string \"PocketSwap:FORBIDDEN\""
                        }
                      ],
                      "id": 2000,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2024:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2024:56:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2007,
                  "nodeType": "ExpressionStatement",
                  "src": "2024:56:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2009,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1996,
                          "src": "2098:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 2010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2105:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "2098:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b6574537761703a4249475f464545",
                        "id": 2012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2111:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_33c061a661a44521cfee698bc43051a37c096d72760141586fd128cfff5a1b68",
                          "typeString": "literal_string \"PocketSwap:BIG_FEE\""
                        },
                        "value": "PocketSwap:BIG_FEE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_33c061a661a44521cfee698bc43051a37c096d72760141586fd128cfff5a1b68",
                          "typeString": "literal_string \"PocketSwap:BIG_FEE\""
                        }
                      ],
                      "id": 2008,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2090:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2090:42:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2014,
                  "nodeType": "ExpressionStatement",
                  "src": "2090:42:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2016,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1804,
                        "src": "2159:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2017,
                        "name": "_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1996,
                        "src": "2164:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2015,
                      "name": "FeeUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3681,
                      "src": "2148:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 2018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2148:21:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2019,
                  "nodeType": "EmitStatement",
                  "src": "2143:26:8"
                },
                {
                  "expression": {
                    "id": 2022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2020,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1804,
                      "src": "2179:3:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2021,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1996,
                      "src": "2185:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2179:10:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2023,
                  "nodeType": "ExpressionStatement",
                  "src": "2179:10:8"
                }
              ]
            },
            "functionSelector": "69fe0e2d",
            "id": 2025,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFee",
            "nameLocation": "1975:6:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1998,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2005:8:8"
            },
            "parameters": {
              "id": 1997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1996,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "1990:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2025,
                  "src": "1982:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1995,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1982:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1981:14:8"
            },
            "returnParameters": {
              "id": 1999,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2014:0:8"
            },
            "scope": 2063,
            "src": "1966:230:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3752
            ],
            "body": {
              "id": 2048,
              "nodeType": "Block",
              "src": "2262:160:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2032,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2280:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2280:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2034,
                          "name": "feeSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1800,
                          "src": "2294:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2280:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f636b6574537761703a464f5242494444454e",
                        "id": 2036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2305:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060",
                          "typeString": "literal_string \"PocketSwap:FORBIDDEN\""
                        },
                        "value": "PocketSwap:FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_af25121378fa7197015a61202102504b4bd16a43f2c66f03ae1c0db28f066060",
                          "typeString": "literal_string \"PocketSwap:FORBIDDEN\""
                        }
                      ],
                      "id": 2031,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2272:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2272:56:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2038,
                  "nodeType": "ExpressionStatement",
                  "src": "2272:56:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2040,
                        "name": "feeSetter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1800,
                        "src": "2361:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2041,
                        "name": "_feeSetter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2027,
                        "src": "2372:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2039,
                      "name": "FeeSetterUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3687,
                      "src": "2344:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 2042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2344:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2043,
                  "nodeType": "EmitStatement",
                  "src": "2339:44:8"
                },
                {
                  "expression": {
                    "id": 2046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2044,
                      "name": "feeSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1800,
                      "src": "2393:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2045,
                      "name": "_feeSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2027,
                      "src": "2405:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2393:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2047,
                  "nodeType": "ExpressionStatement",
                  "src": "2393:22:8"
                }
              ]
            },
            "functionSelector": "b19805af",
            "id": 2049,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeSetter",
            "nameLocation": "2211:12:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2029,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2253:8:8"
            },
            "parameters": {
              "id": 2028,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2027,
                  "mutability": "mutable",
                  "name": "_feeSetter",
                  "nameLocation": "2232:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2049,
                  "src": "2224:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2026,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2224:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2223:20:8"
            },
            "returnParameters": {
              "id": 2030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2262:0:8"
            },
            "scope": 2063,
            "src": "2202:220:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3697
            ],
            "body": {
              "id": 2061,
              "nodeType": "Block",
              "src": "2490:83:8",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2055,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1804,
                        "src": "2507:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "35",
                        "id": 2056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2513:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      "src": "2507:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3330",
                      "id": 2058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2517:2:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_30_by_1",
                        "typeString": "int_const 30"
                      },
                      "value": "30"
                    },
                    "src": "2507:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2054,
                  "id": 2060,
                  "nodeType": "Return",
                  "src": "2500:19:8"
                }
              ]
            },
            "functionSelector": "46870d2b",
            "id": 2062,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "holdersFee",
            "nameLocation": "2437:10:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2051,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2464:8:8"
            },
            "parameters": {
              "id": 2050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2447:2:8"
            },
            "returnParameters": {
              "id": 2054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2053,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2062,
                  "src": "2481:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2052,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2481:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2480:9:8"
            },
            "scope": 2063,
            "src": "2428:145:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2064,
        "src": "181:2394:8",
        "usedErrors": []
      }
    ],
    "src": "39:2537:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-12-17T16:23:51.131Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}